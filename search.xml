<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【搞笑】博客中js音乐播放问题</title>
      <link href="/fe476b11/"/>
      <url>/fe476b11/</url>
      
        <content type="html"><![CDATA[<h2 id="bug">BUG</h2><p>在本地主机上可以使用Web <em>Audio</em> API中的 .play 播放音乐直链的音频，但在安全域名上则不行，控制台显示410错误。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220824182637591.png" alt="控制台报错"></p><h2 id="分析">分析</h2><p>因为在本地主机上可以访问直链，首先排除直链的问题。然后我怀疑是音频加载和dom节点的加载有时间差，导致无法播放，使用 setTimeout 延迟播放后还是不行。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123; xxx; &#125;, <span class="number">5000</span>);  <span class="comment">//5秒后将会调用执行xxx函数</span></span><br></pre></td></tr></table></figure><p>我们先分析下410和404。</p><p>404代码表示请求的资源当前不可用，但它可能在未来的请求中可用。相反，410代码是一个明确的指示，表明所请求的资源曾经存在，但它已被永久删除并且不会将来可用。因此，404响应代码表示用户代理（浏览器）可以重复对同一资源的请求URI，而 410告诉用户代理不要重复对同一资源的请求。</p><p>难道资源真的没了？于是我直接打开了那个音频的直链，结果真的是410，笑死我了，原来直链真的崩了，我猜测直链是有生命周期的，每隔一段时间就会更新。但是奇怪的是在本地主机上访问直链可以，就很离谱，咱也不懂，咱也不敢问。</p><h2 id="解决方法">解决方法</h2><p>打算换个直链，我找了半天酷我的api，找了半天没找到，就找到一个跨域的，直接用js不行，先贴上网站以后备用吧。<a href="https://www.homedt.net/25515.html">https://www.homedt.net/25515.html</a></p><p>后来我发现一个<a href="https://www.codeleading.com/article/60082581961/">教程</a>，听说网易云的直链很好扒，于是就换成了网易云的直链了，真的可以了（不过还是只能解析非会员的。</p>]]></content>
      
      
      <categories>
          
          <category> 问题修复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ford-Fulkerson算法实践</title>
      <link href="/5c5a2704/"/>
      <url>/5c5a2704/</url>
      
        <content type="html"><![CDATA[<h1>项目要求</h1><ol><li>利用网络中有限的流表测量网络中所有流的大小；</li><li>使用最大匹配算法求解测量方案；</li><li>将测量到的流大小在可视化平台上进行展示。</li></ol><h1>Ford-Fulkerson 算法</h1><h2 id="基本思想">基本思想</h2><p>最大流问题，一种组合最优化问题，就是要讨论如何充分利用装置的能力， 使得运输的流量最大，以取得最好的效果。而对于所有边的权重都非负的图来说，最大流问题需要解决的就是在每个边都对流量有所限制的前提下，最多能将多少流从起点输送到终点。</p><p>在图中有以下规则：除了源和终点以外，其他每个点的流入等于流出；所有边的流量都不超过运载值。</p><p>求出最大流的方法有很多。其中，Ford-Fulkerson 方法，即增广路方法， 简称 FF 方法是一种基础的求最大流方法。它的精髓就是加了一条反向边，加速了寻找最优路径的过程。哪怕一开始我们选择的路径是错误的，我们也可以通过后悔边不断去修正这个错误，以此达到最后正确的结果（把所有错误的情况修正了，就是正确的结果之一）。</p><p>其核心思路是：每次找出一条从源到汇的能够增加流的路径，调整流值和残留网络，不断调整直到没有增广路为止。简单来说就是，通过 DFS 或者 BFS 増广，直到不能増广为止。FF 方法的基础是：增广路定理——网络达到最大流， 当且仅当残留网络中没有增广路。</p><h2 id="基本步骤">基本步骤</h2><ol><li>给每条有向边初始化一条容量为 0 的反向边。并且初始化设置起点为已经访问过</li><li>开始从起点进行 DFS，对和顶点相连的边进行检查，如果下个顶点未被访问并且此条边仍有流量就走这条边，记录此边容量并与之前的记录进行比较（没有比较就直接记录），取其中容量最小值，并以此顶点为起点进行下一轮 DFS，即进入（1）。</li><li>当 DFS 进行不下去，也就是到达终点时，对沿路的所有边容量，全部减去（2）中记录的容量最小值，并且给每条边的反向边容量增加同样大小的容量，并且将（2）中记录的容量最小值进行累加。</li><li>当整个循环过程完成，说明以源为起点无法继续找到可行的能到达终点的增广路径，则算法结束。（3）中累加所得的最终值即为最大流的量。</li></ol><h2 id="示例">示例</h2><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220823192133709.png" alt="示例拓扑图"></p><p>对上图，设置 1 和 5 分别为源点和终点，进行 FF 算法。</p><ol><li>以 sum 记录最大流的量，初始化 sum=0。以 flow 记录单次 DFS 中发现的最小容量，flow=0；</li><li>从 1 进行 DFS,先寻找到 1-&gt;2-&gt;3-&gt;5 这条路，flow=min(4,2,4),即 flow=2，让 sum 值加上 2，并且将 1-&gt;2 修改为 2，2-&gt;3 修改为 0，3-&gt;5 修改为 2，并且对应地增加反向边容量。</li><li>继续，接下来发现 1-&gt;2-&gt;4-&gt;5 这条路，flow=2,sum=4,同样减少正向边容量，增加反向边容量。</li><li>继续，接下来发现 1-&gt;3-&gt;5 这条路，flow=2，sum=6，同样减少正向边容量，增加反向边容量。</li><li>继续，接下来发现 1-&gt;3-&gt;2-&gt;4-&gt;5 这条路（这里走了反向边 3-&gt;2， 容量为 2），flow=1，sum=7，同样减少正向边容量，增加反向边容量。</li><li>此时图变为如下图，可以看出，此时没有正向路径能让 1 推送流到 5， 则算法结束，最大流大小为 7。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220823192209015.png" alt="剩余网络图"></p><h1>算法实现</h1><h2 id="实现思路">实现思路</h2><p>EK 算法作为 FF 算法的一个特例，是在 FF 方法基础上，通过 dijkstra 选择跳数最短路来作为优先选择的遍历路径，以此来降低发现最大流所需的时间。故而主要的代码包括 dijkstra 跳数最短路的选取和 FF 的调用两部分，除此之外，要实现要求的功能，还需要计算最大流中流量最大的路径以及最大流的流量，以及当反向边上发生“反悔”事件时，还需要记录抵消的路径和打印真实路径。</p><h2 id="代码实现">代码实现</h2><h3 id="dijkstra-发现跳数最短路">dijkstra 发现跳数最短路</h3><p>（1）节点信息的初始化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">dijkstra</span>(<span class="params">self, src_mac, dst_mac, rest</span>): <span class="number">2.</span> <span class="number">3.</span> run = dst_mac <span class="comment">#从宿点开始找</span></span><br><span class="line">nodeinfo = &#123;&#125;</span><br><span class="line">    nodeinfo.setdefault(src_mac, &#123;&#125;)</span><br><span class="line">    nodeinfo.setdefault(dst_mac, &#123;&#125;)</span><br><span class="line">    <span class="comment">#此处的源点和宿点均指相对于所要找的路径</span></span><br><span class="line">    nodeinfo[src_mac].setdefault(<span class="string">&#x27;height&#x27;</span>, <span class="number">99999999</span>) <span class="comment">#源点距宿点的跳数设为无穷大</span></span><br><span class="line">    nodeinfo[src_mac].setdefault(<span class="string">&#x27;unchecked&#x27;</span>, <span class="number">1</span>) <span class="comment">#源点初始化为未标记</span></span><br><span class="line">    nodeinfo[src_mac].setdefault(<span class="string">&#x27;father&#x27;</span>, -<span class="number">1</span>) <span class="comment">#父节点为空</span></span><br><span class="line">    nodeinfo[dst_mac].setdefault(<span class="string">&#x27;height&#x27;</span>, <span class="number">0</span>) <span class="comment">#宿点离自己的跳数为 0</span></span><br><span class="line">    nodeinfo[dst_mac].setdefault(<span class="string">&#x27;unchecked&#x27;</span>, <span class="number">0</span>) <span class="comment">#宿点初始化为已标记</span></span><br><span class="line">    nodeinfo[dst_mac].setdefault(<span class="string">&#x27;father&#x27;</span>, -<span class="number">1</span>)<span class="comment">#宿点父节点为空</span></span><br></pre></td></tr></table></figure><p>（2）发现最短路</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> run != src_mac: </span><br><span class="line">    <span class="keyword">for</span> neighbor <span class="keyword">in</span> self.adjacent[run]:</span><br><span class="line">        nodeinfo.setdefault(neighbor, &#123;&#125;)</span><br><span class="line">        nodeinfo[neighbor].setdefault(<span class="string">&#x27;height&#x27;</span>, <span class="number">9999999</span>)</span><br><span class="line">        nodeinfo[neighbor].setdefault(<span class="string">&#x27;unchecked&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">        nodeinfo[neighbor].setdefault(<span class="string">&#x27;father&#x27;</span>, -<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> self.links: </span><br><span class="line">            <span class="keyword">if</span> link[<span class="string">&#x27;src_dpid&#x27;</span>] == run <span class="keyword">and</span> link[<span class="string">&#x27;dst_dpid&#x27;</span>] == neighbor: </span><br><span class="line">                <span class="keyword">if</span> nodeinfo[neighbor][<span class="string">&#x27;height&#x27;</span>] &gt; nodeinfo[run][<span class="string">&#x27;height&#x27;</span>]+<span class="number">1</span> <span class="keyword">and</span> rest[link[<span class="string">&#x27;dst_dpid&#x27;</span>]][link[<span class="string">&#x27;src_dpid&#x27;</span>]] &gt; <span class="number">0</span>:<span class="comment">#防止成环，以及发现路径</span></span><br><span class="line">                    nodeinfo[neighbor][<span class="string">&#x27;height&#x27;</span>] = nodeinfo[run][<span class="string">&#x27;height&#x27;</span>]+<span class="number">1</span><span class="comment">#跳数加一</span></span><br><span class="line">                    nodeinfo[neighbor][<span class="string">&#x27;father&#x27;</span>] = run<span class="comment">#更新父节点</span></span><br><span class="line">                <span class="keyword">break</span> <span class="comment">#update 操作</span></span><br><span class="line">                <span class="comment">#寻找最短跳数</span></span><br><span class="line">        min_height = <span class="number">99999</span></span><br><span class="line">        <span class="keyword">for</span> new_run <span class="keyword">in</span> nodeinfo.keys(): </span><br><span class="line">            <span class="keyword">if</span> nodeinfo[new_run][<span class="string">&#x27;unchecked&#x27;</span>] <span class="keyword">and</span> nodeinfo[new_run][<span class="string">&#x27;height&#x27;</span>] &lt; min_height: </span><br><span class="line">                min_height = nodeinfo[new_run][<span class="string">&#x27;height&#x27;</span>]</span><br><span class="line">                run = new_run </span><br><span class="line">        <span class="keyword">if</span> nodeinfo[run][<span class="string">&#x27;unchecked&#x27;</span>]: </span><br><span class="line">            nodeinfo[run][<span class="string">&#x27;unchecked&#x27;</span>] = <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>（3）跳数最短路重建，并返回跳数最短路和该路径上的流量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> nodeinfo[src_mac][<span class="string">&#x27;unchecked&#x27;</span>]: <span class="comment">#到最后 src_mac 也没有被检查到，则说明已经没有增广路径了，返回值为空</span></span><br><span class="line">    <span class="keyword">return</span> [], <span class="number">0</span></span><br><span class="line"><span class="keyword">else</span>: <span class="comment">#有增广路径则按正序重建路径，并返回路径和路径上的流量</span></span><br><span class="line">    father = src_mac </span><br><span class="line">    path = []</span><br><span class="line">    <span class="keyword">while</span> father != dst_mac: </span><br><span class="line">        path.append(father)</span><br><span class="line">        father = nodeinfo[father][<span class="string">&#x27;father&#x27;</span>]</span><br><span class="line">    path.append(dst_mac)</span><br><span class="line">    path_bw = self.min_bw(path, rest) <span class="comment">#调用函数，求路径上的流量</span></span><br><span class="line">    <span class="keyword">return</span> path, path_bw</span><br></pre></td></tr></table></figure><h3 id="ff-算法">FF 算法</h3><p>（1）初始化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">ford_fulkerson</span>(<span class="params">self, src_mac, dst_mac</span>): </span><br><span class="line">    flow = &#123;&#125;</span><br><span class="line">    rest = &#123;&#125;</span><br><span class="line">    cur_path = []</span><br><span class="line">    bw = <span class="number">0</span></span><br><span class="line">    wid_path = []</span><br><span class="line">    wid_bw = <span class="number">0</span></span><br><span class="line">    max_bw = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    rest = self.update_network([], <span class="number">0</span>, flow)</span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> self.links: <span class="comment">#建立剩余网络的框架</span></span><br><span class="line">        flow.setdefault(link[<span class="string">&#x27;src_dpid&#x27;</span>], &#123;&#125;)</span><br><span class="line">        flow[link[<span class="string">&#x27;src_dpid&#x27;</span>]].setdefault(link[<span class="string">&#x27;dst_dpid&#x27;</span>], <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>（2） 循环增加流量，直到无法找到从源点到宿点的增广路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    cur_path, bw = self.dijkstra(src_mac, dst_mac, rest)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(cur_path) == <span class="number">0</span>: </span><br><span class="line">        Break</span><br><span class="line">    <span class="comment">#无法找到从源点到宿点的增广路径时 cur_path 获取到的返回值为空，退出循环</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;available path:&#123;&#125; bw:&#123;&#125;Mbps&quot;</span>.<span class="built_in">format</span>(cur_path, bw)) <span class="comment">#打印参与到最大流的路径，注意，此时可能会发生 cancel，即反向推送</span></span><br><span class="line">    max_bw += bw <span class="comment">#求最大流</span></span><br><span class="line">    rest = self.update_network(cur_path, bw, flow)<span class="comment">#剩余网络更新</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> self.cancel_flag == <span class="number">0</span> <span class="keyword">and</span> wid_bw &lt; bw:<span class="comment">#如果全程没有发生反向推送，则此时的路径与现实情境下会发生的实际情况相同</span></span><br><span class="line">        wid_path = cur_path</span><br><span class="line">        wid_bw = bw </span><br><span class="line">        </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;max flow after detection:&#123;&#125;Mbps.&quot;</span>.<span class="built_in">format</span>(max_bw))<span class="comment">#打印最大流的流量</span></span><br></pre></td></tr></table></figure><p>（3）考虑到现实情境下，“反悔”现象不会发生，因此产生了路径抵消时需要 在总的路径上做一些修改，以得到最后的真实路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> self.cancel_flag == <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Cancellations happened!&quot;</span>)</span><br><span class="line">    cur_path, bw = self.dijkstra(src_mac, dst_mac, flow)<span class="comment">#在最终的流量网络上重新运行 dijkstra 算法，找最短路来进行路径增广</span></span><br><span class="line">    wid_path = cur_path</span><br><span class="line">    wid_bw = bw</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(cur_path) != <span class="number">0</span>: </span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Real-path:&#123;&#125; &#123;&#125;Mbps&quot;</span>.<span class="built_in">format</span>(cur_path, bw))</span><br><span class="line">            <span class="keyword">if</span> bw &gt; wid_bw:</span><br><span class="line">                wid_path = cur_path</span><br><span class="line">                wid_bw = bw</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(cur_path)-<span class="number">1</span>): </span><br><span class="line">                flow[cur_path[i]][cur_path[i+<span class="number">1</span>]] -= bw <span class="comment">#更新流量网络</span></span><br><span class="line">                cur_path, bw = self.dijkstra(src_mac, dst_mac, flow) <span class="comment">#在更新后的流量网络上运行 dijkstra 寻找增广路径</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">self.cancel_flag = <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> wid_path, wid_bw</span><br></pre></td></tr></table></figure><h3 id="剩余网络更新">剩余网络更新</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">update_network</span>(<span class="params">self, cur_path, cur_bw, flow</span>): </span><br><span class="line">    p = cur_path</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(p)-<span class="number">1</span>): </span><br><span class="line">        <span class="keyword">if</span> flow[p[i]][p[i+<span class="number">1</span>]] == <span class="number">0</span> <span class="keyword">and</span> flow[p[i+<span class="number">1</span>]][p[i]] == <span class="number">0</span>:<span class="comment">#尚未开始增加流量</span></span><br><span class="line">            flow[p[i]][p[i+<span class="number">1</span>]] = cur_bw<span class="comment">#将所选择的路径流量加入流网络</span></span><br><span class="line">        <span class="keyword">elif</span> flow[p[i+<span class="number">1</span>]][p[i]] &gt; <span class="number">0</span> <span class="keyword">and</span> flow[p[i]][p[i+<span class="number">1</span>]] == <span class="number">0</span>:<span class="comment">#边上正向的流量为0，有反向的流量</span></span><br><span class="line">            flow[p[i+<span class="number">1</span>]][p[i]] -= cur_bw<span class="comment">#发生流量抵消</span></span><br><span class="line">            self.cancel_flag = <span class="number">1</span><span class="comment">#流量抵消的标记位</span></span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            flow[p[i]][p[i+<span class="number">1</span>]] += cur_bw<span class="comment">#将所选择的路径上流量加入流网络</span></span><br><span class="line">    rest = deepcopy(flow)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> self.links:<span class="comment">#构建剩余网络</span></span><br><span class="line">        <span class="keyword">if</span> flow[link[<span class="string">&#x27;src_dpid&#x27;</span>]][link[<span class="string">&#x27;dst_dpid&#x27;</span>]] == <span class="number">0</span> <span class="keyword">and</span> flow[link[<span class="string">&#x27;dst_dpid&#x27;</span>]][link[<span class="string">&#x27;src_dpid&#x27;</span>]] == <span class="number">0</span>:<span class="comment">#边上没有流量，剩余容量即为边的带宽</span></span><br><span class="line">            rest[link[<span class="string">&#x27;src_dpid&#x27;</span>]][link[<span class="string">&#x27;dst_dpid&#x27;</span>]] = link[<span class="string">&#x27;bw&#x27;</span>]</span><br><span class="line">            rest[link[<span class="string">&#x27;dst_dpid&#x27;</span>]][link[<span class="string">&#x27;src_dpid&#x27;</span>]] = link[<span class="string">&#x27;bw&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> flow[link[<span class="string">&#x27;dst_dpid&#x27;</span>]][link[<span class="string">&#x27;src_dpid&#x27;</span>]] &gt; <span class="number">0</span> <span class="keyword">and</span> flow[link[<span class="string">&#x27;src_dpid&#x27;</span>]][link[<span class="string">&#x27;dst_dpid&#x27;</span>]] == <span class="number">0</span>:<span class="comment">#边上反向有流量、正向没有流量</span></span><br><span class="line">            rest[link[<span class="string">&#x27;src_dpid&#x27;</span>]][link[<span class="string">&#x27;dst_dpid&#x27;</span>]] = flow[link[<span class="string">&#x27;dst_dpid&#x27;</span>]][link[<span class="string">&#x27;src_dpid&#x27;</span>]]<span class="comment">#添加反向边</span></span><br><span class="line">            rest[link[<span class="string">&#x27;dst_dpid&#x27;</span>]][link[<span class="string">&#x27;src_dpid&#x27;</span>]] = link[<span class="string">&#x27;bw&#x27;</span>] - flow[link[<span class="string">&#x27;dst_dpid&#x27;</span>]][link[<span class="string">&#x27;src_dpid&#x27;</span>]]<span class="comment">#边上反向的剩余容量为边的容量减去流量</span></span><br><span class="line">    <span class="keyword">return</span> rest</span><br></pre></td></tr></table></figure><h3 id="读取邻接点">读取邻接点</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_adjacent</span>(<span class="params">self, links</span>):</span><br><span class="line">    adjacent = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">        adjacent.setdefault(link[<span class="string">&#x27;src_dpid&#x27;</span>], [])</span><br><span class="line">        adjacent[link[<span class="string">&#x27;src_dpid&#x27;</span>]].append(link[<span class="string">&#x27;dst_dpid&#x27;</span>])</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> adjacent</span><br></pre></td></tr></table></figure><h3 id="找到路径上链路容量的最小值-即能够容纳的最大流量">找到路径上链路容量的最小值，即能够容纳的最大流量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">min_bw</span>(<span class="params">self, path, rest</span>): </span><br><span class="line">    bw = <span class="number">999999</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(path)-<span class="number">1</span>): </span><br><span class="line">        <span class="keyword">if</span> rest[path[i]][path[i+<span class="number">1</span>]] &lt; bw: </span><br><span class="line">            bw = rest[path[i]][path[i+<span class="number">1</span>]]</span><br><span class="line">    <span class="keyword">return</span> bw</span><br></pre></td></tr></table></figure><h3 id="对-packet-in-模块的修改">对 packet_in 模块的修改</h3><p>（1）将主机和交换机之间的链路加入拓扑网络</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> src <span class="keyword">not</span> <span class="keyword">in</span> self.hosts:</span><br><span class="line">    self.hosts.append(src)</span><br><span class="line">    fd = <span class="built_in">open</span>(<span class="string">&#x27;./topo24.json&#x27;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    topoinfo = json.load(fd)</span><br><span class="line">    host_id = <span class="built_in">int</span>(src.split(<span class="string">&#x27;:&#x27;</span>)[-<span class="number">1</span>],<span class="number">16</span>)</span><br><span class="line">    <span class="keyword">for</span> edge <span class="keyword">in</span> topoinfo[<span class="string">&#x27;links&#x27;</span>]: </span><br><span class="line">        <span class="keyword">if</span> ([<span class="string">&#x27;h&#x27;</span>+<span class="built_in">str</span>(host_id), <span class="string">&#x27;s&#x27;</span>+<span class="built_in">str</span>(dpid)] == edge[<span class="string">&#x27;vertexs&#x27;</span>] <span class="keyword">or</span> [<span class="string">&#x27;s&#x27;</span>+<span class="built_in">str</span>(dpid), <span class="string">&#x27;h&#x27;</span>+<span class="built_in">str</span>(host_id)] == edge[<span class="string">&#x27;vertexs&#x27;</span>]):</span><br><span class="line">            self.links.append(&#123;<span class="string">&#x27;src_dpid&#x27;</span>:src, <span class="string">&#x27;dst_dpid&#x27;</span>:dpid, <span class="string">&#x27;dst_port_no&#x27;</span>:</span><br><span class="line">in_port, <span class="string">&#x27;delay&#x27;</span>:edge[<span class="string">&#x27;delay&#x27;</span>], <span class="string">&#x27;bw&#x27;</span>:edge[<span class="string">&#x27;bw&#x27;</span>]&#125;)</span><br><span class="line"></span><br><span class="line">            self.links.append(&#123;<span class="string">&#x27;src_dpid&#x27;</span>:dpid, <span class="string">&#x27;dst_dpid&#x27;</span>:src, <span class="string">&#x27;src_port_no&#x27;</span>:</span><br><span class="line">in_port, <span class="string">&#x27;delay&#x27;</span>:edge[<span class="string">&#x27;delay&#x27;</span>], <span class="string">&#x27;bw&#x27;</span>:edge[<span class="string">&#x27;bw&#x27;</span>]&#125;)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="配置流量最大的路径">配置流量最大的路径</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> dst <span class="keyword">in</span> self.host_mac_to: </span><br><span class="line">    self.pathes.setdefault(src, &#123;&#125;)</span><br><span class="line">    self.pathes[src].setdefault(dst, [])</span><br><span class="line">    self.pathes.setdefault(dst, &#123;&#125;)</span><br><span class="line">    self.pathes[dst].setdefault(src, [])<span class="comment">#路径初始化</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(self.pathes[src][dst]) == <span class="number">0</span>: </span><br><span class="line">        self.pathes[src][dst], max_bw = self.ford_fulkerson(src, dst)</span><br><span class="line">        self.pathes[dst][src] = self.pathes[src][dst][::-<span class="number">1</span>]</span><br><span class="line">        <span class="comment">#调用 ford_fulkerson 得到返回值作为流量最大的路径</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Widest path:&#123;&#125; &#123;&#125;Mbps&quot;</span>.<span class="built_in">format</span>(self.pathes[src][dst], max_bw))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;================================================================&quot;</span>)</span><br><span class="line">        <span class="comment">#读取正向和反向的端口信息，用于下发流表</span></span><br><span class="line">    next_dpid = self.pathes[src][dst][self.pathes[src][dst].index(dpid)+<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> self.links:</span><br><span class="line">        <span class="keyword">if</span> link[<span class="string">&#x27;src_dpid&#x27;</span>] == dpid <span class="keyword">and</span> link[<span class="string">&#x27;dst_dpid&#x27;</span>] == next_dpid:</span><br><span class="line">            out_port = link[<span class="string">&#x27;src_port_no&#x27;</span>]</span><br><span class="line">            Break</span><br><span class="line">     <span class="comment">#流表配置</span></span><br><span class="line">    actions = [ofp_parser.OFPActionOutput(out_port)]</span><br><span class="line">    <span class="keyword">match</span> = ofp_parser.OFPMatch(in_port=in_port, eth_dst=dst, eth_src=src)</span><br><span class="line">    self.add_flow(datapath, <span class="number">1</span>,<span class="keyword">match</span>, actions)</span><br></pre></td></tr></table></figure><h1>成果展示</h1><h2 id="拓扑的构建">拓扑的构建</h2><p>（1）mininet侧</p><p><img src="C:/Users/asa/AppData/Roaming/Typora/typora-user-images/image-20220823201606088.png" alt="mininet侧拓扑构建"></p><p>（2）RYU 侧</p><p><img src="C:/Users/asa/AppData/Roaming/Typora/typora-user-images/image-20220823201708345.png" alt="RYU侧拓扑连接"></p><p>（3）二十四节点网络拓扑可视化</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220804181335594.png" alt="拓扑可视化"></p><h2 id="ford-fulkerson-算法实现">Ford-Fulkerson 算法实现</h2><p>（1）mininet 侧：连通性良好</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220823202324103.png" alt="mininet侧连通性"></p><p>（2）最大流路径展示（以 h1 ping h8 为例）</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220823202422487.png" alt="mininet侧带宽信息"></p><p>（3）ryu 侧</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220823202501682.png" alt="RYU侧最大流路径配置"></p><p>（4）最大流路径可视化</p><p>（黄色路径为最大流路径，黑色路径为未经过路径）</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220823202638743.png" alt="最大流路径可视化"></p>]]></content>
      
      
      <categories>
          
          <category> 网络算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我电作业 </tag>
            
            <tag> mininet </tag>
            
            <tag> ryu控制器 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Buttterfly主题暗夜模式魔改</title>
      <link href="/5280f76d/"/>
      <url>/5280f76d/</url>
      
        <content type="html"><![CDATA[<div class="tip warning"><p>适用hexo主题: Butterfly</p></div><p>Butterfly主题转换为暗夜模式全局色调会下降，可通过修改<em>博客根目录/themes/butterfly/source/css/mode/darkmode.styl</em>文件中的background-color的参数来调整暗调的程度。数字越大越暗，数字越小越明亮。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">   <span class="selector-id">#web_bg</span><span class="selector-pseudo">:before</span>,</span><br><span class="line">    <span class="selector-id">#footer</span><span class="selector-pseudo">:before</span>,</span><br><span class="line">    <span class="selector-id">#page-header</span><span class="selector-pseudo">:before</span></span><br><span class="line">      <span class="attribute">position</span>: absolute</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">-     <span class="attribute">background-color</span>: <span class="built_in">alpha</span>(<span class="variable">$dark</span>-black, .<span class="number">7</span>)</span><br><span class="line">+     <span class="attribute">background-color</span>: <span class="built_in">alpha</span>(<span class="variable">$dark</span>-black, .<span class="number">3</span>)</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>困扰我很久的微软商店无法使用的问题解决</title>
      <link href="/74810b/"/>
      <url>/74810b/</url>
      
        <content type="html"><![CDATA[<h2 id="bug">BUG</h2><p>微软商店进不去</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220617101345503.png" alt="微软商店截图"></p><p>登录账户显示如下</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220617101432526.png" alt="微软商店账户无法登录"></p><h2 id="解决方法">解决方法</h2><p>网上一些方法都不行</p><blockquote><ol><li><p>在控制面板或者IE浏览器中打开Internet选项，删除Cookie信息。</p></li><li><p>在Internet选项-“高级”菜单中，点击重置，重置网络设置。</p></li><li><p>重启电脑。</p></li><li><p>win+R输入services.msc打开服务，找到Microsoft Account Sign-in Assistant，若没有启动，手动启动该服务。</p></li><li><p>重新尝试登录。</p></li></ol></blockquote><p>后来才发现，原来是我的clash的问题，虽然我用的是规则访问，可能还是有点问题，把他设置成直连也还是不行，把他退出就行了。<s>咱也不懂，咱也不敢问</s></p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220617101920023.png" alt="clash图标"></p>]]></content>
      
      
      <categories>
          
          <category> 问题修复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>智能垃圾桶开发（二）——分类网模型训练</title>
      <link href="/36f24770/"/>
      <url>/36f24770/</url>
      
        <content type="html"><![CDATA[<p>分类网模型的实现主要是依靠Taurus(Hi3516DV300)套件实现。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220813135544635.png" alt="Taurus(Hi3516DV300)套件"></p><h2 id="数据集收集">数据集收集</h2><p>本项目使用的<a href="https://aistudio.baidu.com/aistudio/datasetdetail/77996?qq-pf-to=pcqq.c2c">数据集</a>图片属性为（720，540，3），适用于有关垃圾分类相关场景的使用，覆盖了日常生活中绝大多数的垃圾类型，包含可回收垃圾、有害垃圾、厨余垃圾、其他垃圾四大垃圾。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220813130406348.png" alt="数据集"></p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220813130435835.png" alt="可回收垃圾-线示意图"></p><h2 id="环境搭建">环境搭建</h2><p>（一）安装Anaconda</p><p>在 linux 命令端输入</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.anaconda.com/archive/Anaconda3-5.2.0-Linux-x86_64.sh </span><br></pre></td></tr></table></figure><p>以及</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash Anaconda3-5.2.0-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>（二）配置环境</p><p>修改bashrc文件，路径进行替换，随后创建 conda 虚拟环境，并激活，conda create -n open-mmlab python=3.6，同样修改bashrc，linux开启自动激活。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220813130904989.png" alt="配置环境"></p><p>（三）安装torch 和 torchversion<br>先查看CUDA 版本，随后通过 pip命令下载torch 和 torchversion。</p><p>（四）下载代码并安装对应的库<br>进入<a href="https://github.com/open-mmlab/mmclassification/releases/tag/v0.11.0">github仓库</a>下载代码，放到对应位置后，下载库pip install -e</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220813131412397.png" alt="源代码下载"></p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220813131450018.png" alt="安装库"></p><h2 id="模型训练">模型训练</h2><p>选用resnet18，分16类，训练参数如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#model settings</span></span><br><span class="line">model = <span class="built_in">dict</span>(</span><br><span class="line">    <span class="built_in">type</span>=<span class="string">&#x27;ImageClassifier&#x27;</span>,</span><br><span class="line">    backbone=<span class="built_in">dict</span>(</span><br><span class="line">        <span class="built_in">type</span>=<span class="string">&#x27;ResNet&#x27;</span>,</span><br><span class="line">        depth=<span class="number">18</span>,</span><br><span class="line">        num_stages=<span class="number">4</span>,</span><br><span class="line">        out_indices=(<span class="number">3</span>,)</span><br><span class="line">        style=<span class="string">&#x27;pytorch&#x27;</span>),</span><br><span class="line">    neck=<span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;GlobalAveragePooling&#x27;</span>),</span><br><span class="line">    head=<span class="built_in">dict</span>(</span><br><span class="line">        <span class="built_in">type</span>=<span class="string">&#x27;LinearClsHead&#x27;</span>,</span><br><span class="line">        num_classes=<span class="number">16</span>,</span><br><span class="line">        in_channels=<span class="number">512</span>,        </span><br><span class="line">        loss=<span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;CrossEntropyLoss&#x27;</span>,loss_weight=<span class="number">1.0</span>),</span><br><span class="line">        topk=(<span class="number">1</span>,<span class="number">5</span>),</span><br><span class="line">    ))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#optimizer</span></span><br><span class="line">optimizer = <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;SGD&#x27;</span>,Ir=<span class="number">0.01</span>,momentum=<span class="number">0.9</span>,weight_decay=<span class="number">0.001</span>)</span><br><span class="line">optimizer_config = <span class="built_in">dict</span>(grad_clip=<span class="literal">None</span>)</span><br><span class="line"><span class="comment">#learning policy</span></span><br><span class="line">Ir_config = <span class="built_in">dict</span>(policy=<span class="string">&#x27;step&#x27;</span>,step=[<span class="number">25</span>,<span class="number">35</span>,<span class="number">45</span>])</span><br><span class="line">runner = <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;EpochBasedRunner,max_epochs=50)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#dataset settings</span></span><br><span class="line">dataset_type =<span class="string">&#x27;ImageNet&#x27;</span></span><br><span class="line">img_norm_cfg = <span class="built_in">dict</span>(</span><br><span class="line">    mean=[<span class="number">127.5</span>,<span class="number">127.5</span>,<span class="number">127.51</span>,std=[<span class="number">127.5</span>,<span class="number">127.5</span>,<span class="number">127.51</span>,to rgb=<span class="literal">True</span>)</span><br><span class="line">train_pipeline = [</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;LoadlmageFromFile&#x27;</span>),</span><br><span class="line">    <span class="comment">#dict(type=&#x27;RandomResizedCrop&#x27;,size=224),</span></span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;Resize&#x27;</span>,size=(<span class="number">256</span>,<span class="number">256</span>)),</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;RandomFlip&#x27;</span>,flip_prob=<span class="number">0.5</span>,direction=<span class="string">&#x27;horizontal&#x27;</span>),</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;Normalize&#x27;</span>,**img_norm_cfg),</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;ImageToTensor&#x27;</span>,keys=[<span class="string">&#x27;img&#x27;</span>]),</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;ToTensor&#x27;</span>,keys=[<span class="string">&#x27;gt_label&#x27;</span>]),</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;Collect&#x27;</span>,keys=[<span class="string">&#x27;img&#x27;</span>,<span class="string">&#x27;gt_label&#x27;</span>]) </span><br><span class="line">]</span><br><span class="line">                                  </span><br><span class="line">test_pipeline = [</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;LoadlmageFromFile&#x27;</span>),</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;Resize&#x27;</span>,size=(<span class="number">256</span>,<span class="number">256</span>)),</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;CenterCrop&#x27;</span>,crop_size=<span class="number">224</span>),</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;Normalize&#x27;</span>,**img_norm_cfg),</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;ImageToTensor&#x27;</span>,keys=[<span class="string">&#x27;img&#x27;</span>]),</span><br><span class="line">    <span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;Collect&#x27;</span>,keys=[<span class="string">&#x27;img&#x27;</span>])</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">data = <span class="built_in">dict</span>(</span><br><span class="line">    samples_per_gpu=<span class="number">32</span>,</span><br><span class="line">    workers_per_gpu=<span class="number">1</span>,</span><br><span class="line">    train=<span class="built_in">dict</span>(</span><br><span class="line">        <span class="built_in">type</span>=dataset_type,</span><br><span class="line">        data_prefix=<span class="string">&#x27;/home/ubuntu/classify_dataset&#x27;</span>,</span><br><span class="line">        pipeline=train_pipeline),</span><br><span class="line">    val=<span class="built_in">dict</span>(</span><br><span class="line">        <span class="built_in">type</span>=dataset_type,</span><br></pre></td></tr></table></figure><p>调用以下语句使用1个GPU进行训练</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ./tools/dist_train.sh configs/resnet/resnet18_b32x8_imagenet.py --work-dir ./ckpt3</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220813133017813.png" alt="模型训练"></p><h2 id="网络模型转化">网络模型转化</h2><p>修改resnet_pytorch_2_caffe.py文件，并转换生成resnet18.caffemodel 和 resnet18.prototxt。修改.prototx 网络文件，并得到我们的网络模型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.insert(<span class="number">0</span>,<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Variable</span><br><span class="line"><span class="keyword">from</span> torchvision.models <span class="keyword">import</span> resnet</span><br><span class="line"><span class="keyword">import</span> pytorch to caffe</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> name==<span class="string">&#x27;_main_&#x27;</span>:</span><br><span class="line">    name=<span class="string">&#x27;resnet18&#x27;</span></span><br><span class="line">    resnet18=resnet.resnet18(num classes=<span class="number">16</span>)</span><br><span class="line">    checkpoint = torch.load(<span class="string">&quot;/home/ubuntu/mmclassification/ckpt3/latest.pth&quot;</span>)</span><br><span class="line">    new_sd = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> k,v <span class="keyword">in</span> checkpoint[<span class="string">&#x27;state dict&#x27;</span>].items（）:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> k.endswith(<span class="string">&#x27;num batches tracked&#x27;</span>):</span><br><span class="line">            <span class="keyword">if</span> k.startswith(backbone):</span><br><span class="line">                k_new = k.split(<span class="string">&#x27;backbone.&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> k.startswith(<span class="string">&#x27;head.&#x27;</span>):</span><br><span class="line">                k_new = k.split(<span class="string">&#x27;head.&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">            new_sd[k new]=v</span><br><span class="line">    resnet18.load_state_dict(new_sd)</span><br><span class="line">    resnet18.<span class="built_in">eval</span>()</span><br><span class="line">    <span class="built_in">input</span>=torch.ones([<span class="number">1</span>,<span class="number">3</span>,<span class="number">224</span>,<span class="number">224</span>])</span><br><span class="line">    <span class="comment">#input=torch.ones([1,3,224,224])</span></span><br><span class="line">    pytorch_to_caffe.trans_net(resnet18,<span class="built_in">input</span>,name)</span><br><span class="line">    pytorch_to_caffe.save_prototxt(<span class="string">&#x27;&#123;&#125;.prototxt&#x27;</span>.<span class="built_in">format</span>(name))</span><br><span class="line">    pytorch_to_caffe.save_caffemodel(<span class="string">&#x27;&#123;&#125;.caffemodel&#x27;</span>.<span class="built_in">format</span>(name))</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220813133658348.png" alt="网络模型可视化"></p><h2 id="模型量化">模型量化</h2><p>利用RuyiStudio生成wk文件：</p><ol><li>mean.txt 制作</li><li>imagelist.txt 制作</li><li>配置 Input_Setting</li><li>Mapper Setting 配置</li><li>Dynamic Parameters 配置</li></ol><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220813133932473.png" alt="模型量化"></p><p>之后在板子上运行会出现下面错误：</p><div class="tip error"><p>[Level]:Error,[Func]:SAMPLE_COMM_SVP_NNIE_LoadModel [Line]:560</p><p>[Info]:Error,HI_MPI_SVP_NNIE_LoadModel failed!</p><p>[Level]:Error,[Func]:SAMPLE_SVP_NNIE_Yolov3 [Line]:3110</p></div><p>出现这个问题是因为仿真环境和板子上运行的环境不一样</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220813134010704.png" alt="设置环境版本"></p><h2 id="识别控制">识别控制</h2><p>修改cnn_trash_classify.c文件，并且加入训练好的垃圾分类的wk文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(score &lt; THRESH_MIN)&#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SAMPLE_PRT(<span class="string">&quot;---trash item flag---num:%d,score:%d\n&quot;</span>,item-&gt;num,score);</span><br><span class="line"><span class="keyword">switch</span> (item-&gt;num)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0u</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1u</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2u</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3u</span>:   </span><br><span class="line">        trashName =<span class="string">&quot;Kitchen Waste&quot;</span>;</span><br><span class="line">        SAMPLE_PRT(<span class="string">&quot;---trash name---:%s\n&quot;</span>,trashName);</span><br><span class="line">        <span class="keyword">break</span>;    </span><br><span class="line">    <span class="keyword">case</span> <span class="number">4u</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5u</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6u</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7u</span>:</span><br><span class="line">        trashName =<span class="string">&quot;Hazardous Waste&quot;</span>;</span><br><span class="line">        SAMPLE_PRT(<span class="string">&quot;---trash name---:%s\n&quot;</span>,trashName);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8u</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9u</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10u</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11u</span>:</span><br><span class="line">        trashName =<span class="string">&quot;Recyclable Waste&quot;</span>;</span><br><span class="line">        SAMPLE_PRT(<span class="string">&quot;---trash name---:%s\n&quot;</span>,trashName);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12u</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">13u</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">14u</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">15u</span>:</span><br><span class="line">        trashName =<span class="string">&quot;Other Waste&quot;</span>;</span><br><span class="line">        SAMPLE_PRT(<span class="string">&quot;---trash name---:%s\n&quot;</span>,trashName);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        trashName =<span class="string">&quot;Unkown Waste&quot;</span>;</span><br><span class="line">        SAMPLE_PRT(<span class="string">&quot;---trash name---:%s\n&quot;</span>,trashName);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">UartTestSample(item-&gt;num);</span><br><span class="line"><span class="keyword">return</span> HI_SUCCESS:</span><br></pre></td></tr></table></figure><h2 id="板端部署与调试">板端部署与调试</h2><ol><li>执行 make clean &amp;&amp; make，对 hispark_taurus_nnie_sample 进行编译；</li><li>将 sample_nnie_main 这个可执行文件，拷贝到/home/hispark/code/HiSpark_Hi3516DV300_SDK_SPC021/osdrv/pub/rootfs_glibc/rot/目录下；</li><li>接下来需要制作文件系统，命令为cd /home/ubuntu/code/HiSpark_Hi3516DV300_SDK_SPC021./build.sh ext4</li><li>使用 HiTool 工具进行烧录</li></ol><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220813135046405.png" alt="HiTool烧录"></p><h2 id="模型验证">模型验证</h2><p>分类效果良好。</p><div class="video"><video controls preload><source src='http://f.video.weibocdn.com/o0/iOyxlyhOlx07YnKunn9C010412010iV80E010.mp4?label=mp4_1080p&template=1920x1080.25.0&media_id=4802011645018137&tp=8x8A3El:YTkl0eM8&us=0&ori=1&bf=4&ot=h&ps=3lckmu&uid=5Bm3J8&ab=7397-g1,8143-g0,8013-g0,7598-g1&Expires=1660376132&ssig=hKbcGZ9xP5&KID=unistore,video' type='video/mp4'>Your browser does not support the video tag.</video></div>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 板端开发 </tag>
            
            <tag> linux </tag>
            
            <tag> 机器视觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>智能垃圾桶开发（一）——外设控制</title>
      <link href="/4dd1a6f1/"/>
      <url>/4dd1a6f1/</url>
      
        <content type="html"><![CDATA[<p>在人工智能课上拿到了Taurus &amp; Pegasus AI计算机视觉基础开发套件，我们将用它实现可以智能识别垃圾类别的垃圾桶吗，核心板Hi3516DV300主要用于垃圾识别并分类，Hi3861主要用于基础外设的控制。</p><h1>Hi3861板子的开发</h1><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/poYBAGEctb6AGjv_AAZ7kzOmjNs783.png" alt="Hi3861实物图"></p><details class="folding-tag" yellow><summary> OpenHarmony轻量系统开发入门资料 </summary>              <div class='content'>              <ul><li><a href="https://ost.51cto.com/posts/10086">源代码和环境搭建</a></li><li><a href="https://ost.51cto.com/posts/10087">代码编译和烧录</a></li><li><a href="https://ost.51cto.com/posts/944">程序编写示例</a></li></ul>              </div>            </details><h2 id="舵机驱动">舵机驱动</h2><h3 id="基本原理">基本原理</h3><p>微处理器产生的 <span class="bubble-content">PWM信号</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#FFB6C1;">脉冲宽度调制信号，可调节信号的占空比</span></span> 通过信号线进入舵机产生直流偏置电压，与舵机内部的基准电压作比较，电压差的正负输出到电机驱动芯片上，从而决定正反转。</p><p>高电平在一个周期（20ms）的持续时间对应的舵机角度可参考如下（以实际调节值为准）</p><table><thead><tr><th style="text-align:center">t / ms</th><th style="text-align:center">对应角度 / <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mo lspace="0em" rspace="0em">∘</mo></msup></mrow><annotation encoding="application/x-tex">^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6741em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6741em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span></th></tr></thead><tbody><tr><td style="text-align:center">0.5</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">1.0</td><td style="text-align:center">45</td></tr><tr><td style="text-align:center">5.0</td><td style="text-align:center">90</td></tr><tr><td style="text-align:center">2.0</td><td style="text-align:center">135</td></tr><tr><td style="text-align:center">2.5</td><td style="text-align:center">180</td></tr></tbody></table><h3 id="注意点">注意点</h3><p>注意引脚的功能复用，由于引脚数量有限，往往有多个功能复用一个引脚，在使用引脚时要选择引脚的初始化。套件中舵机的型号为SG90，虽然板子自带有pwm的功能，但在测试过程中该功能无法使舵机工作。</p><p>我们可以根据pwm的逻辑直接使用引脚的GPIO功能来完成pwm信号的实现。实现逻辑就是先设置20ms的周期，然后根据所需角度调节GPIO输出高电平的时间，周期其余时间输出低电平即可。</p><p>另外还需要注意根据板子结构图选择合适的GPIO引脚。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/Snipaste_2022-06-26_17-17-59.png" alt="Hi3861结构图"></p><p>根据上图还可以控制相应的LED灯的点亮。</p><h2 id="oled屏幕显示">OLED屏幕显示</h2><p>套件中还提供了一块OLED屏，通过<a href="https://ost.51cto.com/posts/1145">基础教程</a>可以很容易的复现出来。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/oled%E6%BC%94%E7%A4%BA.jpg" alt="oled演示"></p><h2 id="成果展示">成果展示</h2><div class="video"><video controls preload><source src='http://f.video.weibocdn.com/o0/wcxmZclslx07YmIAs0EE010412006pCd0E010.mp4?label=mp4_hd&template=852x480.25.0&Expires=1660320229&ssig=HsRMFmT%2BzC&KID=unistore,video' type='video/mp4'>Your browser does not support the video tag.</video></div><h2 id="源代码">源代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;hi_types_base.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hi_gpio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hi_io.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hi_time.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iot_gpio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ohos_init.h&quot;</span>  <span class="comment">//在//utils/native/lite/include&quot;里，负责系统任务，如SYS_RUN</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;cmsis_os2.h&quot;</span>  <span class="comment">//在//kernel/liteos_m/kal/cmsis&quot;里，负责线程，如osThreadAttr_t</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iot_i2c.h&quot;</span>    <span class="comment">//在 &quot;//base/iot_hardware/peripheral/interfaces/kits&quot;里，负责各种接口，如IoTGpioSetOutputVal</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iot_gpio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iot_errno.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iot_uart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled_ssd1306.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AHT20_BAUDRATE (400 * 1000)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> AHT20_I2C_IDX 13</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*舵机线程*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> *<span class="title function_">Servo_Task</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *arg)</span></span><br><span class="line">&#123;    </span><br><span class="line">(<span class="type">void</span>)arg;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Enter Servo_Task\n&quot;</span>);</span><br><span class="line"><span class="type">int</span> gpio_id[] = &#123;<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line"><span class="type">int</span> led_id[] = &#123;<span class="number">2</span>,<span class="number">8</span>,<span class="number">11</span>,<span class="number">12</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">0</span>],HI_GPIO_VALUE1);</span><br><span class="line">set_angle(<span class="number">1800</span>,gpio_id[<span class="number">0</span>]);</span><br><span class="line">hi_udelay(<span class="number">1000000</span>);</span><br><span class="line">set_angle(<span class="number">2477</span>,gpio_id[<span class="number">0</span>]);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">0</span>],HI_GPIO_VALUE0);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;2\n&quot;</span>);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">1</span>],HI_GPIO_VALUE1);</span><br><span class="line">set_angle(<span class="number">1700</span>,gpio_id[<span class="number">1</span>]);</span><br><span class="line">hi_udelay(<span class="number">1000000</span>);</span><br><span class="line">set_angle(<span class="number">2460</span>,gpio_id[<span class="number">1</span>]);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">1</span>],HI_GPIO_VALUE0);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;3\n&quot;</span>);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">2</span>],HI_GPIO_VALUE1);</span><br><span class="line">set_angle(<span class="number">1500</span>,gpio_id[<span class="number">2</span>]);</span><br><span class="line">hi_udelay(<span class="number">1000000</span>);</span><br><span class="line">set_angle(<span class="number">2477</span>,gpio_id[<span class="number">2</span>]);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">2</span>],HI_GPIO_VALUE0);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;4\n&quot;</span>);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">3</span>],HI_GPIO_VALUE1);</span><br><span class="line">set_angle(<span class="number">1850</span>,gpio_id[<span class="number">3</span>]);</span><br><span class="line">hi_udelay(<span class="number">1000000</span>);</span><br><span class="line">set_angle(<span class="number">2477</span>,gpio_id[<span class="number">3</span>]);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">3</span>],HI_GPIO_VALUE0);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//惊喜</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">0</span>],HI_GPIO_VALUE1);</span><br><span class="line">set_angle(<span class="number">1800</span>,gpio_id[<span class="number">0</span>]);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">1</span>],HI_GPIO_VALUE1);</span><br><span class="line">set_angle(<span class="number">1850</span>,gpio_id[<span class="number">1</span>]);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">2</span>],HI_GPIO_VALUE1);</span><br><span class="line">set_angle(<span class="number">1500</span>,gpio_id[<span class="number">2</span>]);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">3</span>],HI_GPIO_VALUE1);</span><br><span class="line">set_angle(<span class="number">1850</span>,gpio_id[<span class="number">3</span>]);</span><br><span class="line">hi_udelay(<span class="number">100000</span>);</span><br><span class="line">set_angle(<span class="number">2477</span>,gpio_id[<span class="number">0</span>]);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">0</span>],HI_GPIO_VALUE0);</span><br><span class="line">set_angle(<span class="number">2460</span>,gpio_id[<span class="number">1</span>]);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">1</span>],HI_GPIO_VALUE0);</span><br><span class="line">set_angle(<span class="number">2477</span>,gpio_id[<span class="number">2</span>]);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">2</span>],HI_GPIO_VALUE0);</span><br><span class="line">set_angle(<span class="number">2477</span>,gpio_id[<span class="number">3</span>]);</span><br><span class="line">IoTGpioSetOutputVal(led_id[<span class="number">3</span>],HI_GPIO_VALUE0);</span><br><span class="line">hi_udelay(<span class="number">100000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*设置旋转角度*/</span></span><br><span class="line">hi_void <span class="title function_">set_angle</span><span class="params">(hi_u32 utime, <span class="type">char</span> gpio_id)</span></span><br><span class="line">&#123;</span><br><span class="line">IoTGpioSetOutputVal(gpio_id,HI_GPIO_VALUE1);</span><br><span class="line">    hi_udelay(utime);  <span class="comment">//单位为微秒</span></span><br><span class="line"></span><br><span class="line">IoTGpioSetOutputVal(gpio_id,HI_GPIO_VALUE0);</span><br><span class="line">    hi_udelay(<span class="number">20000</span>-utime);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*oled显示线程*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">Oled_Task</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *arg)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Enter Oled_Task\n&quot;</span>);</span><br><span class="line">    (<span class="type">void</span>)arg;</span><br><span class="line">    OledInit();</span><br><span class="line">    OledFillScreen(<span class="number">0</span>);</span><br><span class="line">    IoTI2cInit(AHT20_I2C_IDX, AHT20_BAUDRATE);</span><br><span class="line">OledShowString(<span class="number">0</span>, <span class="number">2</span>, <span class="string">&quot;Pursue G-fashion&quot;</span>, <span class="number">1</span>);<span class="comment">/* 屏幕第0列2行显示1行 */</span></span><br><span class="line">OledShowString(<span class="number">5</span>, <span class="number">4</span>, <span class="string">&quot;Embrace G-life&quot;</span>, <span class="number">1</span>); </span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*UART线程</span></span><br><span class="line"><span class="comment">static void* Uart_Task(const char* arg)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    unsigned int len = 0;</span></span><br><span class="line"><span class="comment">//unsigned char uartWriteBuff[] = &quot;hello uart!&quot;;</span></span><br><span class="line"><span class="comment">//unsigned int uartReadBuff = 0;</span></span><br><span class="line"><span class="comment">int Identification = 0;</span></span><br><span class="line"><span class="comment">    (void)arg;</span></span><br><span class="line"><span class="comment">    printf(&quot;Enter Uart_Task\n&quot;);</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">    IoTGpioInit(1); // 使用GPIO，都需要调用该接口</span></span><br><span class="line"><span class="comment">// 初始化UART配置，115200，数据bit为8,停止位1，奇偶校验为NONE，流控为NONE</span></span><br><span class="line"><span class="comment">    IotUartAttribute g_uart_cfg = &#123;115200, 8, 1, IOT_UART_PARITY_NONE, 0,0&#125;;</span></span><br><span class="line"><span class="comment">hi_io_set_func(1,HI_IO_FUNC_GPIO_1_UART1_RXD);</span></span><br><span class="line"><span class="comment">    IoTUartInit(1, &amp;g_uart_cfg);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    //UartWrite(WIFI_IOT_UART_IDX_2, (unsigned char *)uartWriteBuff, sizeof(uartWriteBuff));</span></span><br><span class="line"><span class="comment">printf(&quot;Uart reading...\n&quot;);</span></span><br><span class="line"><span class="comment">    while (1) &#123;</span></span><br><span class="line"><span class="comment">        IoTUartRead(1, Identification, sizeof(Identification));</span></span><br><span class="line"><span class="comment">        if (Identification != 0) &#123;</span></span><br><span class="line"><span class="comment">printf(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&quot;);</span></span><br><span class="line"><span class="comment">            printf(&quot;Uart read data:%d\n&quot;, Identification);</span></span><br><span class="line"><span class="comment">printf(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n&quot;);</span></span><br><span class="line"><span class="comment">hi_udelay(1200000);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        else&#123;</span></span><br><span class="line"><span class="comment">usleep(100000);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    return NULL;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*入口函数*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">duojiEntry</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*GPIO初始化*/</span></span><br><span class="line"><span class="type">int</span> GPIO[] = &#123;<span class="number">2</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>&#125;;</span><br><span class="line"><span class="type">char</span> *GPIO_func[] = &#123;<span class="string">&quot;HI_IO_FUNC_GPIO_2_GPIO&quot;</span>,<span class="string">&quot;HI_IO_FUNC_GPIO_6_GPIO&quot;</span>,\</span><br><span class="line"><span class="string">&quot;HI_IO_FUNC_GPIO_7_GPIO&quot;</span>,<span class="string">&quot;HI_IO_FUNC_GPIO_8_GPIO&quot;</span>,<span class="string">&quot;HI_IO_FUNC_GPIO_9_GPIO&quot;</span>,\</span><br><span class="line"><span class="string">&quot;HI_IO_FUNC_GPIO_10_GPIO&quot;</span>,<span class="string">&quot;HI_IO_FUNC_GPIO_11_GPIO&quot;</span>,<span class="string">&quot;HI_IO_FUNC_GPIO_12_GPIO&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">IoTGpioInit(GPIO[i]);</span><br><span class="line">hi_io_set_func(GPIO[i],GPIO_func[i]);</span><br><span class="line">IoTGpioSetDir(GPIO[i], HI_GPIO_DIR_OUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">osThreadAttr_t servo_attr; <span class="comment">//定义舵机线程</span></span><br><span class="line">    servo_attr.name = <span class="string">&quot;Servo_Task&quot;</span>;</span><br><span class="line">    servo_attr.attr_bits = <span class="number">0U</span>;</span><br><span class="line">    servo_attr.cb_mem = <span class="literal">NULL</span>;</span><br><span class="line">    servo_attr.cb_size = <span class="number">0U</span>;</span><br><span class="line">    servo_attr.stack_mem = <span class="literal">NULL</span>;</span><br><span class="line">    servo_attr.stack_size = <span class="number">1024</span>;</span><br><span class="line">    servo_attr.priority = osPriorityNormal;</span><br><span class="line"><span class="comment">//创建舵机线程并判断是否创建成功</span></span><br><span class="line"><span class="keyword">if</span> (osThreadNew((osThreadFunc_t)Servo_Task, <span class="literal">NULL</span>, &amp;servo_attr) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nSucceed to create Servo_Task!\n&quot;</span>);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">osThreadAttr_t Oled_attr; <span class="comment">//定义oled显示线程</span></span><br><span class="line">    Oled_attr.name = <span class="string">&quot;Oled_Task&quot;</span>;</span><br><span class="line">    Oled_attr.attr_bits = <span class="number">0U</span>;</span><br><span class="line">    Oled_attr.cb_mem = <span class="literal">NULL</span>;</span><br><span class="line">    Oled_attr.cb_size = <span class="number">0U</span>;</span><br><span class="line">    Oled_attr.stack_mem = <span class="literal">NULL</span>;</span><br><span class="line">    Oled_attr.stack_size = <span class="number">4096</span>; <span class="comment">/* 任务大小4096 */</span></span><br><span class="line">    Oled_attr.priority = osPriorityNormal;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建oled显示线程并判断是否创建成功</span></span><br><span class="line">    <span class="keyword">if</span> (osThreadNew((osThreadFunc_t)Oled_Task, <span class="literal">NULL</span>, &amp;Oled_attr) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Succeed to create Oled_Task!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">osThreadAttr_t Uart_attr; //定义UART线程</span></span><br><span class="line"><span class="comment">    Uart_attr.name = &quot;Uart_Task&quot;;</span></span><br><span class="line"><span class="comment">    Uart_attr.attr_bits = 0U;</span></span><br><span class="line"><span class="comment">    Uart_attr.cb_mem = NULL;</span></span><br><span class="line"><span class="comment">    Uart_attr.cb_size = 0U;</span></span><br><span class="line"><span class="comment">    Uart_attr.stack_mem = NULL;</span></span><br><span class="line"><span class="comment">    Uart_attr.stack_size = 4096; // 堆栈大小</span></span><br><span class="line"><span class="comment">    Uart_attr.priority = osPriorityNormal; // 优先级</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">//创建UART线程并判断是否创建成功</span></span><br><span class="line"><span class="comment">    if (osThreadNew((osThreadFunc_t)Uart_Task, NULL, &amp;Uart_attr) != NULL) &#123;</span></span><br><span class="line"><span class="comment">        printf(&quot;Succeed to create Uart_Task!\n&quot;);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line">SYS_RUN(duojiEntry);</span><br></pre></td></tr></table></figure><p>BUILD.gn文件设置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">static_library(&quot;duoji&quot;) &#123;</span><br><span class="line">    sources = [</span><br><span class="line">        &quot;hal_iot_gpio_ex.c&quot;,</span><br><span class="line">        &quot;duoji.c&quot;,</span><br><span class="line">        &quot;oled_ssd1306.c&quot;,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    include_dirs = [</span><br><span class="line">        &quot;//utils/native/lite/include&quot;,</span><br><span class="line">        &quot;//kernel/liteos_m/kal/cmsis&quot;,</span><br><span class="line">        &quot;//base/iot_hardware/peripheral/interfaces/kits&quot;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>辅助代码如下，与上面的文件放在同一个文件夹即可。</p><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">hal_iot_gpio_ex.c</button></li><li class="tab"><button type="button" data-href="#-2">oled_ssd1306.c</button></li><li class="tab"><button type="button" data-href="#-3">iot_gpio_ex.h</button></li><li class="tab"><button type="button" data-href="#-4">oled_fonts.h</button></li><li class="tab"><button type="button" data-href="#-5">oled_ssd1306.h</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iot_errno.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iot_gpio_ex.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hi_gpio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hi_io.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hi_task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hi_types_base.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">IoSetPull</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> id, IotIoPull val)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (id &gt;= HI_GPIO_IDX_MAX) &#123;</span><br><span class="line">        <span class="keyword">return</span> IOT_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hi_io_set_pull((hi_io_name)id, (hi_io_pull)val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">IoSetFunc</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> id, <span class="type">unsigned</span> <span class="type">char</span> val)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (id &gt;= HI_GPIO_IDX_MAX) &#123;</span><br><span class="line">        <span class="keyword">return</span> IOT_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hi_io_set_func((hi_io_name)id, val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">TaskMsleep</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (ms &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> IOT_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hi_sleep((hi_u32)ms);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stddef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ohos_types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iot_errno.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iot_gpio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iot_i2c.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iot_gpio_ex.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled_fonts.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled_ssd1306.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_I2C_IDX 0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_WIDTH    (128)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_I2C_ADDR 0x78 <span class="comment">// 默认地址为 0x78</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_I2C_CMD 0x00 <span class="comment">// 0000 0000       写命令</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_I2C_DATA 0x40 <span class="comment">// 0100 0000(0x40) 写数据</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_I2C_BAUDRATE (400 * 1000) <span class="comment">// 400k</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DELAY_100_MS (100 * 1000)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="comment">/** Pointer to the buffer storing data to send */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> *sendBuf;</span><br><span class="line">    <span class="comment">/** Length of data to send */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span>  sendLen;</span><br><span class="line">    <span class="comment">/** Pointer to the buffer for storing data to receive */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> *receiveBuf;</span><br><span class="line">    <span class="comment">/** Length of data received */</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span>  receiveLen;</span><br><span class="line">&#125; IotI2cData;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> <span class="title function_">I2cWiteByte</span><span class="params">(<span class="type">uint8_t</span> regAddr, <span class="type">uint8_t</span> byte)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> id = OLED_I2C_IDX;</span><br><span class="line">    <span class="type">uint8_t</span> buffer[] = &#123;regAddr, byte&#125;;</span><br><span class="line">    IotI2cData i2cData = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    i2cData.sendBuf = buffer;</span><br><span class="line">    i2cData.sendLen = <span class="keyword">sizeof</span>(buffer) / <span class="keyword">sizeof</span>(buffer[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> IoTI2cWrite(id, OLED_I2C_ADDR, i2cData.sendBuf, i2cData.sendLen);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief Write a command byte to OLED device.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param cmd the commnad byte to be writen.</span></span><br><span class="line"><span class="comment"> * @return Returns &#123;@link IOT_SUCCESS&#125; if the operation is successful;</span></span><br><span class="line"><span class="comment"> * returns an error code defined in &#123;@link wifiiot_errno.h&#125; otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> <span class="title function_">WriteCmd</span><span class="params">(<span class="type">uint8_t</span> cmd)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> I2cWiteByte(OLED_I2C_CMD, cmd);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief Write a data byte to OLED device.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param cmd the data byte to be writen.</span></span><br><span class="line"><span class="comment"> * @return Returns &#123;@link IOT_SUCCESS&#125; if the operation is successful;</span></span><br><span class="line"><span class="comment"> * returns an error code defined in &#123;@link wifiiot_errno.h&#125; otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> <span class="title function_">WriteData</span><span class="params">(<span class="type">uint8_t</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> I2cWiteByte(OLED_I2C_DATA, data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief ssd1306 OLED Initialize.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">OledInit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">uint8_t</span> initCmds[] = &#123;</span><br><span class="line">        <span class="number">0xAE</span>, <span class="comment">// --display off</span></span><br><span class="line">        <span class="number">0x00</span>, <span class="comment">// ---set low column address</span></span><br><span class="line">        <span class="number">0x10</span>, <span class="comment">// ---set high column address</span></span><br><span class="line">        <span class="number">0x40</span>, <span class="comment">// --set start line address</span></span><br><span class="line">        <span class="number">0xB0</span>, <span class="comment">// --set page address</span></span><br><span class="line">        <span class="number">0x81</span>, <span class="comment">// contract control</span></span><br><span class="line">        <span class="number">0xFF</span>, <span class="comment">// --128</span></span><br><span class="line">        <span class="number">0xA1</span>, <span class="comment">// set segment remap</span></span><br><span class="line">        <span class="number">0xA6</span>, <span class="comment">// --normal / reverse</span></span><br><span class="line">        <span class="number">0xA8</span>, <span class="comment">// --set multiplex ratio(1 to 64)</span></span><br><span class="line">        <span class="number">0x3F</span>, <span class="comment">// --1/32 duty</span></span><br><span class="line">        <span class="number">0xC8</span>, <span class="comment">// Com scan direction</span></span><br><span class="line">        <span class="number">0xD3</span>, <span class="comment">// -set display offset</span></span><br><span class="line">        <span class="number">0x00</span>,</span><br><span class="line">        <span class="number">0xD5</span>, <span class="comment">// set osc division</span></span><br><span class="line">        <span class="number">0x80</span>,</span><br><span class="line">        <span class="number">0xD8</span>, <span class="comment">// set area color mode off</span></span><br><span class="line">        <span class="number">0x05</span>,</span><br><span class="line">        <span class="number">0xD9</span>, <span class="comment">// Set Pre-Charge Period</span></span><br><span class="line">        <span class="number">0xF1</span>,</span><br><span class="line">        <span class="number">0xDA</span>, <span class="comment">// set com pin configuartion</span></span><br><span class="line">        <span class="number">0x12</span>,</span><br><span class="line">        <span class="number">0xDB</span>, <span class="comment">// set Vcomh</span></span><br><span class="line">        <span class="number">0x30</span>,</span><br><span class="line">        <span class="number">0x8D</span>, <span class="comment">// set charge pump enable</span></span><br><span class="line">        <span class="number">0x14</span>,</span><br><span class="line">        <span class="number">0xAF</span>, <span class="comment">// --turn on oled panel</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    IoTGpioInit(<span class="number">13</span>); <span class="comment">/* 初始化gpio13 */</span></span><br><span class="line">    IoSetFunc(<span class="number">13</span>, <span class="number">6</span>); <span class="comment">/* gpio13使用6功能 */</span></span><br><span class="line">    IoTGpioInit(<span class="number">14</span>); <span class="comment">/* 初始化gpio14 */</span></span><br><span class="line">    IoSetFunc(<span class="number">14</span>, <span class="number">6</span>); <span class="comment">/* gpio14使用6功能 */</span></span><br><span class="line"></span><br><span class="line">    IoTI2cInit(<span class="number">0</span>, OLED_I2C_BAUDRATE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; ARRAY_SIZE(initCmds); i++) &#123;</span><br><span class="line">        <span class="type">uint32_t</span> status = WriteCmd(initCmds[i]);</span><br><span class="line">        <span class="keyword">if</span> (status != IOT_SUCCESS) &#123;</span><br><span class="line">            <span class="keyword">return</span> status;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> IOT_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">OledSetPosition</span><span class="params">(<span class="type">uint8_t</span> x, <span class="type">uint8_t</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    WriteCmd(<span class="number">0xb0</span> + y);</span><br><span class="line">    WriteCmd(((x &amp; <span class="number">0xf0</span>) &gt;&gt; <span class="number">4</span>) | <span class="number">0x10</span>); <span class="comment">/* 在0xf0右移4位，与0x10或，实现了写数据 */</span></span><br><span class="line">    WriteCmd(x &amp; <span class="number">0x0f</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 全屏填充 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OledFillScreen</span><span class="params">(<span class="type">uint8_t</span> fillData)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">uint8_t</span> m = <span class="number">0</span>; m &lt; <span class="number">8</span>; m++) &#123; <span class="comment">/* 循环8次实现横屏填充 */</span></span><br><span class="line">        WriteCmd(<span class="number">0xb0</span> + m);</span><br><span class="line">        WriteCmd(<span class="number">0x00</span>);</span><br><span class="line">        WriteCmd(<span class="number">0x10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">uint8_t</span> n = <span class="number">0</span>; n &lt; <span class="number">128</span>; n++) &#123; <span class="comment">/* 循环128次实现竖屏填充 */</span></span><br><span class="line">            WriteData(fillData);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 8*16 typeface</span></span><br><span class="line"><span class="comment"> * @param x: write positon start from x axis</span></span><br><span class="line"><span class="comment"> * @param y: write positon start from y axis</span></span><br><span class="line"><span class="comment"> * @param ch: write data</span></span><br><span class="line"><span class="comment"> * @param font: selected font</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OledShowChar</span><span class="params">(<span class="type">uint8_t</span> x, <span class="type">uint8_t</span> y, <span class="type">uint8_t</span> ch, Font font)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> c = ch - <span class="string">&#x27; &#x27;</span>; <span class="comment">// 得到偏移后的值</span></span><br><span class="line">    <span class="type">uint8_t</span> b = x;</span><br><span class="line">    <span class="type">uint8_t</span> d = y;</span><br><span class="line">    <span class="keyword">if</span> (b &gt; OLED_WIDTH - <span class="number">1</span>) &#123;</span><br><span class="line">        b = <span class="number">0</span>;</span><br><span class="line">        d = d + <span class="number">2</span>; <span class="comment">/* 得到偏移后的值2 */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (font == FONT8_X16) &#123;</span><br><span class="line">        OledSetPosition(b, d);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">uint8_t</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123; <span class="comment">/* 循环8次实现横屏填充 */</span></span><br><span class="line">            WriteData(g_f8X16[c * <span class="number">16</span> + i]); <span class="comment">/* 循环16次实现横屏填充 */</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        OledSetPosition(b, d + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">uint8_t</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123; <span class="comment">/* 循环8次实现横屏填充 */</span></span><br><span class="line">            WriteData(g_f8X16[c * <span class="number">16</span> + i + <span class="number">8</span>]); <span class="comment">/* 循环16次实现横屏填充8列 */</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        OledSetPosition(b, d);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">uint8_t</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123; <span class="comment">/* 循环6次实现横屏填充 */</span></span><br><span class="line">            WriteData(g_f6X8[c][i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">OledShowString</span><span class="params">(<span class="type">uint8_t</span> x, <span class="type">uint8_t</span> y, <span class="type">const</span> <span class="type">char</span>* str, Font font)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="type">uint8_t</span> b = x;</span><br><span class="line">    <span class="type">uint8_t</span> d = y;</span><br><span class="line">    <span class="keyword">if</span> (str == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;param is NULL,Please check!!!\r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (str[j]) &#123;</span><br><span class="line">        OledShowChar(b, d, str[j], font);</span><br><span class="line">        b += <span class="number">8</span>; <span class="comment">/* 循环8次实现横屏填充 */</span></span><br><span class="line">        <span class="keyword">if</span> (b &gt; <span class="number">120</span>) &#123; <span class="comment">/* 循环120次实现横屏填充 */</span></span><br><span class="line">            b = <span class="number">0</span>;</span><br><span class="line">            d += <span class="number">2</span>; <span class="comment">/* 循环2次实现横屏填充 */</span></span><br><span class="line">        &#125;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> IOT_GPIO_EX_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IOT_GPIO_EX_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief Enumerates GPIO pull-up or pull-down settings.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    <span class="comment">/** No pull */</span></span><br><span class="line">    IOT_IO_PULL_NONE,</span><br><span class="line">    <span class="comment">/** Pull-up */</span></span><br><span class="line">    IOT_IO_PULL_UP,</span><br><span class="line">    <span class="comment">/** Pull-down */</span></span><br><span class="line">    IOT_IO_PULL_DOWN,</span><br><span class="line">    <span class="comment">/** Maximum value */</span></span><br><span class="line">    IOT_IO_PULL_MAX,</span><br><span class="line">&#125; IotIoPull;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @ingroup iot_io</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * GPIO pin ID. CNcomment:IO硬件管脚编号。CNend</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_NAME_GPIO_0, <span class="comment">/* &lt;GPIO0 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_1, <span class="comment">/* &lt;GPIO1 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_2, <span class="comment">/* &lt;GPIO2 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_3, <span class="comment">/* &lt;GPIO3 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_4, <span class="comment">/* &lt;GPIO4 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_5, <span class="comment">/* &lt;GPIO5 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_6, <span class="comment">/* &lt;GPIO6 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_7, <span class="comment">/* &lt;GPIO7 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_8, <span class="comment">/* &lt;GPIO8 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_9, <span class="comment">/* &lt;GPIO9 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_10, <span class="comment">/* &lt;GPIO10 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_11, <span class="comment">/* &lt;GPIO11 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_12, <span class="comment">/* &lt;GPIO12 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_13, <span class="comment">/* &lt;GPIO13 */</span></span><br><span class="line">    IOT_IO_NAME_GPIO_14, <span class="comment">/* &lt;GPIO14 */</span></span><br><span class="line">    IOT_IO_NAME_SFC_CSN, <span class="comment">/* &lt;SFC_CSN */</span></span><br><span class="line">    IOT_IO_NAME_SFC_IO1, <span class="comment">/* &lt;SFC_IO1 */</span></span><br><span class="line">    IOT_IO_NAME_SFC_IO2, <span class="comment">/* &lt;SFC_IO2 */</span></span><br><span class="line">    IOT_IO_NAME_SFC_IO0, <span class="comment">/* &lt;SFC_IO0 */</span></span><br><span class="line">    IOT_IO_NAME_SFC_CLK, <span class="comment">/* &lt;SFC_CLK */</span></span><br><span class="line">    IOT_IO_NAME_SFC_IO3, <span class="comment">/* &lt;SFC_IO3 */</span></span><br><span class="line">    IOT_IO_NAME_MAX,</span><br><span class="line">&#125; IotIoName;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @ingroup iot_io</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * GPIO_0 pin function.CNcomment:GPIO_0管脚功能。CNend</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_0_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_0_UART1_TXD = <span class="number">2</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_0_SPI1_CK,</span><br><span class="line">    IOT_IO_FUNC_GPIO_0_JTAG_TDO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_0_PWM3_OUT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_0_I2C1_SDA,</span><br><span class="line">&#125; IotIoFuncGpio0;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_1 pin function.CNcomment:GPIO_1管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_1_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_1_UART1_RXD = <span class="number">2</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_1_SPI1_RXD,</span><br><span class="line">    IOT_IO_FUNC_GPIO_1_JTAG_TCK,</span><br><span class="line">    IOT_IO_FUNC_GPIO_1_PWM4_OUT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_1_I2C1_SCL,</span><br><span class="line">    IOT_IO_FUNC_GPIO_1_BT_FREQ,</span><br><span class="line">&#125; IotIoFuncGpio1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_2 pin function.CNcomment:GPIO_2管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_2_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_2_UART1_RTS_N = <span class="number">2</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_2_SPI1_TXD,</span><br><span class="line">    IOT_IO_FUNC_GPIO_2_JTAG_TRSTN,</span><br><span class="line">    IOT_IO_FUNC_GPIO_2_PWM2_OUT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_2_SSI_CLK = <span class="number">7</span>,</span><br><span class="line">&#125; IotIoFuncGpio2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_3 pin function.CNcomment:GPIO_3管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_3_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_3_UART0_TXD,</span><br><span class="line">    IOT_IO_FUNC_GPIO_3_UART1_CTS_N,</span><br><span class="line">    IOT_IO_FUNC_GPIO_3_SPI1_CSN,</span><br><span class="line">    IOT_IO_FUNC_GPIO_3_JTAG_TDI,</span><br><span class="line">    IOT_IO_FUNC_GPIO_3_PWM5_OUT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_3_I2C1_SDA,</span><br><span class="line">    IOT_IO_FUNC_GPIO_3_SSI_DATA,</span><br><span class="line">&#125; IotIoFuncGpio3;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_4 pin function.CNcomment:GPIO_4管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_4_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_4_UART0_RXD = <span class="number">2</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_4_JTAG_TMS = <span class="number">4</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_4_PWM1_OUT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_4_I2C1_SCL,</span><br><span class="line">&#125; IotIoFuncGpio4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_5 pin function.CNcomment:GPIO_5管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_5_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_5_UART1_RXD = <span class="number">2</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_5_SPI0_CSN,</span><br><span class="line">    IOT_IO_FUNC_GPIO_5_PWM2_OUT = <span class="number">5</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_5_I2S0_MCLK,</span><br><span class="line">    IOT_IO_FUNC_GPIO_5_BT_STATUS,</span><br><span class="line">&#125; IotIoFuncGpio5;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_6 pin function.CNcomment:GPIO_6管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_6_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_6_UART1_TXD = <span class="number">2</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_6_SPI0_CK,</span><br><span class="line">    IOT_IO_FUNC_GPIO_6_PWM3_OUT = <span class="number">5</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_6_I2S0_TX,</span><br><span class="line">    IOT_IO_FUNC_GPIO_6_COEX_SWITCH,</span><br><span class="line">&#125; IotIoFuncGpio6;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_7 pin function.CNcomment:GPIO_7管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_7_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_7_UART1_CTS_N = <span class="number">2</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_7_SPI0_RXD,</span><br><span class="line">    IOT_IO_FUNC_GPIO_7_PWM0_OUT = <span class="number">5</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_7_I2S0_BCLK,</span><br><span class="line">    IOT_IO_FUNC_GPIO_7_BT_ACTIVE,</span><br><span class="line">&#125; IotIoFuncGpio7;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_8 pin function.CNcomment:GPIO_8管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_8_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_8_UART1_RTS_N = <span class="number">2</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_8_SPI0_TXD,</span><br><span class="line">    IOT_IO_FUNC_GPIO_8_PWM1_OUT = <span class="number">5</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_8_I2S0_WS,</span><br><span class="line">    IOT_IO_FUNC_GPIO_8_WLAN_ACTIVE,</span><br><span class="line">&#125; IotIoFuncGpio8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_9 pin function.CNcomment:GPIO_9管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_9_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_9_I2C0_SCL,</span><br><span class="line">    IOT_IO_FUNC_GPIO_9_UART2_RTS_N,</span><br><span class="line">    IOT_IO_FUNC_GPIO_9_SDIO_D2,</span><br><span class="line">    IOT_IO_FUNC_GPIO_9_SPI0_TXD,</span><br><span class="line">    IOT_IO_FUNC_GPIO_9_PWM0_OUT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_9_I2S0_MCLK = <span class="number">7</span>,</span><br><span class="line">&#125; IotIoFuncGpio9;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_10 pin function.CNcomment:GPIO_10管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_10_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_10_I2C0_SDA,</span><br><span class="line">    IOT_IO_FUNC_GPIO_10_UART2_CTS_N,</span><br><span class="line">    IOT_IO_FUNC_GPIO_10_SDIO_D3,</span><br><span class="line">    IOT_IO_FUNC_GPIO_10_SPI0_CK,</span><br><span class="line">    IOT_IO_FUNC_GPIO_10_PWM1_OUT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_10_I2S0_TX = <span class="number">7</span>,</span><br><span class="line">&#125; IotIoFuncGpio10;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_11 pin function.CNcomment:GPIO_11管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_11_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_11_UART2_TXD = <span class="number">2</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_11_SDIO_CMD,</span><br><span class="line">    IOT_IO_FUNC_GPIO_11_SPI0_RXD,</span><br><span class="line">    IOT_IO_FUNC_GPIO_11_PWM2_OUT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_11_RF_TX_EN_EXT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_11_I2S0_RX,</span><br><span class="line">&#125; IotIoFuncGpio11;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_12 pin function.CNcomment:GPIO_12管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_12_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_12_UART2_RXD = <span class="number">2</span>,</span><br><span class="line">    IOT_IO_FUNC_GPIO_12_SDIO_CLK,</span><br><span class="line">    IOT_IO_FUNC_GPIO_12_SPI0_CSN,</span><br><span class="line">    IOT_IO_FUNC_GPIO_12_PWM3_OUT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_12_RF_RX_EN_EXT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_12_I2S0_BCLK,</span><br><span class="line">&#125; IotIoFuncGpio12;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_13 pin function.CNcomment:GPIO_13管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_13_SSI_DATA,</span><br><span class="line">    IOT_IO_FUNC_GPIO_13_UART0_TXD,</span><br><span class="line">    IOT_IO_FUNC_GPIO_13_UART2_RTS_N,</span><br><span class="line">    IOT_IO_FUNC_GPIO_13_SDIO_D0,</span><br><span class="line">    IOT_IO_FUNC_GPIO_13_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_13_PWM4_OUT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_13_I2C0_SDA,</span><br><span class="line">    IOT_IO_FUNC_GPIO_13_I2S0_WS,</span><br><span class="line">&#125; IotIoFuncGpio13;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* GPIO_14 pin function.CNcomment:GPIO_14管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_GPIO_14_SSI_CLK,</span><br><span class="line">    IOT_IO_FUNC_GPIO_14_UART0_RXD,</span><br><span class="line">    IOT_IO_FUNC_GPIO_14_UART2_CTS_N,</span><br><span class="line">    IOT_IO_FUNC_GPIO_14_SDIO_D1,</span><br><span class="line">    IOT_IO_FUNC_GPIO_14_GPIO,</span><br><span class="line">    IOT_IO_FUNC_GPIO_14_PWM5_OUT,</span><br><span class="line">    IOT_IO_FUNC_GPIO_14_I2C0_SCL,</span><br><span class="line">&#125; IotIoFuncGpio14;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* SFC_CSN pin function.CNcomment:SFC_CSN管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_SFC_CSN_SFC_CSN,</span><br><span class="line">    IOT_IO_FUNC_SFC_CSN_SDIO_D2,</span><br><span class="line">    IOT_IO_FUNC_SFC_CSN_GPIO9,</span><br><span class="line">    IOT_IO_FUNC_SFC_CSN_SPI0_TXD = <span class="number">4</span>,</span><br><span class="line">&#125; IotIoFuncSfcCsn;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* SFC_DO pin function.CNcomment:SFC_DO管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_SFC_IO_1_SFC_DO,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_1_SDIO_D3,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_1_GPIO10,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_1_SPI0_CK = <span class="number">4</span>,</span><br><span class="line">&#125; IotIoFuncSfcIo1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* SFC_WPN pin function.CNcomment:SFC_WPN管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_SFC_IO_2_SFC_WPN,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_2_SDIO_CMD,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_2_GPIO11,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_2_RF_TX_EN_EXT,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_2_SPI0_RXD,</span><br><span class="line">&#125; IotIoFuncSfcIo2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* SFC_DI pin function.CNcomment:SFC_DI管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_SFC_IO_0_SFC_DI,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_0_SDIO_CLK,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_0_GPIO12,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_0_RF_RX_EN_EXT,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_0_SPI0_CSN,</span><br><span class="line">&#125; IotIoFuncSfcIo0;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* SFC_CLK pin function.CNcomment:SFC_CLK管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_SFC_CLK_SFC_CLK,</span><br><span class="line">    IOT_IO_FUNC_SFC_CLK_SDIO_D0,</span><br><span class="line">    IOT_IO_FUNC_SFC_CLK_GPIO13,</span><br><span class="line">    IOT_IO_FUNC_SFC_CLK_SSI_DATA = <span class="number">4</span>,</span><br><span class="line">&#125; IotIoFuncSfcClk;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* SFC_HOLDN pin function.CNcomment:SFC_HOLDN管脚功能。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_FUNC_SFC_IO_3_SFC_HOLDN,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_3_SDIO_D1,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_3_GPIO14,</span><br><span class="line">    IOT_IO_FUNC_SFC_IO_3_SSI_CLK = <span class="number">4</span>,</span><br><span class="line">&#125; IotIoFuncSfcIo3;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* @ingroup iot_io</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* I/O drive capability.CNcomment:IO驱动能力。CNend</span></span><br><span class="line"><span class="comment">* Note: The HI_IO_NAME_GPIO_0~HI_IO_NAME_GPIO_11 and HI_IO_NAME_GPIO_13~HI_IO_NAME_GPIO_14 driver capabilities are</span></span><br><span class="line"><span class="comment">*       optional.The value range is HI_IO_DRIVER_STRENGTH_0~HI_IO_DRIVER_STRENGTH_3, and the other I/O ranges are</span></span><br><span class="line"><span class="comment">*       HI_IO_DRIVER_STRENGTH_0~HI_IO_DRIVER_STRENGTH_7.CNcomment:注意:HI_IO_NAME_GPIO_0~HI_IO_NAME_GPIO_11、</span></span><br><span class="line"><span class="comment">*       HI_IO_NAME_GPIO_13~HI_IO_NAME_GPIO_14驱动能力可选范围是HI_IO_DRIVER_STRENGTH_0~HI_IO_DRIVER_STRENGTH_3，</span></span><br><span class="line"><span class="comment">*       其余IO范围是HI_IO_DRIVER_STRENGTH_0~HI_IO_DRIVER_STRENGTH_7。CNend</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    IOT_IO_DRIVER_STRENGTH_0 = <span class="number">0</span>,   <span class="comment">/* &lt;Drive strength level 0 (highest).CNcomment:驱动能力0级，驱动能力最高CNend */</span></span><br><span class="line">    IOT_IO_DRIVER_STRENGTH_1,   <span class="comment">/* &lt;Drive strength level 1.CNcomment:驱动能力1级CNend */</span></span><br><span class="line">    IOT_IO_DRIVER_STRENGTH_2,   <span class="comment">/* &lt;Drive strength level 2.CNcomment:驱动能力2级CNend */</span></span><br><span class="line">    IOT_IO_DRIVER_STRENGTH_3,   <span class="comment">/* &lt;Drive strength level 3.CNcomment:驱动能力3级CNend */</span></span><br><span class="line">    IOT_IO_DRIVER_STRENGTH_4,   <span class="comment">/* &lt;Drive strength level 4.CNcomment:驱动能力4级CNend */</span></span><br><span class="line">    IOT_IO_DRIVER_STRENGTH_5,   <span class="comment">/* &lt;Drive strength level 5.CNcomment:驱动能力5级CNend */</span></span><br><span class="line">    IOT_IO_DRIVER_STRENGTH_6,   <span class="comment">/* &lt;Drive strength level 6.CNcomment:驱动能力6级CNend */</span></span><br><span class="line">    IOT_IO_DRIVER_STRENGTH_7,   <span class="comment">/* &lt;Drive strength level 7 (lowest).CNcomment:驱动能力7级，驱动能力最低CNend */</span></span><br><span class="line">    IOT_IO_DRIVER_STRENGTH_MAX,</span><br><span class="line">&#125; IotIoDriverStrength;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">IoSetPull</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> id, IotIoPull val)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">IoSetFunc</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> id, <span class="type">unsigned</span> <span class="type">char</span> val)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">TaskMsleep</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> ms)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">/** @&#125; */</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> OLED_FONTS_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_FONTS_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************************6*8的点阵************************************/</span></span><br><span class="line"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">char</span> g_f6X8[][<span class="number">6</span>] = &#123;</span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span> &#125;, <span class="comment">// sp</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x2f</span>, <span class="number">0x00</span>, <span class="number">0x00</span> &#125;, <span class="comment">// !</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span> &#125;, <span class="comment">// &quot;</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x14</span>, <span class="number">0x7f</span>, <span class="number">0x14</span>, <span class="number">0x7f</span>, <span class="number">0x14</span> &#125;, <span class="comment">// #</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x2a</span>, <span class="number">0x7f</span>, <span class="number">0x2a</span>, <span class="number">0x12</span> &#125;, <span class="comment">// $</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x62</span>, <span class="number">0x64</span>, <span class="number">0x08</span>, <span class="number">0x13</span>, <span class="number">0x23</span> &#125;, <span class="comment">// %</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x36</span>, <span class="number">0x49</span>, <span class="number">0x55</span>, <span class="number">0x22</span>, <span class="number">0x50</span> &#125;, <span class="comment">// &amp;</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span> &#125;, <span class="comment">// &#x27;</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1c</span>, <span class="number">0x22</span>, <span class="number">0x41</span>, <span class="number">0x00</span> &#125;, <span class="comment">// (</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x22</span>, <span class="number">0x1c</span>, <span class="number">0x00</span> &#125;, <span class="comment">// )</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x14</span>, <span class="number">0x08</span>, <span class="number">0x3E</span>, <span class="number">0x08</span>, <span class="number">0x14</span> &#125;, <span class="comment">// *</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x3E</span>, <span class="number">0x08</span>, <span class="number">0x08</span> &#125;, <span class="comment">// +</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA0</span>, <span class="number">0x60</span>, <span class="number">0x00</span> &#125;, <span class="comment">// ,</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span> &#125;, <span class="comment">// -</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x60</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span> &#125;, <span class="comment">// .</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x02</span> &#125;, <span class="comment">// /</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x51</span>, <span class="number">0x49</span>, <span class="number">0x45</span>, <span class="number">0x3E</span> &#125;, <span class="comment">// 0</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x42</span>, <span class="number">0x7F</span>, <span class="number">0x40</span>, <span class="number">0x00</span> &#125;, <span class="comment">// 1</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x42</span>, <span class="number">0x61</span>, <span class="number">0x51</span>, <span class="number">0x49</span>, <span class="number">0x46</span> &#125;, <span class="comment">// 2</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x21</span>, <span class="number">0x41</span>, <span class="number">0x45</span>, <span class="number">0x4B</span>, <span class="number">0x31</span> &#125;, <span class="comment">// 3</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x14</span>, <span class="number">0x12</span>, <span class="number">0x7F</span>, <span class="number">0x10</span> &#125;, <span class="comment">// 4</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x27</span>, <span class="number">0x45</span>, <span class="number">0x45</span>, <span class="number">0x45</span>, <span class="number">0x39</span> &#125;, <span class="comment">// 5</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x3C</span>, <span class="number">0x4A</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x30</span> &#125;, <span class="comment">// 6</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x71</span>, <span class="number">0x09</span>, <span class="number">0x05</span>, <span class="number">0x03</span> &#125;, <span class="comment">// 7</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x36</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x36</span> &#125;, <span class="comment">// 8</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x06</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x29</span>, <span class="number">0x1E</span> &#125;, <span class="comment">// 9</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x36</span>, <span class="number">0x36</span>, <span class="number">0x00</span>, <span class="number">0x00</span> &#125;, <span class="comment">// :</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x56</span>, <span class="number">0x36</span>, <span class="number">0x00</span>, <span class="number">0x00</span> &#125;, <span class="comment">// ;号</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x14</span>, <span class="number">0x22</span>, <span class="number">0x41</span>, <span class="number">0x00</span> &#125;, <span class="comment">// &lt;</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span> &#125;, <span class="comment">// =</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x22</span>, <span class="number">0x14</span>, <span class="number">0x08</span> &#125;, <span class="comment">// &gt;</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x51</span>, <span class="number">0x09</span>, <span class="number">0x06</span> &#125;, <span class="comment">// ?</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x32</span>, <span class="number">0x49</span>, <span class="number">0x59</span>, <span class="number">0x51</span>, <span class="number">0x3E</span> &#125;, <span class="comment">// @</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7C</span>, <span class="number">0x12</span>, <span class="number">0x11</span>, <span class="number">0x12</span>, <span class="number">0x7C</span> &#125;, <span class="comment">// A</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x36</span> &#125;, <span class="comment">// B</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x22</span> &#125;, <span class="comment">// C</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x22</span>, <span class="number">0x1C</span> &#125;, <span class="comment">// D</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x41</span> &#125;, <span class="comment">// E</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x09</span>, <span class="number">0x09</span>, <span class="number">0x09</span>, <span class="number">0x01</span> &#125;, <span class="comment">// F</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x41</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x7A</span> &#125;, <span class="comment">// G</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x7F</span> &#125;, <span class="comment">// H</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x7F</span>, <span class="number">0x41</span>, <span class="number">0x00</span> &#125;, <span class="comment">// I</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x41</span>, <span class="number">0x3F</span>, <span class="number">0x01</span> &#125;, <span class="comment">// J</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x08</span>, <span class="number">0x14</span>, <span class="number">0x22</span>, <span class="number">0x41</span> &#125;, <span class="comment">// K</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span> &#125;, <span class="comment">// L</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x02</span>, <span class="number">0x0C</span>, <span class="number">0x02</span>, <span class="number">0x7F</span> &#125;, <span class="comment">// M</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x7F</span> &#125;, <span class="comment">// N</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x3E</span> &#125;, <span class="comment">// O</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x09</span>, <span class="number">0x09</span>, <span class="number">0x09</span>, <span class="number">0x06</span> &#125;, <span class="comment">// P</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x41</span>, <span class="number">0x51</span>, <span class="number">0x21</span>, <span class="number">0x5E</span> &#125;, <span class="comment">// Q</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x09</span>, <span class="number">0x19</span>, <span class="number">0x29</span>, <span class="number">0x46</span> &#125;, <span class="comment">// R</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x46</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x31</span> &#125;, <span class="comment">// S</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x7F</span>, <span class="number">0x01</span>, <span class="number">0x01</span> &#125;, <span class="comment">// T</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x3F</span> &#125;, <span class="comment">// U</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x20</span>, <span class="number">0x1F</span> &#125;, <span class="comment">// V</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x40</span>, <span class="number">0x38</span>, <span class="number">0x40</span>, <span class="number">0x3F</span> &#125;, <span class="comment">// W</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x63</span>, <span class="number">0x14</span>, <span class="number">0x08</span>, <span class="number">0x14</span>, <span class="number">0x63</span> &#125;, <span class="comment">// X</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x08</span>, <span class="number">0x70</span>, <span class="number">0x08</span>, <span class="number">0x07</span> &#125;, <span class="comment">// Y</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x61</span>, <span class="number">0x51</span>, <span class="number">0x49</span>, <span class="number">0x45</span>, <span class="number">0x43</span> &#125;, <span class="comment">// Z</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x00</span> &#125;, <span class="comment">// [</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x55</span>, <span class="number">0x2A</span>, <span class="number">0x55</span>, <span class="number">0x2A</span>, <span class="number">0x55</span> &#125;, <span class="comment">// 55</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x7F</span>, <span class="number">0x00</span> &#125;, <span class="comment">// ]</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span> &#125;, <span class="comment">// ^</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span> &#125;, <span class="comment">// _</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x00</span> &#125;, <span class="comment">// &#x27;</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x78</span> &#125;, <span class="comment">// a</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x48</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x38</span> &#125;, <span class="comment">// b</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x38</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x20</span> &#125;, <span class="comment">// c</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x38</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x48</span>, <span class="number">0x7F</span> &#125;, <span class="comment">// d</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x38</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x18</span> &#125;, <span class="comment">// e</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x7E</span>, <span class="number">0x09</span>, <span class="number">0x01</span>, <span class="number">0x02</span> &#125;, <span class="comment">// f</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0xA4</span>, <span class="number">0xA4</span>, <span class="number">0xA4</span>, <span class="number">0x7C</span> &#125;, <span class="comment">// g</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x78</span> &#125;, <span class="comment">// h</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x44</span>, <span class="number">0x7D</span>, <span class="number">0x40</span>, <span class="number">0x00</span> &#125;, <span class="comment">// i</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x84</span>, <span class="number">0x7D</span>, <span class="number">0x00</span> &#125;, <span class="comment">// j</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x10</span>, <span class="number">0x28</span>, <span class="number">0x44</span>, <span class="number">0x00</span> &#125;, <span class="comment">// k</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x7F</span>, <span class="number">0x40</span>, <span class="number">0x00</span> &#125;, <span class="comment">// l</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7C</span>, <span class="number">0x04</span>, <span class="number">0x18</span>, <span class="number">0x04</span>, <span class="number">0x78</span> &#125;, <span class="comment">// m</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7C</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x78</span> &#125;, <span class="comment">// n</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x38</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x38</span> &#125;, <span class="comment">// o</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0xFC</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x18</span> &#125;, <span class="comment">// p</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x18</span>, <span class="number">0xFC</span> &#125;, <span class="comment">// q</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x7C</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x08</span> &#125;, <span class="comment">// r</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x48</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x20</span> &#125;, <span class="comment">// s</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x3F</span>, <span class="number">0x44</span>, <span class="number">0x40</span>, <span class="number">0x20</span> &#125;, <span class="comment">// t</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x3C</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x20</span>, <span class="number">0x7C</span> &#125;, <span class="comment">// u</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x1C</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x20</span>, <span class="number">0x1C</span> &#125;, <span class="comment">// v</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x3C</span>, <span class="number">0x40</span>, <span class="number">0x30</span>, <span class="number">0x40</span>, <span class="number">0x3C</span> &#125;, <span class="comment">// w</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x44</span>, <span class="number">0x28</span>, <span class="number">0x10</span>, <span class="number">0x28</span>, <span class="number">0x44</span> &#125;, <span class="comment">// x</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x1C</span>, <span class="number">0xA0</span>, <span class="number">0xA0</span>, <span class="number">0xA0</span>, <span class="number">0x7C</span> &#125;, <span class="comment">// y</span></span><br><span class="line">    &#123; <span class="number">0x00</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0x54</span>, <span class="number">0x4C</span>, <span class="number">0x44</span> &#125;, <span class="comment">// z</span></span><br><span class="line">    &#123; <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span> &#125;, <span class="comment">// horiz lines</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/****************************************8*16的点阵************************************/</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> g_f8X16[] = &#123;</span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// 0</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x33</span>, <span class="number">0x30</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// ! 1</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x0C</span>, <span class="number">0x06</span>, <span class="number">0x10</span>, <span class="number">0x0C</span>, <span class="number">0x06</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// &quot; 2</span></span><br><span class="line">    <span class="number">0x40</span>, <span class="number">0xC0</span>, <span class="number">0x78</span>, <span class="number">0x40</span>, <span class="number">0xC0</span>, <span class="number">0x78</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x3F</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x3F</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="comment">// # 3</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x70</span>, <span class="number">0x88</span>, <span class="number">0xFC</span>, <span class="number">0x08</span>, <span class="number">0x30</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x20</span>, <span class="number">0xFF</span>, <span class="number">0x21</span>, <span class="number">0x1E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// $ 4</span></span><br><span class="line">    <span class="number">0xF0</span>, <span class="number">0x08</span>, <span class="number">0xF0</span>, <span class="number">0x00</span>, <span class="number">0xE0</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x21</span>, <span class="number">0x1C</span>, <span class="number">0x03</span>, <span class="number">0x1E</span>, <span class="number">0x21</span>, <span class="number">0x1E</span>, <span class="number">0x00</span>, <span class="comment">// % 5</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0xF0</span>, <span class="number">0x08</span>, <span class="number">0x88</span>, <span class="number">0x70</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1E</span>, <span class="number">0x21</span>, <span class="number">0x23</span>, <span class="number">0x24</span>, <span class="number">0x19</span>, <span class="number">0x27</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="comment">// &amp; 6</span></span><br><span class="line">    <span class="number">0x10</span>, <span class="number">0x16</span>, <span class="number">0x0E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// &#x27; 7</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xE0</span>, <span class="number">0x18</span>, <span class="number">0x04</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x18</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="comment">// ( 8</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x18</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x20</span>, <span class="number">0x18</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// ) 9</span></span><br><span class="line">    <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0xF0</span>, <span class="number">0x80</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x0F</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="comment">// * 10</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x1F</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="comment">// + 11</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0xB0</span>, <span class="number">0x70</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// , 12</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="comment">// - 13</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x30</span>, <span class="number">0x30</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// . 14</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x60</span>, <span class="number">0x18</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x60</span>, <span class="number">0x18</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// / 15</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0xE0</span>, <span class="number">0x10</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0x0F</span>, <span class="number">0x00</span>, <span class="comment">// 0 16</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x10</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// 1 17</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x70</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x88</span>, <span class="number">0x70</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x30</span>, <span class="number">0x28</span>, <span class="number">0x24</span>, <span class="number">0x22</span>, <span class="number">0x21</span>, <span class="number">0x30</span>, <span class="number">0x00</span>, <span class="comment">// 2 18</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x30</span>, <span class="number">0x08</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0x48</span>, <span class="number">0x30</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x11</span>, <span class="number">0x0E</span>, <span class="number">0x00</span>, <span class="comment">// 3 19</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x04</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x3F</span>, <span class="number">0x24</span>, <span class="number">0x00</span>, <span class="comment">// 4 20</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x19</span>, <span class="number">0x21</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x11</span>, <span class="number">0x0E</span>, <span class="number">0x00</span>, <span class="comment">// 5 21</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0xE0</span>, <span class="number">0x10</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0x11</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x11</span>, <span class="number">0x0E</span>, <span class="number">0x00</span>, <span class="comment">// 6 22</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x38</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0xC8</span>, <span class="number">0x38</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// 7 23</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x70</span>, <span class="number">0x88</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x88</span>, <span class="number">0x70</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1C</span>, <span class="number">0x22</span>, <span class="number">0x21</span>, <span class="number">0x21</span>, <span class="number">0x22</span>, <span class="number">0x1C</span>, <span class="number">0x00</span>, <span class="comment">// 8 24</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0xE0</span>, <span class="number">0x10</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x31</span>, <span class="number">0x22</span>, <span class="number">0x22</span>, <span class="number">0x11</span>, <span class="number">0x0F</span>, <span class="number">0x00</span>, <span class="comment">// 9 25</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x30</span>, <span class="number">0x30</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// : 26</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// ;号 27</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x40</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="comment">// &lt; 28</span></span><br><span class="line">    <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="comment">// = 29</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="comment">// &gt; 30</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x70</span>, <span class="number">0x48</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0xF0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x30</span>, <span class="number">0x36</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// ? 31</span></span><br><span class="line">    <span class="number">0xC0</span>, <span class="number">0x30</span>, <span class="number">0xC8</span>, <span class="number">0x28</span>, <span class="number">0xE8</span>, <span class="number">0x10</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x18</span>, <span class="number">0x27</span>, <span class="number">0x24</span>, <span class="number">0x23</span>, <span class="number">0x14</span>, <span class="number">0x0B</span>, <span class="number">0x00</span>, <span class="comment">// @ 32</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0x38</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3C</span>, <span class="number">0x23</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x27</span>, <span class="number">0x38</span>, <span class="number">0x20</span>, <span class="comment">// A 33</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0x70</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x11</span>, <span class="number">0x0E</span>, <span class="number">0x00</span>, <span class="comment">// B 34</span></span><br><span class="line">    <span class="number">0xC0</span>, <span class="number">0x30</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x38</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x18</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="comment">// C 35</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0x0F</span>, <span class="number">0x00</span>, <span class="comment">// D 36</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0xE8</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x23</span>, <span class="number">0x20</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="comment">// E 37</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0xE8</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// F 38</span></span><br><span class="line">    <span class="number">0xC0</span>, <span class="number">0x30</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x38</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x18</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x22</span>, <span class="number">0x1E</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="comment">// G 39</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="comment">// H 40</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// I 41</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x7F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// J 42</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x88</span>, <span class="number">0xC0</span>, <span class="number">0x28</span>, <span class="number">0x18</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x01</span>, <span class="number">0x26</span>, <span class="number">0x38</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="comment">// K 43</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x30</span>, <span class="number">0x00</span>, <span class="comment">// L 44</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0xF8</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="comment">// M 45</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x30</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x18</span>, <span class="number">0x3F</span>, <span class="number">0x00</span>, <span class="comment">// N 46</span></span><br><span class="line">    <span class="number">0xE0</span>, <span class="number">0x10</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0x0F</span>, <span class="number">0x00</span>, <span class="comment">// O 47</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0xF0</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// P 48</span></span><br><span class="line">    <span class="number">0xE0</span>, <span class="number">0x10</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0xE0</span>, <span class="number">0x00</span>, <span class="number">0x0F</span>, <span class="number">0x18</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x38</span>, <span class="number">0x50</span>, <span class="number">0x4F</span>, <span class="number">0x00</span>, <span class="comment">// Q 49</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0x70</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x0C</span>, <span class="number">0x30</span>, <span class="number">0x20</span>, <span class="comment">// R 50</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x70</span>, <span class="number">0x88</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x38</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x38</span>, <span class="number">0x20</span>, <span class="number">0x21</span>, <span class="number">0x21</span>, <span class="number">0x22</span>, <span class="number">0x1C</span>, <span class="number">0x00</span>, <span class="comment">// S 51</span></span><br><span class="line">    <span class="number">0x18</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// T 52</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x1F</span>, <span class="number">0x00</span>, <span class="comment">// U 53</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0x78</span>, <span class="number">0x88</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC8</span>, <span class="number">0x38</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x38</span>, <span class="number">0x0E</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// V 54</span></span><br><span class="line">    <span class="number">0xF8</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x3C</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x3C</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="comment">// W 55</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0x18</span>, <span class="number">0x68</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x68</span>, <span class="number">0x18</span>, <span class="number">0x08</span>, <span class="number">0x20</span>, <span class="number">0x30</span>, <span class="number">0x2C</span>, <span class="number">0x03</span>, <span class="number">0x03</span>, <span class="number">0x2C</span>, <span class="number">0x30</span>, <span class="number">0x20</span>, <span class="comment">// X 56</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0x38</span>, <span class="number">0xC8</span>, <span class="number">0x00</span>, <span class="number">0xC8</span>, <span class="number">0x38</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// Y 57</span></span><br><span class="line">    <span class="number">0x10</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0xC8</span>, <span class="number">0x38</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x38</span>, <span class="number">0x26</span>, <span class="number">0x21</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="comment">// Z 58</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xFE</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x00</span>, <span class="comment">// [ 59</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x0C</span>, <span class="number">0x30</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x06</span>, <span class="number">0x38</span>, <span class="number">0xC0</span>, <span class="number">0x00</span>, <span class="comment">// \ 60</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0xFE</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x7F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// ] 61</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// ^ 62</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="comment">// _ 63</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// ` 64</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x19</span>, <span class="number">0x24</span>, <span class="number">0x22</span>, <span class="number">0x22</span>, <span class="number">0x22</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="comment">// a 65</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x11</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x11</span>, <span class="number">0x0E</span>, <span class="number">0x00</span>, <span class="comment">// b 66</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0E</span>, <span class="number">0x11</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="comment">// c 67</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x88</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0E</span>, <span class="number">0x11</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="comment">// d 68</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0x22</span>, <span class="number">0x22</span>, <span class="number">0x22</span>, <span class="number">0x22</span>, <span class="number">0x13</span>, <span class="number">0x00</span>, <span class="comment">// e 69</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0xF0</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0x88</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// f 70</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x6B</span>, <span class="number">0x94</span>, <span class="number">0x94</span>, <span class="number">0x94</span>, <span class="number">0x93</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="comment">// g 71</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x21</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="comment">// h 72</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x98</span>, <span class="number">0x98</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// i 73</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x98</span>, <span class="number">0x98</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC0</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x7F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// j 74</span></span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x24</span>, <span class="number">0x02</span>, <span class="number">0x2D</span>, <span class="number">0x30</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="comment">// k 75</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0xF8</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// l 76</span></span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="comment">// m 77</span></span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x21</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="comment">// n 78</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x1F</span>, <span class="number">0x00</span>, <span class="comment">// o 79</span></span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0xFF</span>, <span class="number">0xA1</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x11</span>, <span class="number">0x0E</span>, <span class="number">0x00</span>, <span class="comment">// p 80</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0E</span>, <span class="number">0x11</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0xA0</span>, <span class="number">0xFF</span>, <span class="number">0x80</span>, <span class="comment">// q 81</span></span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x3F</span>, <span class="number">0x21</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="comment">// r 82</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x33</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x19</span>, <span class="number">0x00</span>, <span class="comment">// s 83</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0xE0</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// t 84</span></span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0x3F</span>, <span class="number">0x20</span>, <span class="comment">// u 85</span></span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x0E</span>, <span class="number">0x30</span>, <span class="number">0x08</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="comment">// v 86</span></span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x0F</span>, <span class="number">0x30</span>, <span class="number">0x0C</span>, <span class="number">0x03</span>, <span class="number">0x0C</span>, <span class="number">0x30</span>, <span class="number">0x0F</span>, <span class="number">0x00</span>, <span class="comment">// w 87</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x31</span>, <span class="number">0x2E</span>, <span class="number">0x0E</span>, <span class="number">0x31</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="comment">// x 88</span></span><br><span class="line">    <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0x8E</span>, <span class="number">0x70</span>, <span class="number">0x18</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="comment">// y 89</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x21</span>, <span class="number">0x30</span>, <span class="number">0x2C</span>, <span class="number">0x22</span>, <span class="number">0x21</span>, <span class="number">0x30</span>, <span class="number">0x00</span>, <span class="comment">// z 90</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x80</span>, <span class="number">0x7C</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="comment">// &#123; 91</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// | 92</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x7C</span>, <span class="number">0x80</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x3F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// &#125; 93</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// ~ 94</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-5"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> OLED_SSD1306_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_SSD1306_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief ssd1306 OLED Initialize.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">OledInit</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief Set cursor position</span></span><br><span class="line"><span class="comment"> * @param x the horizontal posistion of cursor</span></span><br><span class="line"><span class="comment"> * @param y the vertical position of cursor</span></span><br><span class="line"><span class="comment"> * @return Returns &#123;@link WIFI_IOT_SUCCESS&#125; if the operation is successful;</span></span><br><span class="line"><span class="comment"> * returns an error code defined in &#123;@link wifiiot_errno.h&#125; otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OledSetPosition</span><span class="params">(<span class="type">uint8_t</span> x, <span class="type">uint8_t</span> y)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">OledFillScreen</span><span class="params">(<span class="type">uint8_t</span> fillData)</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Font</span> &#123;</span></span><br><span class="line">    FONT6_X8 = <span class="number">1</span>,</span><br><span class="line">    FONT8_X16</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> <span class="title">Font</span> <span class="title">Font</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">OledShowChar</span><span class="params">(<span class="type">uint8_t</span> x, <span class="type">uint8_t</span> y, <span class="type">uint8_t</span> ch, Font font)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OledShowString</span><span class="params">(<span class="type">uint8_t</span> x, <span class="type">uint8_t</span> y, <span class="type">const</span> <span class="type">char</span>* str, Font font)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// OLED_SSD1306_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1>Hi3516DV300板子开发</h1><div class="note blue icon modern"><p>由于篇幅问题，点击<a href="https://asa-world.cn/36f24770/">这里</a>阅读分类网模型的训练。</p></div>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
            <tag> 板端开发 </tag>
            
            <tag> linux </tag>
            
            <tag> 机器视觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dijkstra算法实践</title>
      <link href="/39935ec6/"/>
      <url>/39935ec6/</url>
      
        <content type="html"><![CDATA[<h1>项目要求</h1><ol><li>使用 Dijkstra 算法（dial 实现）计算任意两点间的最短路；</li><li>使用最短路由配置任意两点间的通信业务；</li><li>将所有业务在可视化平台上进行展示。</li></ol><h1>Dijkstra 算法原理</h1><h2 id="基本思想">基本思想</h2><p>Dijkstra 算法使用了广度优先搜索解决赋权有向图或者无向图的单源最短路径问题，采用的是一种贪心的策略，构造一个循环，每次循环都增加一个顶点到最短路径树上，所选择的顶点即为在所有与树邻接的顶点中和源点最近的顶点， 其中就隐含了广度优先搜索的思想，逐步地发展最短路径树，直到它覆盖所有顶点。其中，记录每一个顶点的前继节点可以实现最短路的重建，对距离的更新可以保证现有路径为当前最优解。</p><h2 id="基本步骤">基本步骤</h2><ol><li>初始化：使用 d(i)来表示顶点 i 的距离标记，初始化为无穷大；使用 p(i)来表示顶点 i 在最短路径树上的前继点，初始化为 null；使用 S 表示最短路径树上的顶点集合，初始化时加入源点 s，同时将 s 点的距离标记初始化为 0， 前继点为 null</li><li>对 s 点做更新，更新操作为：对需要更新的点 i 的所有邻接点，如果 i 点到源点的距离和 i 点到邻接点的权重之和小于邻接点到源点的的距离，由贪心算法求局部最优解的要求，将该邻接点到源点的距离标记更新为 i 点到源点的距离和 i 点到邻接点的权重之和，此时邻接点的前继点为 i。</li><li>循环扩张最小路径树，直到所有顶点都在该树上，循环内的操作为： 找出已经永久标记的顶点集合和未被标记的顶点集合之间的权重最小割边，将该割边上未被探索的顶点加入已被标记的顶点集合，同时更新对该顶点做更新，更新操作如（2）。</li><li>以上方法为单源多宿最短路的求解，若要求解单源单宿最短路，可以增加一个判断模块，当宿点被永久标记时终止循环。永久标记条件：当一点的所 有入度的另一端都已经被永久标记时，该点即可被永久标记。</li></ol><h2 id="示例">示例</h2><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220804161912151.png" alt="示例拓扑图"></p><p>上图是一个无向有权图，若源点为 a，最小路径树的生成过程为：</p><ol><li>a-&gt;b:0+1&lt; ∞ ; a −&gt; c: 0 + 6 &lt; ∞. 所以 d[b] = 1, d[c] = 6，前继点为 a,进入 while 循环，选择最小割边，将 b 加入最小路径树，更新 b；</li><li>对 b 的邻接点做更新，1+2 &lt; d[d] ，1+5 &lt; d[e] ，所以d[d]  = d[b] + w[b,d] = 3，d[e] = d[b] +w[b,e] = 6 ，将 d,e 的前继点设为 b，进入下一次循环，选择最小割边， 将 d 加入最小路径树，更新 d；</li><li>一直进行如上的循环，直到所有顶点都在最短路径树上。</li></ol><h1>算法实现</h1><h2 id="引进新的数据结构-桶">引进新的数据结构——桶</h2><h3 id="特殊之处">特殊之处</h3><p>根据距离值的最大值留出足够数量的桶，桶的标记即为距离值，根据顶点的距离标记将顶点加入不同的桶中，执行 FindMin 操作时直接从 标记最小的桶读起，节约了比较的时间。同时，距离标记更新后要将顶点转移到 新的桶里面，</p><h3 id="桶的数量">桶的数量</h3><p>令 C 表示边权的最大值，则距离的最大值为 nC，同时还有 一个距离为无穷大的桶，所以总共需要 nC+1 个桶。</p><h3 id="缺陷">缺陷</h3><p>nC 数量级的桶太消耗空间了，有大量的桶一直闲置。</p><h3 id="改进：循环桶">改进：循环桶</h3><p>由于边界点的距离标记不会超过 d[i]+C（i 为当前标记点，C 为权重最大值）， 对顶点 x 的标号为 d[x]mod(C+1)，最多需要 C+1 个桶。</p><p>对于同一个桶里面的实际上距离标记不相同的点不必做额外处理，因为第一次永久标记的节点距离标记肯定是最短的，该永久标记点的邻接点不可能在同一个桶中（边权重值最大为 C，桶的编号为距离标记对 C+1 取余后的值），除非两个邻接点和该点之间的边权值相同，即使如此，选其中的任意一个也没有问题。 考虑是否标记邻接点时只需要判断邻接点是否已经被永久标记，是则不再标记， 否则永久标记。</p><p>每永久标记一次，桶的头部都要往后一个桶移动，并且保证改变桶的头部之 前先把头部桶里面的所有节点清除出桶，然后永久标记。</p><h2 id="实现方式比较">实现方式比较</h2><h3 id="数组-队列-实现">数组（队列）实现</h3><p>此方法为最通用的算法实现方法，也是对读者来说最容易理解的一种实现方法。核心思想为用一个数据结构来维护所有的边界点，相当于所有边界边被分成不同的小集合，与同一个边界点相关联的那些边只记录一个最小值。相比与直接简单粗暴地每次都搜索所有边再筛选后进行更新距离的 Dijkstra 的最直接实现算法，此算法的运行时间从 O(nm) 优化到了 O(n*n+m)。</p><h3 id="堆实现">堆实现</h3><p>此方法逻辑上和 1 类似，只是用堆来维护 V-X 集合。堆本身可以利用 Python 中的 heapq 模块较为简单地实现各种操作，如存储时就给元素进行排序，在调用弹出元素时会自行选择最大或最小的元素进行弹出。距离值更新后要将元素先从堆中删除，再插入。这减少了算法中的代码编写和算法的复杂度。此方法下总 RT 为 O(mlogn)。</p><h3 id="桶实现">桶实现</h3><p>此方法逻辑上和 1 类似，只是用桶来维护 V-X 集合。对普通桶，令 C 表示边权的最大值，则桶的数目上限为 nC+1。此时 RT 为 O(m+nC)。循环桶则是减小了桶的用量，但是 RT 不变。因为每个桶被检查的数目依旧会增大。从多次实验的结果来看，此方法在 RT 上实际上优于方法2。</p><p>最终，我们选择使用循环桶来实现 Dijkstra 算法。</p><h2 id="循环桶实现-dijkstra-算法">循环桶实现 dijkstra 算法</h2><h3 id="步骤">步骤</h3><ol><li>初始化桶，把源节点加入到桶中。</li><li>弹出最小距离标记节点。</li><li>将最小距离标记节点永久标记。</li><li>将永久标记节点的所有邻接节点入桶。</li><li>重复 bcd 操作，直到所有桶空，算法结束。</li></ol><h3 id="示例">示例</h3><p>上图为一个有向有权图。若源点为 1 号点，则最短路径树的生成过程为</p><ol><li>首先初始化循环桶，由于最大边权重为 15，所以 C 为 15。将点 1 放入桶内， 因为此时将点 1 的距离设为了 0，因此放入桶头（初始化时设置桶头为第一个桶），如图 2.5 所示。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220804165400880.png" alt="桶状态示意图"></p><ol start="2"><li>进入循环，弹出最小距离标记节点。此时先从桶头开始搜索，按顺序寻找第 一个不为空的桶。在此范例中顺序为顺时针。找到该桶后开始弹出此桶内的元素。 在此范例中弹出的元素是 1 号；</li><li>之后开始检索，首先判断 1 号是否已经被永久标记，判断结果为 1 号未被永 久标记，则此时将 1 号永久标记。标记的同时永久记录此时的记录值，不再更改。</li><li>标记后搜索与 1 号相连的节点，将相应节点按照此时对应的距离对 16 取余后 的结果加入桶中。在本例中，加入 2 号（入 1 桶），再加入 3 号（入 12 桶）。如图 2.6 所示；</li><li>此时一轮循环已经结束，开始进行下一轮循环。桶头开始按顺时针方向移动， 直到找到下一个非空桶。在本例中它会发现 1 桶。开始清空此时的 1 桶。如图 2.7 所示；</li><li>2 号点被弹出，判断后进行永久标记并开始搜索和 2 号点相连的点。只要点未被永久标记，就按照 d 中规则将它们按照对应的距离值入相应的桶。需要注意的是，此时桶内会有两个 3 号点，因为它的距离值被更新过。但由于优先被弹出并且标记的 3 号点对应的距离一定更小，所以这种加入方式等效于让 3 号点移动到了能更快被弹出的桶内。见图 2.8；</li><li>重复上述过程，直到整个桶内无空桶，理论上整个图就完成了遍历，按照永久标记时记录的距离值可生成最小生成树。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220804165626976.png" alt="桶状态示意图"></p><h2 id="代码实现">代码实现</h2><h3 id="dijkstra-算法的实现">dijkstra 算法的实现</h3><p>（1）初始化，将距离标记置为 99999，前继节点为空，源主机的距离标记赋为 0 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">dijkstra</span>(<span class="params">self,src_dpid,dst_dpid,src_port,dst_port</span>): <span class="number">2.</span> c = <span class="number">29</span></span><br><span class="line">    adjacent = self.get_adjacent(self.links)</span><br><span class="line">    buckets = BucketSet(c+<span class="number">1</span>)</span><br><span class="line">    node_s = (<span class="number">0</span>,src_dpid)</span><br><span class="line">    d = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> u <span class="keyword">in</span> self.switches: </span><br><span class="line">        d[u] = <span class="number">99999</span></span><br><span class="line">    d[src_dpid] = <span class="number">0</span></span><br><span class="line">    pre = &#123;&#125;</span><br></pre></td></tr></table></figure><p>（2）用循环桶来维护未标记点的集合，其中循环桶是自定义的一个类，需在前面中引用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> BucketSet <span class="keyword">import</span> BucketSet</span><br></pre></td></tr></table></figure><p>实现如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">buckets.add_thing(node_s)</span><br><span class="line">flag = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> buckets.SetEmpty() <span class="keyword">and</span> flag == <span class="number">1</span>: </span><br><span class="line">    min_list = buckets.pop_min() <span class="comment">#将桶中距离标记最小的点加入最短路径列表，实际上就是将已标记集合和未标记集合之间的最短割边加入最短路径树，此时还未永久标记，即 find_min 操作</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> <span class="built_in">len</span>(min_list) == <span class="number">0</span>: </span><br><span class="line">            min_node = min_list.pop() <span class="comment">#取出该点，与目的主机的进行比对，如果已经探测到目的主机，则跳出循环</span></span><br><span class="line">            <span class="keyword">if</span>(min_node[<span class="number">1</span>] == dst_dpid): </span><br><span class="line">                flag = <span class="number">0</span></span><br><span class="line">                <span class="keyword">break</span> </span><br><span class="line">            <span class="keyword">for</span> u <span class="keyword">in</span> self.switches: <span class="comment">#取该点的邻接点，进行距离标记的更新，如果该点的下一点的距离标记比该点的距离标记和两点之间权值之和大，则将该点设为下一点的前继节点，将该点的距离标记和两点之间权值之和设为新的距离标记，即 update 操作</span></span><br><span class="line">                <span class="keyword">if</span>(u <span class="keyword">in</span> adjacent[min_node[<span class="number">1</span>]]):</span><br><span class="line">                    <span class="keyword">for</span> link <span class="keyword">in</span> self.links: </span><br><span class="line">                        <span class="keyword">if</span> (link[<span class="string">&#x27;src_dpid&#x27;</span>] == min_node[<span class="number">1</span>]) <span class="keyword">and</span> (link[<span class="string">&#x27;dst_dpid&#x27;</span>]== u): <span class="comment">#如果要寻找的最短路之间仅有一条边，这条边的权重即为最短路的权重</span></span><br><span class="line">                            delay = link[<span class="string">&#x27;delay&#x27;</span>]</span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">if</span>(d[min_node[<span class="number">1</span>]]+delay &lt; d[u]): <span class="comment">#update 操作，权值更新</span></span><br><span class="line">                        pre[u] = min_node[<span class="number">1</span>] <span class="comment">#前继节点更新</span></span><br><span class="line">                        d[u] = d[min_node[<span class="number">1</span>]] + delay <span class="comment">#距离标记更新</span></span><br><span class="line">                        buckets.add_thing((d[u],u)) <span class="comment">#将 u 点的邻接点加入桶中</span></span><br></pre></td></tr></table></figure><p>（3）重建最短路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">getpath = []</span><br><span class="line">s = dst_dpid</span><br><span class="line"><span class="keyword">while</span> s != src_dpid: <span class="comment">#从目的主机到源主机，将最短路径上的点加入 getpath 列表</span></span><br><span class="line">    getpath.append(s)</span><br><span class="line">    s = pre[s]</span><br><span class="line">    getpath.append(src_dpid)</span><br><span class="line">    getpath.reverse()<span class="comment">#由于上面的操作存储的最短路径是反向的，需要使用 reverse 函数将列表中的序列进行反向</span></span><br><span class="line"></span><br><span class="line">    self.minpath = getpath<span class="comment">#得到最终的最短路</span></span><br></pre></td></tr></table></figure><p>（4）提供 ryu 配置最短路所需的端口信息，使流表的下发能够一步到位</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ryu_path = []</span><br><span class="line">in_port = src_port<span class="comment">#从源主机到与它相连的交换机的端口号</span></span><br><span class="line"><span class="keyword">for</span> s1,s2 <span class="keyword">in</span> <span class="built_in">zip</span>(getpath[:-<span class="number">1</span>],getpath[<span class="number">1</span>:]):<span class="comment">#分别获得从源交换机到主机的路径上的各个出端口和各个入端口</span></span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> self.links: </span><br><span class="line">        <span class="keyword">if</span> (link[<span class="string">&#x27;src_dpid&#x27;</span>] == s1) <span class="keyword">and</span> (link[<span class="string">&#x27;dst_dpid&#x27;</span>] == s2):</span><br><span class="line">            out_port = link[<span class="string">&#x27;src_port_no&#x27;</span>]</span><br><span class="line">            ryu_path.append((s1,in_port,out_port))</span><br><span class="line">            in_port = link[<span class="string">&#x27;dst_port_no&#x27;</span>]</span><br><span class="line">            <span class="keyword">if</span> s2 == dst_dpid: </span><br><span class="line">                ryu_path.append((s2,in_port,dst_port))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"><span class="keyword">return</span> ryu_path</span><br></pre></td></tr></table></figure><p>（5）求最短路径上的时延</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sum_delay</span>(<span class="params">self,path,links</span>): </span><br><span class="line">    delay = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(path)-<span class="number">1</span>): </span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> links: </span><br><span class="line">            <span class="keyword">if</span> (link[<span class="string">&#x27;src_dpid&#x27;</span>] == path[j]) <span class="keyword">and</span> (link[<span class="string">&#x27;dst_dpid&#x27;</span>] == path[j+<span class="number">1</span>]): </span><br><span class="line">                delay += link[<span class="string">&#x27;delay&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> delay</span><br></pre></td></tr></table></figure><p>（6）获取邻接点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_adjacent</span>(<span class="params">self,links</span>): </span><br><span class="line">    adjacent = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> switch <span class="keyword">in</span> self.switches:</span><br><span class="line">        adjacent.setdefault(switch,[]) <span class="comment">#邻接点列表初始化 </span></span><br><span class="line">    <span class="keyword">for</span> switch <span class="keyword">in</span> self.switches: </span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">            <span class="keyword">if</span> link[<span class="string">&#x27;src_dpid&#x27;</span>] == switch:</span><br><span class="line">                adjacent[switch].append(link[<span class="string">&#x27;dst_dpid&#x27;</span>]) <span class="comment">#以交换机作为 key，以邻接交换机作为 value </span></span><br><span class="line">    <span class="keyword">return</span> adjacent</span><br></pre></td></tr></table></figure><h3 id="桶类的实现">桶类的实现</h3><p>（1）首先创建循环桶类，并对一些基础变量进行初始化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">BucketSet</span>(<span class="title class_ inherited__">object</span>): </span><br><span class="line">    header_loc = <span class="number">0</span> <span class="comment">#初始化桶头指针</span></span><br><span class="line">    things_number = <span class="number">0</span> <span class="comment">#初始化循环桶中节点的数目</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（2）定义用于初始化的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,buc_num</span>): </span><br><span class="line">    self.bucket_num = buc_num <span class="comment">#初始化小桶数目</span></span><br><span class="line">    self.buckets = [<span class="literal">None</span>]*buc_num <span class="comment">#初始化循环桶整体，它由指定数目的小桶组成</span></span><br><span class="line">    self.init_buckets(buc_num)</span><br><span class="line">    self.header = self.buckets[<span class="number">0</span>] <span class="comment">#初始化头桶</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init_buckets</span>(<span class="params">self,bucket_num</span>):<span class="comment"># 利用小桶类的初始化函树进行初始化</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(bucket_num): </span><br><span class="line">        self.buckets[i] = BucketSet.Bucket(i)</span><br></pre></td></tr></table></figure><p>（3）定义用于使头桶指针后移的函数。因为每次对桶的元素取出都是针对头桶， 所以在头桶空后需要调用此函数实现对后续桶的搜索</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">move_header</span>(<span class="params">self</span>):<span class="comment"># 头桶指针后移一位</span></span><br><span class="line">    self.header_loc = ((self.header_loc + <span class="number">1</span> )% self.bucket_num)<span class="comment"># 因为是循环桶所以需要用取余操作保证尾部和头部的衔接</span></span><br><span class="line">    self.header = self.buckets[self.header_loc]</span><br></pre></td></tr></table></figure><p>（4）定义用于计算入桶的节点应该去哪个桶的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Length_cal</span>(<span class="params">self,length</span>): </span><br><span class="line">    <span class="keyword">return</span> (length % self.bucket_num) <span class="comment">#因为是循环桶所以需要用取余保证所得数字的正确</span></span><br></pre></td></tr></table></figure><p>（5）定义用于处理节点加入桶的函数，作为和外部的关键接口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add_thing</span>(<span class="params">self,thing</span>): </span><br><span class="line">    length = thing[<span class="number">0</span>] <span class="comment">#输入此函数的节点数据中，第一项为它到 src 的距离</span></span><br><span class="line">    <span class="built_in">id</span> = self.Length_cal(length) <span class="comment">#计算该节点该去哪个桶</span></span><br><span class="line">    self.buckets[<span class="built_in">id</span>].add_thing(thing) <span class="comment">#把节点加入对应的桶</span></span><br><span class="line">    self.things_number += <span class="number">1</span> <span class="comment">#节点数加一</span></span><br></pre></td></tr></table></figure><p>（6）定义判断函数，用于判断整个循环桶是否全空，也就是确定整个 Dijkstra 算法何时结束</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">SetEmpty</span>(<span class="params">self</span>): </span><br><span class="line">    <span class="keyword">return</span> self.things_number == <span class="number">0</span></span><br></pre></td></tr></table></figure><p>（7）定义用于弹出桶中需要被永久标记的最短距离点的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">pop_min</span>(<span class="params">self</span>): </span><br><span class="line">    <span class="keyword">while</span> self.header.is_empty(): <span class="comment">#寻找非空桶</span></span><br><span class="line">        self.move_header()</span><br><span class="line">        min_lists = self.header.pop_out() <span class="comment">#将头桶内节点弹出</span></span><br><span class="line">        self.things_number = self.things_number - <span class="built_in">len</span>(min_lists) <span class="comment">#节点数减少</span></span><br><span class="line">    <span class="keyword">return</span> </span><br></pre></td></tr></table></figure><p>（8）在循环桶类内部定义桶类，即用于组成循环桶的小桶。依旧从初始化函数开始定义</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Bucket</span>(<span class="title class_ inherited__">object</span>): </span><br><span class="line">    things_amount = <span class="number">0</span> <span class="comment">#计数，记录每个小桶内节点数目</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,bucketId</span>): <span class="comment">#初始化小桶，利用 list()，每个桶有对应的编号，从 0 到 C</span></span><br><span class="line">        self.bucket = <span class="built_in">list</span>()</span><br><span class="line">        self.<span class="built_in">id</span> = bucketId</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（9）定义往小桶内加入节点的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add_thing</span>(<span class="params">self,thing</span>): </span><br><span class="line">    self.bucket.append(thing) <span class="comment">#加入节点，利用 list()性质</span></span><br><span class="line">    self.things_amount += <span class="number">1</span> <span class="comment">#计数加</span></span><br></pre></td></tr></table></figure><p>（10）定义弹出小桶内节点数据的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">pop_out</span>(<span class="params">self</span>):</span><br><span class="line">    things = self.bucket.copy() <span class="comment">#things 记录了桶内现有节点</span></span><br><span class="line">    self.bucket.clear() <span class="comment">#清空桶</span></span><br><span class="line">    self.things_amount = <span class="number">0</span> <span class="comment">#计数清 0</span></span><br><span class="line">    <span class="keyword">return</span> thing</span><br></pre></td></tr></table></figure><p>（11）定义判断小桶是否为空的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_empty</span>(<span class="params">self</span>): </span><br><span class="line">    <span class="keyword">return</span> self.things_amount == <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="ryu通信">RYU通信</h3><p>（1）初始化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Kruskaltest</span>(app_manager.RyuApp): </span><br><span class="line">    OFP_VERSIONS=[ofproto_v1_3.OFP_VERSION]<span class="comment">#确定控制器的 openflow 版本</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,*args,**kwargs</span>): </span><br><span class="line">        <span class="built_in">super</span>(Kruskaltest,self).__init__(*args,**kwargs)<span class="comment">#继承自己，方便后面的初始化步骤</span></span><br><span class="line">        self.mac_to_port=&#123;&#125;<span class="comment">#arp 列表初始化</span></span><br><span class="line">        self.topology_api_app=self</span><br><span class="line">        self.sleep_interval = <span class="number">0.5</span><span class="comment">#程序暂停的时间为 0.5 秒，以使 mininet 和 ryu 的拓扑建立保持同步，防止链路丢失</span></span><br><span class="line">        self.switches = []<span class="comment">#交换机列表初始化</span></span><br><span class="line">        self.links = []<span class="comment">#链路信息初始化</span></span><br><span class="line">        self.mst_links = []<span class="comment">#最小生成树上的链路初始化</span></span><br><span class="line">        self.pathes = &#123;&#125;<span class="comment">#路径初始化</span></span><br><span class="line">        self.banport = &#123;&#125;<span class="comment">#被禁止的端口初始化</span></span><br></pre></td></tr></table></figure><p>（2）流表配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@set_ev_cls(<span class="params">ofp_event.EventOFPSwitchFeatures,CONFIG_DISPATCHER</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">switch_features_handler</span>(<span class="params">self,ev</span>): </span><br><span class="line">        datapath=ev.msg.datapath</span><br><span class="line">        ofproto=datapath.ofproto</span><br><span class="line">        ofp_parser=datapath.ofproto_parser</span><br><span class="line">        <span class="keyword">match</span>=ofp_parser.OFPMatch()</span><br><span class="line">        actions=[ofp_parser.OFPActionOutput(ofproto.OFPP_CONTROLLER,ofproto.OFPCML_NO_BUF</span><br><span class="line">FER)]</span><br><span class="line">        self.add_flow(datapath,<span class="number">0</span>,<span class="keyword">match</span>,actions)<span class="comment">#配置缺省流表，match 域为空，对每一个交换机都添加该流表，当交换机无法处理收到的数据包时，执行 actions，把数据包向控制器转发</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_flow</span>(<span class="params">self,datapath,priority,<span class="keyword">match</span>,actions</span>):<span class="comment">#控制器向交换机发流表的方法</span></span><br><span class="line">        ofproto=datapath.ofproto </span><br><span class="line">        ofp_parser=datapath.ofproto_parser</span><br><span class="line">        inst=[ofp_parser.OFPInstructionActions(ofproto.OFPIT_APPLY_ACTIONS,actions)]<span class="comment">#收到后立即执行 actions</span></span><br><span class="line">        <span class="comment">#以上内容为流表信息的获取</span></span><br><span class="line">        mod=ofp_parser.OFPFlowMod(datapath=datapath,priority=priority,<span class="keyword">match</span>=<span class="keyword">match</span>,instructions=inst)<span class="comment">#流表内容定义，第一个为流表从哪一个交换机发送过来，第二个为权重，第三个为匹配域，当收到的数据包和匹配域匹配上时执行 instructions         </span></span><br><span class="line">        datapath.send_msg(mod)<span class="comment">#发送流表</span></span><br></pre></td></tr></table></figure><p>（3）拓扑发现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@set_ev_cls(<span class="params">event.EventSwitchEnter,[CONFIG_DISPATCHER,MAIN_DISPATCHER]</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">switch_enter_handler</span>(<span class="params">self,ev</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;==================================&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;switch entered...&#x27;</span>)</span><br><span class="line">        self.switches,self.links = self.get_topology() <span class="comment">#通过后面的 get_topology 方法来获取交换机和链路信息</span></span><br><span class="line">        self.banport = self.find_banport(self.links[:]) <span class="comment">#找到被禁止的端口，因为洪泛时不能有圈，否则会陷入死循环</span></span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> self.mst_links:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(link[<span class="string">&#x27;src_dpid&#x27;</span>],link[<span class="string">&#x27;dst_dpid&#x27;</span>]))<span class="comment">#打印最小生成树</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;==================================&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        time.sleep(self.sleep_interval) <span class="comment">#ryu 每发现一个交换机之后都要暂停一段时间，让mininetd 建立拓扑的速度能跟上，否则会造成链路丢失</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_topology</span>(<span class="params">self</span>): </span><br><span class="line">        switch_list = get_switch(self.topology_api_app,<span class="literal">None</span>)</span><br><span class="line">        switches = [switch.dp.<span class="built_in">id</span> <span class="keyword">for</span> switch <span class="keyword">in</span> switch_list]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;switches:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(switches)) <span class="comment">#得到并打印交换机列表</span></span><br><span class="line">        <span class="keyword">for</span> switch <span class="keyword">in</span> switches: </span><br><span class="line">            self.banport.setdefault(switch,[]) <span class="comment">#初始化被禁止的端口列表</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;------------------------------------&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;banport first_list is&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.banport))</span><br><span class="line">        link_list = get_link(self.topology_api_app,<span class="literal">None</span>)</span><br><span class="line">        links = [&#123;<span class="string">&#x27;src_dpid&#x27;</span>:link.src.dpid,<span class="string">&#x27;src_port_no&#x27;</span>:link.src.port_no, <span class="number">12.</span> <span class="string">&#x27;dst_dpid&#x27;</span>:link.dst.dpid,<span class="string">&#x27;dst_port_no&#x27;</span>:link.dst.port_no&#125;</span><br><span class="line">                 <span class="keyword">for</span> link <span class="keyword">in</span> link_list]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;the getted link_list is&#123;&#125;&quot;</span>.<span class="built_in">format</span>(links)) <span class="comment">#得到并打印链路信息，其中包含了源交换机的 dpid 和对应的端口号以及目的交换机的 dpid 和对应的端口号</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#file = open(&quot;./topo24.json&quot;,&quot;r&quot;)</span></span><br><span class="line">        file = <span class="built_in">open</span>(<span class="string">&quot;./topo7.json&quot;</span>,<span class="string">&quot;r&quot;</span>) <span class="comment">#由于原来的 24 个交换机拓扑太大，故用 7 个交换机来作为测试，读取 topo7.json 里的信息</span></span><br><span class="line">        topoinfo = json.load(file)</span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">             <span class="keyword">for</span> edge <span class="keyword">in</span> topoinfo[<span class="string">&#x27;links&#x27;</span>]: </span><br><span class="line">                    <span class="keyword">if</span>([<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(link[<span class="string">&quot;src_dpid&quot;</span>]),<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(link[<span class="string">&quot;dst_dpid&quot;</span>])] == edge[<span class="string">&quot;vertexs&quot;</span>] <span class="keyword">or</span> [<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(link[<span class="string">&quot;dst_dpid&quot;</span>]),<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(link[<span class="string">&quot;src_dpid&quot;</span>])] == edge[<span class="string">&quot;vertexs&quot;</span>]):</span><br><span class="line">                        link[<span class="string">&#x27;delay&#x27;</span>] = edge[<span class="string">&#x27;delay&#x27;</span>]</span><br><span class="line">                        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>（4）ryu 配置最短路</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">configure_path</span>(<span class="params">self,path,src,dst,datapath</span>): </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;configure the shortest path&quot;</span>)</span><br><span class="line">    path_print=src</span><br><span class="line">    <span class="keyword">for</span> switch,in_port,out_port <span class="keyword">in</span> path: <span class="comment">#下发流表</span></span><br><span class="line">        ofp_parser=datapath.ofproto_parser </span><br><span class="line">        <span class="keyword">match</span>=ofp_parser.OFPMatch(in_port=in_port,eth_src=src,eth_dst=dst)</span><br><span class="line">        actions=[ofp_parser.OFPActionOutput(out_port)]</span><br><span class="line">        self.add_flow(datapath,<span class="number">1</span>,<span class="keyword">match</span>,actions)</span><br><span class="line">        path_print+=<span class="string">&quot;--&gt;&#123;&#125;-[&#123;&#125;]-&#123;&#125;&quot;</span>.<span class="built_in">format</span>(in_port,switch,out_port) <span class="comment">#更新打印的最短路序列</span></span><br><span class="line">    delay = self.sum_delay(self.minpath,self.links)</span><br><span class="line">    path_print+=<span class="string">&quot;--&gt;&quot;</span>+dst</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;the shortest path is:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(path_print),<span class="string">&#x27;delay:&#x27;</span>,delay)</span><br></pre></td></tr></table></figure><p>（5）对 packetin 的修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">path=self.dijkstra(src_switch,dst_switch,first_port,final_port) <span class="comment">#调用dijkstra，获取配置的路径信息</span></span><br><span class="line">self.configure_path(path,src,dst,datapath) <span class="comment">#配置最短路</span></span><br></pre></td></tr></table></figure><h1>成果展示</h1><h2 id="拓扑的构建">拓扑的构建</h2><p>（1）mininet 侧</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220804181141906.png" alt="拓扑构建"></p><p>（2）RYU 侧</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220804181235224.png" alt="RYU侧拓扑发现"></p><p>（3）二十四节点网络拓扑可视化</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220804181335594.png" alt="拓扑示意图"></p><h2 id="dijkstra-算法实现">Dijkstra 算法实现</h2><p>（1）mininet 侧：连通性良好</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220804181435589.png" alt="pingall情况"></p><p>（2）时延现象（以 h1 ping h19 为例）</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220804181535562.png" alt="mininet 侧时延信息"></p><p>（3）ryu 侧</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220804181618820.png" alt="RYU 侧最短路输出"></p><p>（4）最短路可视化 （黄色路径为最短路，黑色路径为未经过路径）</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220804181700081.png" alt="最短路可视化"></p>]]></content>
      
      
      <categories>
          
          <category> 网络算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我电作业 </tag>
            
            <tag> mininet </tag>
            
            <tag> ryu控制器 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DFS算法实践</title>
      <link href="/e9c4a133/"/>
      <url>/e9c4a133/</url>
      
        <content type="html"><![CDATA[<h1>项目要求</h1><ol><li>在 Mininet 上搭建一个 7 个节点网络（拓扑给定），每个网络节点下挂一 个主机；</li><li>使用 Ryu 连接 Mininet 中的交换机；</li><li>并将拓扑读出来进行可视化展示；</li><li>在 Ryu 上实现深度优先遍历算法，并找出任意两个主机间的最短路和最长路；</li><li>使用最长路来配置任意两个主机间的通信连接；</li><li>将配置通的业务在可视化平台上进行展示 。</li></ol><h1>DFS算法原理</h1><h2 id="基本思想">基本思想</h2><p>深度优先搜索 DFS（Depth First Search）是从初始结点开始扩展，扩展顺 序总是先扩展最新产生的结点。这就使得搜索沿着状态空间某条单一的路径进行 下去，直到最后的结点不能产生新结点或者找到目标结点为止。当搜索到不能产 生新的结点的时候，就沿着结点产生顺序的反方向寻找可以产生新结点的结点， 并扩展它，形成另一条搜索路径。</p><h2 id="基本步骤">基本步骤</h2><ol><li>从初始结点开始，将待扩展结点依次放到栈中。</li><li>如果栈空，即所有待扩展结点已全部扩展完毕，则问题无解，退出。</li><li>取栈中最新加入的结点，即栈顶结点出栈，并用相应的扩展原则扩展出所有的子结点，并按顺序将这些结点放入栈中。若没有子结点产生，则转（2）。</li><li>如果某个子结点为目标结点，则找到问题的解（这不一定是最优解）， 结束。如果要求得问题的最优解，或者所有解，则转（2），继续搜索新的目标结点。</li></ol><h2 id="示例">示例</h2><p>下图是一个无向图，如果我们从 A 点发起深度优先搜索（以下的访问次序并 不是唯一的，第二个点既可以是 B 也可以是 C,D），则我们可能得到如下的一个 访问过程：A-&gt;B-&gt;E（没有路了！回溯到 A)-&gt;C-&gt;F-&gt;H-&gt;G-&gt;D（没有路，最终 回溯到 A,A 也没有未访问的相邻节点，本次搜索结束）</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220803221135373.png" alt="示例拓扑图"></p><h2 id="dfs-与-bfs-比较">DFS 与 BFS 比较</h2><ul><li><strong>遍历方式</strong>不同：DFS 的方式则是从一条路一直走到底后再回退，再走到底 而 BFS 遍历方式是围绕着根结点一圈一圈（level by level）向外遍历。</li><li><strong>数据结构</strong>不同：DFS 常借助栈的方式来实现，而 BFS 常借助队列的方式实 基于深度优先遍历算法框架的主机最长路连接配置项目实验报告 第 3 页 现。</li><li><strong>具体应用</strong>不同：DFS 比较适合判断图中是否有环，寻找两个节点之间的路径，有向无环图（DAG）的拓扑排序，寻找所有强连通片（SCC），无向图中寻找 割点和桥等； BFS 则比较适合判断二分图，以及用于实现寻找最小生成树（MST），如在 BFS 基础上的 Kruskal 算法以及寻找最短路径问题（如 Dijkstra算法）</li></ul><h1>代码分析</h1><h2 id="dfs-算法实现">DFS 算法实现</h2><h3 id="可行实现方式">可行实现方式</h3><ul><li>自己建立堆栈以代替系统栈，从而进行 DFS</li><li>利用系统栈以及循环实现递归，从而进行 DFS</li></ul><h3 id="实现方式比较">实现方式比较</h3><p>DFS 是一个递归算法，就算额外建立堆栈，本质上处理数据的规则和利用的 空间大小是依旧不变的。它的空间复杂度无论选择哪种方式，都是 O ( N ) （N 为节点数）。而 DFS 计算路径几乎是遍历全图输出路径，因此其耗费的时间受存 储拓扑信息的结构决定。 因此 DFS 选择两种实现方式在效率上没有差异。但就代码长度来说，第二种实现方式更为简洁明了并且简短。因此在实现的过程中本文选择第二种方法。</p><h3 id="变量说明">变量说明</h3><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">u</td><td style="text-align:center">当前检索的交换机</td></tr><tr><td style="text-align:center">i</td><td style="text-align:center">与 u 有相连边的邻接交换机</td></tr><tr><td style="text-align:center">dst</td><td style="text-align:center">目标终点主机对应的交换机</td></tr><tr><td style="text-align:center">visited</td><td style="text-align:center">用于标记交换机的变量</td></tr><tr><td style="text-align:center">cur_path</td><td style="text-align:center">i 和 u 之间的路径，一个边</td></tr><tr><td style="text-align:center">allpaths</td><td style="text-align:center">所有可行路径的集合</td></tr></tbody></table><h3 id="dfs实现">DFS实现</h3><p>（一）获得邻居节点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获得邻居节点</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_adjacent</span>(<span class="params">self,links</span>):</span><br><span class="line">    adjacent = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> switch <span class="keyword">in</span> self.switches: </span><br><span class="line">        adjacent.setdefault(switch,[]) <span class="comment">#初始化字典</span></span><br><span class="line">        <span class="keyword">for</span> switch <span class="keyword">in</span> self.switches: </span><br><span class="line">            <span class="keyword">for</span> link <span class="keyword">in</span> links: </span><br><span class="line">                <span class="keyword">if</span> link[<span class="string">&#x27;src_dpid&#x27;</span>] == switch:</span><br><span class="line">                    adjacent[switch].append(link[<span class="string">&#x27;dst_dpid&#x27;</span>]) <span class="comment">#作为源交换机时添加目的交换机</span></span><br></pre></td></tr></table></figure><p>（二）使用 DFS 寻找源宿全部路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">DFS</span>(<span class="params">self,u,dst,visited,cur_path,allpaths</span>): <span class="comment">#根据传过来的源主机和目的主机来探索最短路，采用递归方法</span></span><br><span class="line">    adjacent = self.get_adjacent(self.links)</span><br><span class="line">    <span class="keyword">if</span> u ==dst: </span><br><span class="line">        allpaths.append(cur_path.copy())</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> adjacent[u]: </span><br><span class="line">            <span class="keyword">if</span> visited[i] == <span class="number">0</span>: </span><br><span class="line">                visited[i] = <span class="number">1</span></span><br><span class="line">                cur_path.append(i)</span><br><span class="line">                self.DFS(i,dst,visited,cur_path,allpaths)</span><br><span class="line">                cur_path.pop()</span><br><span class="line">                visited[i] = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>（三）计算路径上的时延</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sum_delay</span>(<span class="params">self,all_path,links</span>): </span><br><span class="line">    sum_delay = [<span class="number">0</span>]*<span class="built_in">len</span>(all_path) <span class="comment">#时延列表初始化</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(all_path)): <span class="comment">#分别计算每一条路径上的时延并储存在 sum_delay 列表中，作为返回值返回</span></span><br><span class="line">        path = all_path[i]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(path)-<span class="number">1</span>): </span><br><span class="line">            <span class="keyword">for</span> link <span class="keyword">in</span> links: </span><br><span class="line">                <span class="keyword">if</span> (link[<span class="string">&#x27;src_dpid&#x27;</span>] == path[j]) <span class="keyword">and</span> (link[<span class="string">&#x27;dst_dpid&#x27;</span>] == path[j+<span class="number">1</span>]): </span><br><span class="line">                    sum_delay[i] += <span class="built_in">int</span>(link[<span class="string">&#x27;delay&#x27;</span>])</span><br><span class="line">    <span class="keyword">return</span> sum_dela</span><br></pre></td></tr></table></figure><p>（四）给全部路径加上时延属性，并找出最短和最长路</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">search_path</span>(<span class="params">self,src,dst,src_port,dst_port</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Calculating all the path of &#123;&#125;:&#123;&#125; -&gt; &#123;&#125;:&#123;&#125;...&#x27;</span>.<span class="built_in">format</span>(src,src_port,dst,dst_port))</span><br><span class="line">    visited = &#123;&#125; <span class="comment">#标记，判断是否已经被加入路径</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> self.switches: </span><br><span class="line">        visited[s] = <span class="number">0</span></span><br><span class="line">    visited[src] = <span class="number">1</span> <span class="comment">#将源主机标记为已被探索</span></span><br><span class="line">        </span><br><span class="line">    cur_path = []</span><br><span class="line">    cur_path.append(src) <span class="comment">#将源主机加入路径</span></span><br><span class="line">    all_paths = []</span><br><span class="line">        </span><br><span class="line">    self.DFS(src,dst,visited,cur_path,all_paths) <span class="comment">#调用 DFS，发现从 src 到 dst 的全部路径并存储在 all_paths 中         </span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;find &#123;&#125; paths&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(all_paths))) <span class="comment">#路径的数量</span></span><br><span class="line">        </span><br><span class="line">    sum_delay = self.sum_delay(all_paths,self.links) <span class="comment">#计算出所有路径的时延，交换机和主机之间的时延存储在 links 列表中</span></span><br><span class="line">    k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> path <span class="keyword">in</span> all_paths: </span><br><span class="line">        <span class="built_in">print</span>(path,sum_delay[k]) <span class="comment">#打印各条路径的时延信息</span></span><br><span class="line">        k = k+<span class="number">1</span></span><br><span class="line">        <span class="comment">#计算时延最长路和时延最短路</span></span><br><span class="line">    <span class="built_in">max</span> = <span class="number">0</span></span><br><span class="line">    <span class="built_in">min</span> = <span class="number">100000</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(sum_delay)): </span><br><span class="line">        <span class="keyword">if</span> sum_delay[i] &gt; <span class="built_in">max</span>: </span><br><span class="line">            max_i = i</span><br><span class="line">            <span class="built_in">max</span> = sum_delay[i]</span><br><span class="line">        <span class="keyword">if</span> sum_delay[i] &lt; <span class="built_in">min</span>: </span><br><span class="line">            min_i = i</span><br><span class="line">            <span class="built_in">min</span> = sum_delay[i]</span><br><span class="line">    <span class="comment">#打印时延最短路和时延最长路</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;the shortest path :&#x27;</span>,all_paths[min_i],<span class="string">&#x27;delay:&#x27;</span>,sum_delay[min_i])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;the longest path :&#x27;</span>,all_paths[max_i],<span class="string">&#x27;delay:&#x27;</span>,sum_delay[max_i])</span><br><span class="line">    <span class="comment">#要求配置的是时延最长路，因此用下列代码将最长路的主机、交换机和端口信息存入 ryu_path，返回给调用函数</span></span><br><span class="line">    path = all_paths[max_i]</span><br><span class="line">    ryu_path = []</span><br><span class="line">    in_port = src_port</span><br><span class="line">    <span class="keyword">for</span> s1,s2 <span class="keyword">in</span> <span class="built_in">zip</span>(path[:-<span class="number">1</span>],path[<span class="number">1</span>:]):</span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> self.links:</span><br><span class="line">    <span class="comment">#从原图的 links 列表中得到对应交换机的端口信息，从目的主机到源主机读取出端口，从源主机到目的主机读取入端口，其中 s1 是从目的主机一侧开始往源主机一侧推进，s2 是从源主机一侧开始往目的主机一侧推进。</span></span><br><span class="line">            <span class="keyword">if</span> link[<span class="string">&#x27;src_dpid&#x27;</span>] == s1 <span class="keyword">and</span> link[<span class="string">&#x27;dst_dpid&#x27;</span>] == s2: </span><br><span class="line">                out_port = link[<span class="string">&#x27;dst_port_no&#x27;</span>]</span><br><span class="line">                ryu_path.append((s1,in_port,out_port))</span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> self.links: </span><br><span class="line">            <span class="keyword">if</span> link[<span class="string">&#x27;src_dpid&#x27;</span>] == s2 <span class="keyword">and</span> link[<span class="string">&#x27;dst_dpid&#x27;</span>] == s1: </span><br><span class="line">                in_port = link[<span class="string">&#x27;src_port_no&#x27;</span>]</span><br><span class="line">                ryu_path.append((dst,in_port,dst_port))</span><br><span class="line">    <span class="keyword">return</span> ryu_path <span class="comment">#返回最长路上的主机和所有交换机以及对应的端口信息，以便配置的时候调用</span></span><br></pre></td></tr></table></figure><h3 id="ryu通信实现">RYU通信实现</h3><p>（一）初始化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Kruskaltest</span>(app_manager.RyuApp): </span><br><span class="line">    OFP_VERSIONS=[ofproto_v1_3.OFP_VERSION] <span class="comment">#确定控制器的 openflow 版本</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,*args,**kwargs</span>): <span class="number">7.</span> <span class="built_in">super</span>(Kruskaltest,self).__init__(*args,**kwargs)<span class="comment">#继承自己，方便后面的初始化步骤</span></span><br><span class="line">    self.mac_to_port=&#123;&#125; <span class="comment">#arp 列表初始化</span></span><br><span class="line">    self.topology_api_app=self</span><br><span class="line">    self.sleep_interval = <span class="number">0.5</span> <span class="comment">#程序暂停的时间为 0.5 秒，以使 mininet 和 ryu 的拓扑建立保持同步，防止链路丢失</span></span><br><span class="line">    self.switches = [] <span class="comment">#交换机列表初始化</span></span><br><span class="line">    self.links = [] <span class="comment">#链路信息初始化</span></span><br><span class="line">    self.mst_links = [] <span class="comment">#最小生成树上的链路初始化</span></span><br><span class="line">    self.pathes = &#123;&#125; <span class="comment">#路径初始化</span></span><br><span class="line">    self.banport = &#123;&#125; <span class="comment">#被禁止的端口初始化</span></span><br></pre></td></tr></table></figure><p>（二）流表配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@set_ev_cls(<span class="params">ofp_event.EventOFPSwitchFeatures,CONFIG_DISPATCHER</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">switch_features_handler</span>(<span class="params">self,ev</span>):</span><br><span class="line">        datapath=ev.msg.datapath</span><br><span class="line">        ofproto=datapath.ofproto </span><br><span class="line">        ofp_parser=datapath.ofproto_parser </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">match</span>=ofp_parser.OFPMatch()</span><br><span class="line">        actions=[ofp_parser.OFPActionOutput(ofproto.OFPP_CONTROLLER,ofproto.OFPCML_NO_BUFFER)]</span><br><span class="line">        self.add_flow(datapath,<span class="number">0</span>,<span class="keyword">match</span>,actions)<span class="comment">#配置缺省流表，match 域为空，对每一个交换机都添加该流表，当交换机无法处理收到的数据包时，执行 actions，把数据包向控制器转发</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_flow</span>(<span class="params">self,datapath,priority,<span class="keyword">match</span>,actions</span>):<span class="comment">#控制器向交换机发流表的方法</span></span><br><span class="line">        ofproto=datapath.ofproto </span><br><span class="line">        ofp_parser=datapath.ofproto_parser </span><br><span class="line">        inst=[ofp_parser.OFPInstructionActions(ofproto.OFPIT_APPLY_ACTIONS,actions)]<span class="comment">#收到后立即执行 actions</span></span><br><span class="line"><span class="comment">#以上内容为流表信息的获取</span></span><br><span class="line">        mod=ofp_parser.OFPFlowMod(datapath=datapath,priority=priority,<span class="keyword">match</span>=<span class="keyword">match</span>,instructions=inst)<span class="comment">#流表内容定义，第一个为流表从哪一个交换机发送过来，第二个为权重，第三个为匹配域，当收到的数据包和匹配域匹配上时执行 instructions </span></span><br><span class="line">    datapath.send_msg(mod)<span class="comment">#发送流表</span></span><br></pre></td></tr></table></figure><p>（三）拓扑发现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@set_ev_cls(<span class="params">event.EventSwitchEnter,[CONFIG_DISPATCHER,MAIN_DISPATCHER]</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">switch_enter_handler</span>(<span class="params">self,ev</span>): </span><br><span class="line">        </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;==================================&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;switch entered...&#x27;</span>)</span><br><span class="line">        self.switches,self.links = self.get_topology() <span class="comment">#通过后面的 get_topology 方法来获取交换机和链路信息</span></span><br><span class="line">        self.banport = self.find_banport(self.links[:]) <span class="comment">#找到被禁止的端口，因为洪泛时不能有圈，否则会陷入死循环</span></span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> self.mst_links: </span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(link[<span class="string">&#x27;src_dpid&#x27;</span>],link[<span class="string">&#x27;dst_dpid&#x27;</span>])) <span class="comment">#打印最小生成树</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;==================================&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        time.sleep(self.sleep_interval) <span class="comment">#ryu 每发现一个交换机之后都要暂停一段时间，让mininetd 建立拓扑的速度能跟上，否则会造成链路丢失</span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_topology</span>(<span class="params">self</span>): </span><br><span class="line">    switch_list = get_switch(self.topology_api_app,<span class="literal">None</span>)</span><br><span class="line">    switches = [switch.dp.<span class="built_in">id</span> <span class="keyword">for</span> switch <span class="keyword">in</span> switch_list]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;switches:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(switches)) <span class="comment">#得到并打印交换机列表</span></span><br><span class="line">    <span class="keyword">for</span> switch <span class="keyword">in</span> switches: </span><br><span class="line">        self.banport.setdefault(switch,[]) <span class="comment">#初始化被禁止的端口列表</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------------------------------------&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;banport first_list is&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.banport))</span><br><span class="line">    link_list = get_link(self.topology_api_app,<span class="literal">None</span>)</span><br><span class="line">    links = [&#123;<span class="string">&#x27;src_dpid&#x27;</span>:link.src.dpid,<span class="string">&#x27;src_port_no&#x27;</span>:link.src.port_no,<span class="string">&#x27;dst_dpid&#x27;</span>:link.dst.dpid,<span class="string">&#x27;dst_port_no&#x27;</span>:link.dst.port_no&#125;<span class="keyword">for</span> link <span class="keyword">in</span> link_list]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;the getted link_list is&#123;&#125;&quot;</span>.<span class="built_in">format</span>(links)) <span class="comment">#得到并打印链路信息，其中包含了源交换机的 dpid 和对应的端口号以及目的交换机的 dpid 和对应的端口号</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#file = open(&quot;./topo24.json&quot;,&quot;r&quot;)</span></span><br><span class="line">    file = <span class="built_in">open</span>(<span class="string">&quot;./topo7.json&quot;</span>,<span class="string">&quot;r&quot;</span>)<span class="comment">#由于原来的 24 个交换机拓扑太大，故用 7 个交换机来作为测试，读取 topo7.json 里的信息</span></span><br><span class="line">    topoinfo = json.load(file)</span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> links: </span><br><span class="line">        <span class="keyword">for</span> edge <span class="keyword">in</span> topoinfo[<span class="string">&#x27;links&#x27;</span>]:</span><br><span class="line">            <span class="keyword">if</span>([<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(link[<span class="string">&quot;src_dpid&quot;</span>]),<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(link[<span class="string">&quot;dst_dpid&quot;</span>])] == edge[<span class="string">&quot;vertexs&quot;</span>] <span class="keyword">or</span> [<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(link[<span class="string">&quot;dst_dpid&quot;</span>]),<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(link[<span class="string">&quot;src_dpid&quot;</span>])] == edge[<span class="string">&quot;vertexs&quot;</span>]):</span><br><span class="line">                link[<span class="string">&#x27;delay&#x27;</span>] = edge[<span class="string">&#x27;delay&#x27;</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>（四）DFS最长路配置</p><blockquote><p>配置思路 : 将需要配置的路径存储在 path 中，其中有源主机和目的主机的 mac 地址、 路径上的交换机号和对应的端口，将对应流表下发。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">configure_path</span>(<span class="params">self,path,src,dst,datapath</span>): <span class="comment">#路径配置函数</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;configure the longgest path&quot;</span>)</span><br><span class="line">    path_print=src <span class="comment">#将源主机的 mac 地址加入到打印序列中</span></span><br><span class="line">    <span class="keyword">for</span> switch,in_port,out_port <span class="keyword">in</span> path: <span class="comment">#向对应的交换机下发流表指导通信</span></span><br><span class="line">        ofp_parser=datapath.ofproto_parser</span><br><span class="line">        <span class="keyword">match</span>=ofp_parser.OFPMatch(in_port=in_port,eth_src=src,eth_dst=dst)</span><br><span class="line">        actions=[ofp_parser.OFPActionOutput(out_port)]</span><br><span class="line">        self.add_flow(datapath,<span class="number">1</span>,<span class="keyword">match</span>,actions)</span><br><span class="line">        path_print+=<span class="string">&quot;--&gt;&#123;&#125;-&#123;&#125;-&#123;&#125;&quot;</span>.<span class="built_in">format</span>(in_port,switch,out_port)<span class="comment">#将路径上的进入端</span></span><br><span class="line">口、交换机和输出端口加入打印序列</span><br><span class="line">    path_print+=<span class="string">&quot;--&quot;</span>+dst<span class="comment">#将目的主机的 mac 地址加入打印序列</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;the longgest path is:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(path_print))<span class="comment">#打印最长路</span></span><br></pre></td></tr></table></figure><p>（五）控制器对数据包的处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@set_ev_cls(<span class="params">ofp_event.EventOFPPacketIn,MAIN_DISPATCHER</span>)</span><span class="comment">#监视器，当有 packetin 消息进来时，执行下面的代码</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">packet_in_handler</span>(<span class="params">self,ev</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;==========================================================&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;it has entered packet_in_handler func&#x27;</span>)</span><br><span class="line">        msg=ev.msg</span><br><span class="line">        datapath=msg.datapaths </span><br><span class="line">        ofproto=datapath.ofproto </span><br><span class="line">        ofp_parser=datapath.ofproto_parser </span><br><span class="line">        dpid=datapath.<span class="built_in">id</span> <span class="comment">#id from switch</span></span><br><span class="line">        <span class="comment">#以上是对收到的数据包进行解析</span></span><br><span class="line">        self.mac_to_port.setdefault(dpid,&#123;&#125;)</span><br><span class="line">        <span class="comment"># 对控制器里面的 mac_to_port 列表初始化</span></span><br><span class="line">        pkt=packet.Packet(msg.data)<span class="comment">#读取需要传输的数据</span></span><br><span class="line">        eth=pkt.get_protocol(ethernet.ethernet)<span class="comment">#读取以太网地址的数据包，里面包含了 src 和dst 以及 ethertype 等信息</span></span><br><span class="line">        in_port=msg.<span class="keyword">match</span>[<span class="string">&#x27;in_port&#x27;</span>] <span class="comment">#读取匹配域中的进入交换机的端口号</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;in_port is &quot;</span>,in_port)</span><br><span class="line">        src = eth.src <span class="number">21.</span> self.mac_to_port[dpid][src]=in_port<span class="comment">#将源交换机的 MAC 地址和源交换机进入该交换机的端口号对应起来</span></span><br><span class="line">        dst=eth.dst <span class="comment">#目的主机的 MAC 地址</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;the src is &#x27;</span>, src)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;the dst is &#x27;</span>, dst)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;the dpid is &#x27;</span>, dpid)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;self.mac_to_port:&quot;</span>, self.mac_to_port)</span><br><span class="line">        pathes=&#123;&#125;<span class="comment">#路径初始化</span></span><br><span class="line">        <span class="keyword">if</span> dst <span class="keyword">in</span> self.mac_to_port[dpid]: <span class="comment">#如果目的主机的 MAC 地址已经在控制器的 mac_to_port列表里面有记录，直接下发流表</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;dst mac is known&#x27;</span>)</span><br><span class="line">            out_port=self.mac_to_port[dpid][dst]</span><br><span class="line">            actions=[ofp_parser.OFPActionOutput(out_port)]</span><br><span class="line">            <span class="keyword">match</span>=ofp_parser.OFPMatch(in_port=in_port,eth_dst=dst,eth_src=src)</span><br><span class="line">            <span class="comment">#以上为对流表内容的定义</span></span><br><span class="line">            self.add_flow(datapath,<span class="number">1</span>,<span class="keyword">match</span>,actions)<span class="comment">#权值为 1，表示优先级先于缺省流表</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;add flow&quot;</span>)</span><br><span class="line">            self.pathes.setdefault(src,&#123;&#125;)</span><br><span class="line">            self.pathes[src].setdefault(dst,[]) <span class="comment">#对从这个主机开始的路径做初始化</span></span><br><span class="line">            self.pathes[src][dst].append(dpid)<span class="comment">#往路径上添加交换机</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;path appending:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.pathes[src][dst]))<span class="comment">#打印路径上的交换机</span></span><br><span class="line">        <span class="keyword">else</span>:<span class="comment">#如果控制器的 mac_to_port 列表里面没有目的主机的 mac 地址，执行以下代码</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;dst mac is unknown&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;the dpid is &#x27;</span>,dpid)</span><br><span class="line">            actions=[]<span class="comment">#actions 初始化</span></span><br><span class="line">            <span class="keyword">for</span> port <span class="keyword">in</span> datapath.ports:<span class="comment">#对于向控制器发送 packetin 消息的交换机中的每一个端口，执行下面的代码</span></span><br><span class="line">                <span class="keyword">if</span>(port <span class="keyword">not</span> <span class="keyword">in</span> self.banport[dpid]) <span class="keyword">and</span> (port != in_port):<span class="comment">#如果端口不是禁止端口并且不是数据包进入的端口，将端口加入执行洪泛操作的端口列表里面</span></span><br><span class="line">                    actions.append(ofp_parser.OFPActionOutput(port))</span><br><span class="line">        out=ofp_parser.OFPPacketOut(datapath=datapath,buffer_id=msg.buffer_id,in_port=in_port,actions=actions,data=msg.data)<span class="comment">#向出端口发送的数据包内容</span></span><br><span class="line">        datapath.send_msg(out)<span class="comment">#发送数据包</span></span><br></pre></td></tr></table></figure><p>新定义一个字典列表来存储主机和交换机之间的链路信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> dst <span class="keyword">in</span> self.mac_to_port[dpid]:<span class="comment">#目的主机地址在 mac_to_port 表中</span></span><br><span class="line">    <span class="keyword">if</span> src <span class="keyword">not</span> <span class="keyword">in</span> self.host_mac_to.keys(): </span><br><span class="line">        self.host_mac_to[src]=(dpid,in_port)<span class="comment">#若源主机地址不在 host_mac_to 表中,则在该表中增加这一项</span></span><br><span class="line">    <span class="keyword">if</span> dst,src <span class="keyword">in</span> self.host_mac_to.keys():<span class="comment">#如果目的主机和源主机 mac 地址在host_mac_to 表中，则读取主机和交换机之间的链路</span></span><br><span class="line">        src_switch=self.host_mac_to[src][<span class="number">0</span>]</span><br><span class="line">        first_port=self.host_mac_to[src][<span class="number">1</span>]</span><br><span class="line">        dst_switch=self.host_mac_to[dst][<span class="number">0</span>]</span><br><span class="line">        final_port=self.host_mac_to[dst][<span class="number">1</span>]</span><br><span class="line">        path=self.search_path(src_switch,dst_switch,first_port,final_port)<span class="comment">#寻找路径</span></span><br><span class="line">        self.configure_path(path,src,dst,datapath)<span class="comment">#配置路径</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#发流表</span></span><br><span class="line">        out_port=self.mac_to_port[dpid][dst]</span><br><span class="line">        actions=[ofp_parser.OFPActionOutput(out_port)]</span><br><span class="line">        <span class="keyword">match</span>=ofp_parser.OFPMatch(in_port=in_port,eth_dst=dst,eth_src=src)</span><br><span class="line">        self.add_flow(datapath,<span class="number">1</span>,<span class="keyword">match</span>,actions)</span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">if</span> src <span class="keyword">not</span> <span class="keyword">in</span> self.host_mac_to.keys(): </span><br><span class="line">            self.host_mac_to[src]=(dpid,in_port)</span><br><span class="line">        actions=[]</span><br><span class="line">        <span class="keyword">for</span> port <span class="keyword">in</span> datapath.ports: </span><br><span class="line">            <span class="keyword">if</span>(port <span class="keyword">not</span> <span class="keyword">in</span> self.banport[dpid]) <span class="keyword">and</span> (port != in_port): </span><br><span class="line">                actions.append(ofp_parser.OFPActionOutput(port))</span><br></pre></td></tr></table></figure><h1>成果展示</h1><h2 id="拓扑构建">拓扑构建</h2><p>（一）mininet侧</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220803231315080.png" alt="mininet拓扑构建信息"></p><p>（二）RYU侧</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220803231419526.png" alt="RYU侧拓扑发现"></p><p>（三）七节点拓扑可视化</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220803231512216.png" alt="拓扑示意图"></p><h2 id="dfs算法实现">DFS算法实现</h2><p>（一）mininet侧 —— 连通性良好</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220803231710696.png" alt="mininet侧连通性良好"></p><p>以 h2 ping h7 示例</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220803231826511.png" alt="ping测试"></p><p>（二）RYU侧</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220803231904300.png" alt="RYU侧连通性测试"></p><p>（三）最短路和最长路可视化</p><p>（蓝色路径为最长路，黄色路径为最短路，绿色路径为重合的路径，黑色路径为未经过路径）</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220803232023511.png" alt="拓扑可视化"></p>]]></content>
      
      
      <categories>
          
          <category> 网络算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我电作业 </tag>
            
            <tag> mininet </tag>
            
            <tag> ryu控制器 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kruskal算法实践</title>
      <link href="/fd05d161/"/>
      <url>/fd05d161/</url>
      
        <content type="html"><![CDATA[<h1>项目要求</h1><ol><li>配置一个广播通信业务，假设主机0 向所有其它主机进行广播。</li><li>使用Kruskal 算法计算广播使用的最小生成树。</li><li>将广播业务在可视化平台上进行展示。</li></ol><h1>基本原理</h1><h2 id="kruskal-算法">Kruskal 算法</h2><h3 id="最小生成树概念">最小生成树概念</h3><p>引入一个实际问题：要在n 个城市中建立一个通信网络，则连通这n 个城市需要布置n-1 一条通信线路，这个时候我们需要考虑如何在成本最低的情况下建立这个通信网？</p><p>将问题抽象出来，即n 个城市就是图上的n 个顶点，然后，边表示两个城市的通信线路，每条边上的权重就是我们搭建这条线路所需要的成本，所以现在我们有n 个顶点的连通网可以建立不同的生成树，每一颗生成树都可以作为一个通信网，当我们构造这个连通网所花的成本最小时，搭建该连通网的生成树，就称为最小生成树。</p><p>具体概念：在一给定的无向图G = (V, E) 中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 代表连接顶点u 与顶点v 的边，而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ω</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\omega (u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>代表此边的权重，若存在 t 为 E 的子集且为无循环图，使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ω</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>t</mi></mrow><mrow></mrow></msubsup><mi>ω</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\omega (t) = \sum_{(u,v)\in t}^{} \omega (u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2247em;vertical-align:-0.4747em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5029em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4747em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ω</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\omega (t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 最小，则此T 为G 的最小生成树（最小权重生成树）。</p><h3 id="基本思想">基本思想</h3><p>将所有边按照权值的大小进行升序排序，然后从小到大一一判断，条件为：如果这个边不会与之前选择的所有边组成回路，就可以作为最小生成树的一部分；反之，舍去。直到具有n 个顶点的连通网筛选出来n-1 条边为止。筛选出来的边和所有的顶点构成此连通网的最小生成树。</p><h3 id="关键点">关键点</h3><p>Kruskal 算法基本分为排序和成环检测两大环节，其中排序算法发展多年，已经将其复杂度压榨到了很小，尤其对于非线性时间比较类排序，其时间复杂度更是不能突破nlogn。</p><p>因此，kruskal 算法的关键点在于成环检测算法的优化。</p><p>最直接的实现方式是将图用邻接链表存储，调用广度优先算法（Breadth First Search，BFS）,如果遍历到向相同的点，则说明有环，否则说明无环。引入新的数据结构——UNION-FIND，主要操作是UNION（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">C_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">C_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>）:将集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">C_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">C_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>合并为一个集合，并用FIND（x）返回元素x 所在集合的名字，记为leader。若一条边的两顶点的leader 不同，说明该边是一条割边，即不会成环。</p><h2 id="拓扑可视化">拓扑可视化</h2><h3 id="可视化思路">可视化思路</h3><p>利用mininet 的net 操作打印出所读取的拓扑的网络节点关系信息，并且修改mininet 文件中的相关代码使得net 操作打印出的信息能直接进入用于存储信息的txt 文件中。之后利用python 中的networkx 库读取txt 文件内容并且利用Matplotlib 的绘图功能即可画出相应的拓扑图。</p><h3 id="networkx-原理">NetworkX 原理</h3><p>NetworkX 是一款python 的软件包，它内置了常用的图和网络分析算法。但是在本项目中我们只使用它的创建简单图（有向图或无向图）的功能，再导入Matplotlib 的绘图接口绘出所需拓扑图的图像。</p><h1>代码实现</h1><h2 id="拓扑建立">拓扑建立</h2><h3 id="主体代码">主体代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;topo24.json&quot;</span>,<span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> load_f:</span><br><span class="line">    topoinfo=json.load(load_f)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, topoinfo[<span class="string">&quot;host_no&quot;</span>]+<span class="number">1</span>):</span><br><span class="line">        self.addHost(<span class="string">&quot;h&quot;</span>+<span class="built_in">str</span>(h))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, topoinfo[<span class="string">&quot;switch_no&quot;</span>]+<span class="number">1</span>):</span><br><span class="line">        self.addSwitch(<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(s))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">17</span>):</span><br><span class="line">        self.addLink(topoinfo[<span class="string">&quot;links&quot;</span>][i][<span class="string">&quot;vertexs&quot;</span>][<span class="number">0</span>],topoinfo[<span class="string">&quot;links&quot;</span>][i][<span class="string">&quot;vertexs&quot;</span>][<span class="number">1</span>],delay=<span class="built_in">str</span>(topoinfo[<span class="string">&quot;links&quot;</span>][i][<span class="string">&quot;delay&quot;</span>])+<span class="string">&#x27;ms&#x27;</span>,bw=<span class="built_in">int</span>(topoinfo[<span class="string">&quot;links&quot;</span>][i][<span class="string">&quot;bw&quot;</span>]))</span><br></pre></td></tr></table></figure><p>读取topo24.json 文件里的信息，存入topoinfo 中。通过addHost 读取并存储主机信息，通过addSwitch 读取并存储交换机信息，通过addLink 读取交换机和主机之间以及交换机之间的连接信息和时延带宽信息。</p><h3 id="库函数说明">库函数说明</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> mininet.topo <span class="keyword">import</span> Topo <span class="comment">#该类里面包含了addHost、addSwitch 和addLink 方法</span></span><br><span class="line"><span class="keyword">from</span> mininet.net <span class="keyword">import</span> Mininet <span class="comment">#该类提供了实现控制台pingall 等命令的方法、将搭建好的拓扑连接到Ryu 控制器的方法以及给拓扑中的主机和交换机分配MAC 地址以及IP 地址的方法</span></span><br><span class="line"><span class="keyword">from</span> mininet.node <span class="keyword">import</span> CPULimitedHost <span class="comment">#给控制器和交换机之间的接口设置IP 地址，并且对虚拟主机的CPU 划定带宽</span></span><br><span class="line"><span class="keyword">from</span> mininet.link <span class="keyword">import</span> TCLink <span class="comment">#引用TClink 类，设置虚拟链路的带宽和时延</span></span><br><span class="line"><span class="keyword">from</span> mininet.util <span class="keyword">import</span> dumpNodeConnections <span class="comment">#引用dumpNodeConnections 方法，断开和某一个节点的连接</span></span><br><span class="line"><span class="keyword">from</span> mininet.log <span class="keyword">import</span> setLogLevel <span class="comment">#引用setLogLevel，输出mininet 运行的状态</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br></pre></td></tr></table></figure><p>其中sys 和os 都是python 的系统操作模块，sys 提供了一组非常实用的服务，os 模块负责程序和操作系统的交互，提供了访问操作系统底层的接口。json 提供了读取json 文件的方法。</p><h2 id="ryu通信">RYU通信</h2><h3 id="初始化">初始化</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Kruskaltest</span>(app_manager.RyuApp):</span><br><span class="line"></span><br><span class="line">    OFP_VERSIONS=[ofproto_v1_3.OFP_VERSION] <span class="comment">#确定控制器的openflow 版本</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,*args,**kwargs</span>):</span><br><span class="line">        <span class="built_in">super</span>(Kruskaltest,self).__init__(*args,**kwargs) <span class="comment">#继承自己，方便后面的初始化步骤</span></span><br><span class="line">        self.mac_to_port=&#123;&#125; <span class="comment">#arp 列表初始化</span></span><br><span class="line">        self.topology_api_app=self</span><br><span class="line">        self.sleep_interval = <span class="number">0.5</span> <span class="comment">#程序暂停的时间为0.5 秒，以使mininet 和ryu 的拓扑建立保持同步，防止链路丢失</span></span><br><span class="line">        self.switches = [] <span class="comment">#交换机列表初始化</span></span><br><span class="line">        self.links = [] <span class="comment">#链路信息初始化</span></span><br><span class="line">        self.mst_links = [] <span class="comment">#最小生成树上的链路初始化</span></span><br><span class="line">        self.pathes = &#123;&#125; <span class="comment">#路径初始化</span></span><br><span class="line">        self.banport = &#123;&#125; <span class="comment">#被禁止的端口初始化</span></span><br></pre></td></tr></table></figure><h3 id="流表配置">流表配置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@set_ev_cls(<span class="params">ofp_event.EventOFPSwitchFeatures,CONFIG_DISPATCHER</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">switch_features_handler</span>(<span class="params">self,ev</span>):</span><br><span class="line">    datapath=ev.msg.datapath</span><br><span class="line">    ofproto=datapath.ofproto</span><br><span class="line">    ofp_parser=datapath.ofproto_parser</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">match</span>=ofp_parser.OFPMatch()</span><br><span class="line">    actions=[ofp_parser.OFPActionOutput(ofproto.OFPP_CONTROLLER,ofproto.OFPCML_NO_BUFFER)]</span><br><span class="line">    self.add_flow(datapath,<span class="number">0</span>,<span class="keyword">match</span>,actions) <span class="comment">#配置缺省流表，match 域为空，对每一个交换机都添加该流表，当交换机无法处理收到的数据包时，执行actions，把数据包向控制器转发</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_flow</span>(<span class="params">self,datapath,priority,<span class="keyword">match</span>,actions</span>):<span class="comment">#控制器向交换机发流表的方法</span></span><br><span class="line">    ofproto=datapath.ofproto</span><br><span class="line">    ofp_parser=datapath.ofproto_parser</span><br><span class="line"> </span><br><span class="line">    inst=[ofp_parser.OFPInstructionActions(ofproto.OFPIT_APPLY_ACTIONS,actions)]<span class="comment">#收到后立即执行actions</span></span><br><span class="line">  <span class="comment">#以上内容为流表信息的获取</span></span><br><span class="line"></span><br><span class="line">    mod=ofp_parser.OFPFlowMod(datapath=datapath,priority=priority,<span class="keyword">match</span>=<span class="keyword">match</span>,instructions=inst)<span class="comment">#流表内容定义，第一个为流表从哪一个交换机发送过来，第二个为权重，第三个为匹配域，当收到的数据包和匹配域匹配上时执行instructions</span></span><br><span class="line">    datapath.send_msg(mod)<span class="comment">#发送流表</span></span><br></pre></td></tr></table></figure><h3 id="拓扑发现">拓扑发现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@set_ev_cls(<span class="params">event.EventSwitchEnter,[CONFIG_DISPATCHER,MAIN_DISPATCHER]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">switch_enter_handler</span>(<span class="params">self,ev</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;==================================&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;switch entered...&#x27;</span>)</span><br><span class="line">    self.switches,self.links = self.get_topology() <span class="comment">#通过后面的get_topology 方法来获取交换机和链路信息</span></span><br><span class="line">    <span class="comment">#self.mst_links = self.kruskal(self.links[:])</span></span><br><span class="line">    self.banport = self.find_banport(self.links[:]) <span class="comment">#找到被禁止的端口，因为洪泛时不能有圈，否则会陷入死循环</span></span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> self.mst_links:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(link[<span class="string">&#x27;src_dpid&#x27;</span>],link[<span class="string">&#x27;dst_dpid&#x27;</span>])) <span class="comment">#打印最小生成树</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;==================================&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    time.sleep(self.sleep_interval) <span class="comment">#ryu 每发现一个交换机之后都要暂停一段时间，让mininetd 建立拓扑的速度能跟上，否则会造成链路丢失</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_topology</span>(<span class="params">self</span>):</span><br><span class="line">    switch_list = get_switch(self.topology_api_app,<span class="literal">None</span>)</span><br><span class="line">    switches = [switch.dp.<span class="built_in">id</span> <span class="keyword">for</span> switch <span class="keyword">in</span> switch_list]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;switches:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(switches))<span class="comment">#得到并打印交换机列表</span></span><br><span class="line">    <span class="keyword">for</span> switch <span class="keyword">in</span> switches:</span><br><span class="line">        self.banport.setdefault(switch,[])<span class="comment">#初始化被禁止的端口列表</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------------------------------------&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;banport first_list is&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.banport))</span><br><span class="line">    link_list = get_link(self.topology_api_app,<span class="literal">None</span>)</span><br><span class="line"> </span><br><span class="line">    links = [&#123;<span class="string">&#x27;src_dpid&#x27;</span>:link.src.dpid,<span class="string">&#x27;src_port_no&#x27;</span>:link.src.port_no,<span class="string">&#x27;dst_dpid&#x27;</span>:link.dst.dpid,<span class="string">&#x27;dst_port_no&#x27;</span>:link.dst.port_no&#125;</span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> link_list]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;the getted link_list is&#123;&#125;&quot;</span>.<span class="built_in">format</span>(links)) <span class="comment">#得到并打印链路信息，其中包含了源交换机的dpid 和对应的端口号以及目的交换机的dpid 和对应的端口号</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#add &#x27;delay&#x27; in link</span></span><br><span class="line">    <span class="comment">#file = open(&quot;./topo24.json&quot;,&quot;r&quot;)</span></span><br><span class="line">    file = <span class="built_in">open</span>(<span class="string">&quot;./topo7.json&quot;</span>,<span class="string">&quot;r&quot;</span>)<span class="comment">#由于原来的24 个交换机拓扑太大，故用7 个交换机来作为测试，读取topo7.json 里的信息</span></span><br><span class="line">    topoinfo = json.load(file)</span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">        <span class="keyword">for</span> edge <span class="keyword">in</span> topoinfo[<span class="string">&#x27;links&#x27;</span>]:</span><br><span class="line">          <span class="keyword">if</span>([<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(link[<span class="string">&quot;src_dpid&quot;</span>]),<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(link[<span class="string">&quot;dst_dpid&quot;</span>])] == edge[<span class="string">&quot;vertexs&quot;</span>] <span class="keyword">or</span> [<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(link[<span class="string">&quot;dst_dpid&quot;</span>]),<span class="string">&quot;s&quot;</span>+<span class="built_in">str</span>(link[<span class="string">&quot;src_dpid&quot;</span>])] == edge[<span class="string">&quot;vertexs&quot;</span>]): </span><br><span class="line">            link[<span class="string">&#x27;delay&#x27;</span>] = edge[<span class="string">&#x27;delay&#x27;</span>]</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="控制器对收到的数据包的处理">控制器对收到的数据包的处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@set_ev_cls(<span class="params">ofp_event.EventOFPPacketIn,MAIN_DISPATCHER</span>) </span><span class="comment">#监视器，当有packetin 消息进来时，</span></span><br><span class="line">执行下面的代码</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">packet_in_handler</span>(<span class="params">self,ev</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;==========================================================&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;it has entered packet_in_handler func&#x27;</span>)</span><br><span class="line">    msg=ev.msg</span><br><span class="line"></span><br><span class="line">    datapath=msg.datapaths</span><br><span class="line">    ofproto=datapath.ofproto</span><br><span class="line">    ofp_parser=datapath.ofproto_parser</span><br><span class="line"> </span><br><span class="line">    dpid=datapath.<span class="built_in">id</span> <span class="comment">#id from switch</span></span><br><span class="line">    <span class="comment">#以上是对收到的数据包进行解析</span></span><br><span class="line">    </span><br><span class="line">    self.mac_to_port.setdefault(dpid,&#123;&#125;) <span class="comment"># 对控制器里面的mac_to_port 列表初始化</span></span><br><span class="line">    pkt=packet.Packet(msg.data) <span class="comment">#读取需要传输的数据</span></span><br><span class="line">    eth=pkt.get_protocol(ethernet.ethernet) <span class="comment">#读取以太网地址的数据包，里面包含了src 和dst 以及ethertype 等信息</span></span><br><span class="line">    in_port=msg.<span class="keyword">match</span>[<span class="string">&#x27;in_port&#x27;</span>] <span class="comment">#读取匹配域中的进入交换机的端口号</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;in_port is &quot;</span>,in_port)</span><br><span class="line">    src = eth.src</span><br><span class="line">    self.mac_to_port[dpid][src]=in_port <span class="comment">#将源交换机的MAC 地址和源交换机进入该交换机的端口号对应起来</span></span><br><span class="line">    dst=eth.dst <span class="comment">#目的主机的MAC 地址</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;the src is &#x27;</span>, src)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;the dst is &#x27;</span>, dst)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;the dpid is &#x27;</span>, dpid)</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;self.mac_to_port:&quot;</span>, self.mac_to_port)</span><br><span class="line">    pathes=&#123;&#125; <span class="comment">#路径初始化</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#如果目的主机的MAC地址已经在控制器的mac_to_port列表里面有记录，直接下发流表</span></span><br><span class="line">    <span class="keyword">if</span> dst <span class="keyword">in</span> self.mac_to_port[dpid]: </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;dst mac is known&#x27;</span>)</span><br><span class="line">        out_port=self.mac_to_port[dpid][dst]</span><br><span class="line">        actions=[ofp_parser.OFPActionOutput(out_port)]</span><br><span class="line">        <span class="keyword">match</span>=ofp_parser.OFPMatch(in_port=in_port,eth_dst=dst,eth_src=src)</span><br><span class="line">        <span class="comment">#以上为对流表内容的定义</span></span><br><span class="line">        </span><br><span class="line">        self.add_flow(datapath,<span class="number">1</span>,<span class="keyword">match</span>,actions) <span class="comment">#权值为1，表示优先级先于缺省流表</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;add flow&quot;</span>)</span><br><span class="line"> </span><br><span class="line">        self.pathes.setdefault(src,&#123;&#125;)</span><br><span class="line">        self.pathes[src].setdefault(dst,[]) <span class="comment">#对从这个主机开始的路径做初始化</span></span><br><span class="line"> </span><br><span class="line">        self.pathes[src][dst].append(dpid) <span class="comment">#往路径上添加交换机</span></span><br><span class="line"> </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;path appending:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.pathes[src][dst])) <span class="comment">#打印路径上的交换机</span></span><br><span class="line">    <span class="keyword">else</span>: <span class="comment">#如果控制器的mac_to_port 列表里面没有目的主机的mac 地址，执行以下代码</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;dst mac is unknown&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;the dpid is &#x27;</span>,dpid)</span><br><span class="line">        actions=[] <span class="comment">#actions 初始化</span></span><br><span class="line">        <span class="keyword">for</span> port <span class="keyword">in</span> datapath.ports: <span class="comment">#对于向控制器发送packetin 消息的交换机中的每一个端口，执行下面的代码</span></span><br><span class="line">            <span class="keyword">if</span>(port <span class="keyword">not</span> <span class="keyword">in</span> self.banport[dpid]) <span class="keyword">and</span> (port != in_port): <span class="comment">#如果端口不是禁止端口并且不是数据包进入的端口，将端口加入执行洪泛操作的端口列表里面</span></span><br><span class="line">                actions.append(ofp_parser.OFPActionOutput(port))</span><br><span class="line">    out=ofp_parser.OFPPacketOut(datapath=datapath,buffer_id=msg.buffer_id,in_port=in_port,actions=actions,data=msg.data) <span class="comment">#向出端口发送的数据包内容</span></span><br><span class="line">    datapath.send_msg(out)<span class="comment">#发送数据包</span></span><br></pre></td></tr></table></figure><h3 id="库函数说明">库函数说明</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ryu.base <span class="keyword">import</span> app_manager <span class="comment">#ryu.base 是ryu 的管理中心，起到加载各种ryu 应用、为ryu应用提供环境和提供不同ryu 应用之间的连接的作用，从ryu.base 里面引用的app_manager 类里面包含管理所有ryu 程序的方法，包括启动ryu、加载ryu 应用和关闭ryu 等</span></span><br><span class="line"><span class="keyword">from</span> ryu.topology.api <span class="keyword">import</span> get_link,get_switch</span><br><span class="line"><span class="keyword">from</span> ryu.base <span class="keyword">import</span> app_manager</span><br><span class="line"><span class="keyword">from</span> ryu.ofproto <span class="keyword">import</span> ofproto_v1_3 <span class="comment">#引入ofproto_v1_3 协议，该协议是本ryu 控制器遵守的协议</span></span><br><span class="line"><span class="keyword">from</span> ryu.controller.handler <span class="keyword">import</span> set_ev_cls</span><br><span class="line"><span class="keyword">from</span> ryu.controller.handler <span class="keyword">import</span> CONFIG_DISPATCHER,MAIN_DISPATCHER <span class="comment">#引入了一个事件监视器，下面的语句引入了两种状态config 为配置状态，main 为运行状态</span></span><br><span class="line"><span class="keyword">from</span> ryu.lib.packet <span class="keyword">import</span> packet <span class="comment">#将收到的数据包里信息转换成特定格式</span></span><br><span class="line"><span class="keyword">from</span> ryu.lib.packet <span class="keyword">import</span> ethernet <span class="comment">#引入ethernet 类，将数据包的MAC 地址组织成特定格式</span></span><br><span class="line"><span class="keyword">from</span> ryu.topology <span class="keyword">import</span> event <span class="comment">#event 里面定义了后续使用的EventSwitchEnter 等类</span></span><br><span class="line"><span class="keyword">from</span> ryu.topology.api <span class="keyword">import</span> get_switch,get_link <span class="comment">#用于实现交换机和控制器的连接和通过LLDP协议读取交换机的拓扑</span></span><br><span class="line"><span class="comment">#import networkx as nx</span></span><br><span class="line"><span class="keyword">from</span> ryu.controller <span class="keyword">import</span> ofp_event <span class="comment">#ofp_event 类包含了之后需要使用的msg 和msg.datapath方法，前一个用于读取信息，后一个用于读取数据包的来自哪一个交换机</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> string</span><br></pre></td></tr></table></figure><h2 id="kruskal-算法运用">kruskal 算法运用</h2><h3 id="概述">概述</h3><p>在基于SDN 的实际网络拓扑中，每个交换机和所属主机可以看成一个顶点，各交换机相连接的信道看成一条边，其权重则为每条信道的时延。对于交换机，还有一个重要的属性——端口，即交换机连接其他网络设备的接口。为了洪泛简便，我们采用逆向kruskal 算法的原理，即找出最小生成树不在的端口，记为banport。只要数据包在banport 停止传输，只在允许通行的端口传输，那么一定不会成环，必然是在最小生成树上。</p><h3 id="变量说明">变量说明</h3><ul><li><p>src_dpid：源交换机id</p></li><li><p>dst_dpid:目的交换机id</p></li><li><p>Links：边集，特点：双向；包含源交换机id 和端口，目的交换机id 和端口，权重</p></li></ul><h3 id="代码实现">代码实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">links.sort(key = <span class="keyword">lambda</span> x:x[<span class="string">&#x27;delay&#x27;</span>]) <span class="comment">#升序排序</span></span><br></pre></td></tr></table></figure><p>对于排序，我们使用python 自带的对列表的排序，将关键字设为delay,即按时延为权重升序排序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#成环检测（UNION-FIND 思想）</span></span><br><span class="line">group = [[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(self.switches)+<span class="number">1</span>)] <span class="comment">#创建包含交换机数量子集合的集合</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">    <span class="keyword">if</span> link[<span class="string">&#x27;src_dpid&#x27;</span>]&lt;link[<span class="string">&#x27;dst_dpid&#x27;</span>]: <span class="comment">#遍历每一条边，且每一条边只遍历一次</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(group)):</span><br><span class="line">            <span class="keyword">if</span> link[<span class="string">&quot;dst_dpid&quot;</span>] <span class="keyword">in</span> group[i]:</span><br><span class="line">                m = i</span><br><span class="line">            <span class="keyword">if</span> link[<span class="string">&quot;src_dpid&quot;</span>] <span class="keyword">in</span> group[i]:</span><br><span class="line">                n = i <span class="comment">#将源交换机和目的交换机所在的集合序号记录在m,n 中</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#如果m,n 相等，即该边不是一条割边，则将其端口禁掉</span></span><br><span class="line">        <span class="keyword">if</span> m == n <span class="keyword">and</span> link[<span class="string">&#x27;dst_port_no&#x27;</span>] <span class="keyword">not</span> <span class="keyword">in</span> banport[link[<span class="string">&quot;dst_dpid&quot;</span>]]:</span><br><span class="line">            banport[link[<span class="string">&quot;dst_dpid&quot;</span>]].append(link[<span class="string">&#x27;dst_port_no&#x27;</span>])</span><br><span class="line">            banport[link[<span class="string">&quot;src_dpid&quot;</span>]].append(link[<span class="string">&#x27;src_port_no&#x27;</span>])</span><br><span class="line">        <span class="comment">#如果不相等，则将两边端点并入一个集合</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            group[m] = group[m] + group[n]</span><br><span class="line">            group[n] = []</span><br></pre></td></tr></table></figure><p>对于成环检测的实现，我们采用UNION-FIND 的思想，每个集合的leader 即为集合的序号，如果源交换机和目的交换机的leader 的相同，说明二者在同一个集合，即会成环，则将二者连接的两个端口禁掉；若二者的leader 不同，说明二者不会成环，则更新集合，将二者集合合并。由于边集是升序排列，因此遍历时也从小到大遍历，当最终所有交换机都在同一集合中时，说明最小生成树已经形成。</p><h1>成果展示</h1><h2 id="拓扑构建">拓扑构建</h2><p>（一）mininet侧</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220726172124254.png" alt="mininet侧拓扑信息"></p><p>（二）RYU侧</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220726172145040.png" alt="RYU侧拓扑信息"></p><p>（三）拓扑可视化</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220726172531921.png" alt="拓扑示意图"></p><h2 id="kruskal-算法实现">kruskal 算法实现</h2><p>（一）禁止端口</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220726172645753.png" alt="禁止端口信息"></p><p>（二）最小生成树可视化</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220726172839565.png" alt="最小生成树示意图"></p><h2 id="连通性测试">连通性测试</h2><p>（一）随机ping测试</p><p>mininet侧，可以看到花费了0.499毫秒ping通</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220726173003726.png" alt="mininet侧打印信息"></p><p>RYU侧，可以看到逐渐从2号主机沿着最小生成树扩展到达19号</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220726173025262.png" alt="RYU侧打印信息"></p><p>（二）pingall测试</p><p>下图可见全部ping通，连通性良好。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220726173119116.png" alt="全部ping通图"></p>]]></content>
      
      
      <categories>
          
          <category> 网络算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我电作业 </tag>
            
            <tag> mininet </tag>
            
            <tag> ryu控制器 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mininet拓扑搭建</title>
      <link href="/2a47880c/"/>
      <url>/2a47880c/</url>
      
        <content type="html"><![CDATA[<h1>基于python脚本的拓扑搭建</h1><p>Mininet这个网络仿真软件支持使用python脚本建立拓扑，我们只需要预先写好存储拓扑信息的文件和拓扑建立逻辑（这是两个文件）就可以一键运行，在拓扑规模大、链路数量多的情况下（实验用的拓扑就挺大）能极大提高仿真效率，且不容易出现错误搭建拓扑的情况（比如少拉了一根线，拉错了一根线之类的）。</p><h1>拓扑搭建逻辑</h1><p>mininet自带有一个拓扑搭建脚本，我们先来看一下拓扑搭建逻辑。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220721212517878.png" alt="拓扑搭建逻辑"></p><p>你可以在上图红色框线所示的文件路径找到系统里的拓扑搭建脚本，里面的代码就只有一页这么多（才34行，简单得不能再简单了）。</p><ul><li>绿色框线里的内容是这个 python 脚本成功运行需要的一些库，一般不需要改动（当然了，如果你想给这个脚本增加一些新功能，相应的库也要加进来，比如让他能读取json文件，就需要添加读取json文件需要的库，具体是什么，可以自行搜索~）。</li><li>橙色框线的第一行代码读取拓扑信息，注意，此处读取的路径使用了相对路径（./表示当前脚本文件所在的路径），使用绝对路径也是可以的，第15行代码读取拓扑信息文件的第一行，即下图的第一行。下图的第一行数据分别表示这个拓扑里的主机数量（3）和交换机数量（7）</li><li>有了这两个信息，上图的紫色框线开始向 mininet 网络中添加主机（line18）和交换机（line21），然后上图的程序继续读取拓扑文件的其他行，用于添加设备之间的链路（上图蓝色框线部分）。</li><li>最后，上图白色框线的部分相当于为这个脚本创建的网络起了一个名字，你可以做定制化的改动，比如改成你自己的名字，但是一定要记住自己改成了什么，后面实际运行时需要用到。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220721212837756.png" alt="拓扑信息"></p><p>接下来，我们看看拓扑信息文件到底存了什么。你可以在上图中红色框线所示的路径下（其实就是拓扑搭建脚本所在的路径）找到存储拓扑信息的文件（topoinfo.txt）。打开以后其实也就14行，第一行的意思刚刚已经解释过了，仔细观察，你会发现，之后的每一行都对应了要搭建的拓扑里面的一条边。这并不是实验要用的那个拓扑的信息，而是下图所示的拓扑。到这里，我们可以回到第一幅图的蓝色框线部分了，是不是能理解这部分代码在干什么了。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220721213138963.png" alt="示例拓扑"></p><h1>json文件描述拓扑</h1><p>这一部分，还有一点补充，第二幅图的文件用最简单的文件格式（实际就是txt）去描述了一个网络的拓扑信息，但并不一定最好用，例如当网络拓扑比较大，且需要给链路附加诸如时延和带宽等属性的时候，文件解析（解析就是指从文件中去找想要的某些信息）起来不太方便，比如DFS、Dijkstra需要获取拓扑中链路的时延属性，最大流需要获取链路的带宽，有时候需要全部链路的这些信息，有时候又只需要某条链路的信息，那从这种txt中去找相关信息就比较麻烦。万幸的是，不论是拓扑搭建脚本、还是ryu控制器的控制逻辑，都是用python写的，python是可以通过调库将json文件读取成字典的（如果你还不知道python字典是什么，自觉去面壁10分钟），到这，你悟了吗？</p><h1>运行拓扑</h1><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220721213651121.png" alt="Mininet运行自定拓扑"></p><p>现在我们正式开始运行用户自定义的脚本（革命快要成功了，再坚持一下），上图中橙色框线里橙色横线处的代码表示要自定义脚本，其后紧跟的就是我们拓扑建立逻辑的脚本文件（严格讲应该是脚本文件所在的路径再加文件名，只是这里执行该命令的位置就是文件所在的目录），绿色框线里的内容就相当于这个建立的拓扑叫什么名字了，还记得最开始的图里里白色框线里的东西吗，就是那个玩意儿，蓝色框线的命令告诉mininet这个软件，我这个建起来的拓扑需要连接到一个远程的控制器，这个控制器的ip是127.0.0.1，端口号是6653（openflow协议的默认端口号），最后紫色框线的配置告诉mininet：你给我按照添加主机的顺序，从00:00:00:00:00:01开始依次分配物理地址（注意物理地址用的是十六进制，00:00:00:00:00:10不是10而是16，切记，切记），如果你不加这条命令，每个添加的主机的mac地址就是随机分配的，没有规律（在之前给的b站上的视频里面，作者也提到过这个）。输入密码后，Mininet就开始建立拓扑了，黄色框线内显示了mininet建立拓扑的过程，先添加了三个主机、然后是7个交换机、最后是13条边（注意是双向边）。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220721213900463.png" alt="结束运行"></p><p>Mininet的命令状态下输入exit（图5红色框线）会退出，节点和链路都依次停止，蓝色框线里显示mininet停止了多少条链路。</p><p>这里还要注意一个问题，对mininet来说，一共增加了13条双向边，其中有三条是主机和交换机之间的链路，剩余10条才是交换机和交换机之间的边，对控制器来说，他只能观测到交换机和交换机之间的边（也就是他能获取到20条边，因为这里的10条边是双向边，所以ryu控制器按两个方向各存一条），而看不到主机和交换机之间的边，原因在于控制器发现拓扑用的是LLDP协议，且控制器控制的是交换机，只有交换机会向控制器请求指示，而在LLDP链路发现过程中发送到主机的测试包会被主机直接丢掉，不存在主机也将这个数据包向上发给控制器的可能，所以LLDP检测不到主机和交换机之间的链路。）</p><blockquote><p>还有一个问题需要解释，你可能都没发现这个问题：图3中交换机的端口号是怎么确定的？Mininet在给设备端口分配编号的时候也是从1开始（不同设备之间的端口编号是独立的），按照设备接口上连接链路的顺序，依次编号。举个栗子：按照图2的拓扑文件，与交换机1有关的链路的添加顺序是h1-s1、s1-s2、s1-s4，所以s1相对应的端口也就被分别编号1、2、3。也就是说，这个端口编号在你给定了拓扑信息和搭建拓扑的脚本逻辑的时候，命运已定。</p></blockquote><p>至此，拓扑搭建的所有内容已经介绍完了，回过头来再看，建立一个拓扑的信息文本其实要比搭建拓扑的逻辑脚本麻烦的多，毕竟后者就几个for的事，前者那可真是实打实地要一条条加呀，就拿之前给的那个24个节点地拓扑来说，交换机到交换机的边有43条（ryu控制器的get_link()拉取的信息中包含的链路数量翻倍），主机到交换机的边有24条，合起来67条（你可以用我上面介绍的办法看看他是不是真的是67条），这你要是拿miniedit拉可得拉多久，想想就头秃。</p><h1>实验拓扑</h1><p>为了防止你头秃，这里破例提供两个已建好的拓扑信息的json文件（注意，前面讲解的拓扑搭建代码不能直接处理json文件，你还需要做出相应的调整），如果你愿意，可以直接用我提供的json文件去实现后续的逻辑。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;host_no&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;switch_no&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;links&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s1&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s2&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s3&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s4&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h5&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s5&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h6&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s6&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h7&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s7&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s2&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">18</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s4&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">9</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s3&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">14</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s5&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">22</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s6&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">19</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s5&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">16</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s6&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">21</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s5&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s6&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s5&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s7&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">6</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s6&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s7&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">11</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>上面代码中一共7个交换机，拓扑图如下，每个交换机下挂一个主机，图中只画出一个主机（h3），但你需要知道还有6个主机并没有画出来，主机和交换机之间的链路属性都按图6中的蓝色数值进行了设置，交换机之间的链路属性也按图中标注进行了设置。</p><p>所有链路的排列顺序（正常来说就是后面搭建拓扑的脚本添加链路的顺序，也就是说）如下：首先是主机和交换机之间的链路，按主机编号增序添加；然后是交换机和交换机之间的链路，按交换机编号增序依次添加交换机的所有邻居链路，对邻居的要求是其编号比自己的大，在满足这个条件的邻居里，先添加邻居编号小的链路（这里用文字描述有点绕，没看明白的话多看几次）。按这个规则形成的拓扑中，交换机的各个接口编号以较小的红色数字标注在了对应位置。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220721215857039.png" alt="7节点拓扑图"></p><hr><p>类似的，下面给定实验拓扑，只是相比上图，下图追加了按这个文件建立的拓扑的交换机接口编号信息。代码中链路的顺序规则同上。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;host_no&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;switch_no&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;links&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s1&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s2&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s3&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s4&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h5&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s5&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h6&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s6&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h7&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s7&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h8&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s8&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h9&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s9&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h10&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s10&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h11&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s11&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h12&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s12&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h13&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s13&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h14&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s14&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h15&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s15&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h16&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s16&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h17&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s17&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h18&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s18&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h19&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s19&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h20&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s20&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h21&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s21&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h22&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s22&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h23&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s23&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;h24&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s24&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s2&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">19</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s7&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">21</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s3&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">13</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s7&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">9</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s4&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">16</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">6</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s5&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">30</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s6&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">7</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s5&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">11</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s8&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">15</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s5&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s6&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">16</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s6&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s7&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">9</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s6&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s8&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">29</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">18</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s6&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s9&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">25</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s7&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s9&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s7&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s10&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">27</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s8&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s14&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">6</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s9&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s10&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">17</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s9&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s12&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">15</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s9&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s14&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">19</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">14</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s10&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s11&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s10&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s12&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">7</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s10&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s18&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">18</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s11&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s17&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">18</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s11&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s19&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">13</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s12&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s13&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">13</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s12&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s17&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">13</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">22</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s13&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s14&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">19</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s13&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s15&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">11</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s13&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s16&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s14&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s15&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">7</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s15&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s24&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">16</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s16&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s17&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">17</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">6</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s16&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s21&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">9</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s16&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s22&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">12</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s16&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s24&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">6</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s17&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s20&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">8</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s17&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s21&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s18&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s19&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">15</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s19&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s20&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">7</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s20&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s21&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">9</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s21&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s22&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">13</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">14</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s22&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s23&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vertexs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;s23&quot;</span><span class="punctuation">,</span> <span class="string">&quot;s24&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;delay&quot;</span><span class="punctuation">:</span> <span class="number">17</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;bw&quot;</span><span class="punctuation">:</span> <span class="number">23</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220721220200885.png" alt="24节点拓扑图"></p>]]></content>
      
      
      <categories>
          
          <category> 网络算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mininet </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验环境搭建</title>
      <link href="/14618721/"/>
      <url>/14618721/</url>
      
        <content type="html"><![CDATA[<h1>Ubuntu系统</h1><p>ubuntu18.04是一个Linux内核的系统，如果你是Windows用户，不习惯是正常现象。在这里，应用更多是要通过命令行或者说终端去运行，而不是双击快捷方式，也许你不熟悉常用命令（cd、ls、sudo等），没关系，这种帖子网上很容易就能搜到，是时候自学点东西了。</p><p>另外虚拟机中还需要有RYU控制器和mininet这两个应用。</p><h1>RYU控制器</h1><p>RYU 是一个基于组件的完全用python 实现的开源框架，组件包括OpenFlow 协议支持、时间管理、消息机制、内存状态管理、应用程序管理、基础设施服务和一系列可用的库，此外，还提供一些应用程序和服务，例如侦测（Snort）、二层交换机、GRE 隧道抽象、VRRP、拓扑和统计服务等。</p><p>打开终端输入<em>ryu-manager</em>（区分大小写）按下回车，如下显示则说明ryu控制器可以正常运行。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220721205741628.png" alt="开启ryu控制器示意图"></p><p>此外还可以尝试运行ryu自带的一些应用，进入到ryu的app目录下，输入：<em>ryu-manager</em> 空格 应用名（即python脚本文件名称，需要加后缀，见截图），若运行不报错则说明控制器工作正常。Mininet的测试类似，相关命令大家百度，这里不多说。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220721205948607.png" alt="运行ryu应用示意图"></p><h1>mininet</h1><p>Mininet 是一个网络模拟器，可以在Linux 内核上模拟出多个主机、交换机、路由器和链路，所有的组件都通过虚拟以太网进行连接，并配置了net-10 私有IP 地址，支持非常复杂的拓扑结构，可以近乎任意大小和顺序，基于它的网络的性能常常非常接近真实网络的性能。</p><p>Mininet 创建topo 的方式有很多：命令行创建网络拓扑、自定义拓扑脚本、可视<br>化界面创建拓扑。</p><p>我们同样可以建立mininet自带的一些拓扑，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220721210243270.png" alt="建立拓扑示意图"></p><h1>需要学的东西</h1><p>Ryu的应用和mininet的拓扑脚本都是使用Python编写，也许你没有学过Python，但相信我，Python代码至少在编写的时候要比C语言人性化得多。</p><p>Mininet这边，需要掌握的东西相对较少，熟悉拓扑脚本文件的编写差不多就足够了，</p><p>Ryu控制器方面，对初学者来说，先看些视频、学习官方文档才是王道，全凭感觉是肯定不行的，那样你可能连前面的应用都跑不起来。<a href="https://www.bilibili.com/video/BV1VJ41117vJ?p=15&amp;vd_source=595ecb634d520a0458c323613451f9a6">这些视频</a>已经是我目前找到的讲得最最清楚的教程了（画质烂，但能凑合看），可以看看，之后再参考下Ryubook（群文件里的参考书文件夹中Ryubook-en）和在线的<a href="https://ryu.readthedocs.io/en/latest/writing_ryu_app.html">官方文档</a>，就差不多了。</p><p>要做完后续几个实验，至少需要：</p><ol><li><span class='p gray'>熟悉</span>Python的基础语法</li><li><span class='p yellow'>会用</span>Linux的常用命令</li><li><span class='p green'>了解</span>Mininet的拓扑创建逻辑</li><li><span class='p cyan'>清楚</span>Ryu的事件处理流程</li><li><span class='p red'>掌握</span>实验所需的算法理论</li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mininet </tag>
            
            <tag> ryu控制器 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动驾驶系统分层模型设计</title>
      <link href="/d3e09831/"/>
      <url>/d3e09831/</url>
      
        <content type="html"><![CDATA[<h1>任务概览</h1><h2 id="主题">主题</h2><p>利用网络分层模型的要素，参考功能分层依据，设计一个分层系统，或者用分层模型描述一个系统。</p><h2 id="目标">目标</h2><ul><li><p>体会分层模型的分层方法和要素</p></li><li><p>体会垂直分层，纵向服务与被服务关系，横向协议合作关系在分层模型中的设计方法</p></li></ul><h1>问题剖析</h1><h2 id="自动驾驶系统简介">自动驾驶系统简介</h2><p>自动驾驶系统系统采用先进的通信、计算机、网络和控制技术，对汽车实现实时、连续控制。采用现代通信手段，直接面对汽车，可实现车地间的双向数据通信，传输速率快，信息量大，后续追踪汽车和控制中心可以及时获知前汽车车的确切位置，使得运行管理更加灵活，控制更为有效，更加适应汽车自动驾驶的需求。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/clip_image002.jpg" alt="自动驾驶示意图"></p><h2 id="需求分析">需求分析</h2><p>自动驾驶汽车需要依靠人工智能、视觉计算、雷达、监控装置和全球定位系统协同合作，让电脑可以在没有任何人类主动的操作下，自动安全地操作机动车辆。最终目标为通过该系统实现完全自动化，即可无人驾驶车辆、允许车内所有乘员从事其他活动且无需进行监控的系统。</p><p>对分层的设计需要实现：</p><ul><li><p>垂直分层，下层为上层提供服务</p></li><li><p>层与层间界限清晰，尽可能独立</p></li><li><p>层内功能模块按一定的规则交互</p></li></ul><h1>分层设计</h1><p>根据系统内容及需求，我们将自动驾驶系统分为四层模型：</p><ul><li><p>交互层：根据系统做出的决策，替代人类控制车辆正常工作</p></li><li><p>决策层：处理网络层传来的信息并做出决策判断，判定相应的控制策略</p></li><li><p>网络层：识别和传递感知层获取的信息</p></li><li><p>物理层：信息收集与控制</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/clip_image002.gif" alt="自动驾驶系统分层设计图"></p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/clip_image004.gif" alt="自动驾驶系统分层模型图"></p><h1>层次分析</h1><h2 id="物理层">物理层</h2><h3 id="功能">功能</h3><p>物理层主要负责数据采集以及自动驾驶汽车操作的硬件行为控制。采集的信息包括自信息和互信息。</p><p>自信息：车速度、加速度、刹车状态、方向盘转角、GPS位置、本车类型、载员数、载物重</p><p>互信息（暂时不考虑存在路人干扰的情况）：</p><ul><li><p>与周围车辆1的距离，车辆1在本车的方位；</p></li><li><p>与周围车辆2的距离，车辆2在本车的方位；</p></li><li><p>……</p></li><li><p>与周围车辆n的距离，车辆n在本车的方位。</p></li></ul><h3 id="物理层-网络层数据传输格式">物理层-网络层数据传输格式</h3><p>数据内容与格式（data）：</p><div class="note modern"><p>#车仪表盘显示速度#加速度#刹车状态#方向盘转角#GPS提供的纬度数据#GPS提供的经度数据#GPS所得车速#GPS所测车航向#车型号#载员数#载物重#周围车辆数#车辆1与本车距离#车辆1在本车的方位#…#车辆n与本车距离#车辆n与本车的方位#</p></div><p>例：</p><div class="note modern"><p>#060.00#-01.500#50#+030#N04546.4089#E10246.1089#055.00#30#BJ2020S#2#250#1#90#</p></div><details class="folding-tag" cyan><summary> 参数标准设计 </summary>              <div class='content'>              <ul><li><p><strong>车仪表盘显示速度</strong>：整数位为3位，小数保留2位，单位为 km/h；</p></li><li><p><strong>加速度</strong>：符号位（‘+’‘-’）一位，整数位2位，小数位3位，单位为 m/s2；</p></li><li><p><strong>刹车状态</strong>：三位数表示，取值为0~100，表示刹车的下压程度，0表示未踩刹车，100表示刹车踩死，下压程度100%；</p></li><li><p><strong>方向盘转角</strong>：一位符号位（‘+’‘-’），三位数字位，符号位为正，表示顺时针转动方向盘，反之为逆时针，数字位表示转动角度；</p></li><li><p><strong>GPS提供的纬度数据</strong>：一个符号位（‘N’‘S’），五位整数位，四位小数位，dddmm.mmmm(度分)格式(前面的0也将被传输)；</p></li></ul><blockquote><p>经纬度计算规则：如接收到的纬度是4546.4089</p><p><em>4546.40891/100=45.464089**可以直接读出45度, 4546.40891-45*100=46.4089, 可以直接读出46分，46.4089–46 =0.4089*60=24.5346读出24秒, 所以纬度是：45度46分24秒</em></p></blockquote><ul><li><p><strong>GPS提供的经度数据</strong>：一个符号位（‘E’‘W’），数字位dddmm.mmmm，计算方法同纬度的计算方法；</p></li><li><p><strong>GPS所得车速</strong>：由于车仪表盘的速度和GPS所测的速度是有所不同的，根据实际的需要，所以准备两份数据，格式同车仪表盘的速度传输格式；</p></li><li><p><strong>GPS所测车航向</strong>：偏离正北的角度，数据范围0~ 360，0表示正北方向，90正东和180表示正南方向，270正西；</p></li><li><p><strong>车型号</strong>：根据车的不同型号提供不同的数据，无特定格式；</p></li><li><p><strong>载员数</strong>：数据范围0~N，N为车限制载人数，1，为只有司机一人；</p></li><li><p><strong>载物重</strong>：载物重根据车上的测重系统所得，更具车型不同有不同的计算方法和传输格式，单位为kg；</p></li><li><p><strong>周围车辆数</strong>：数字N，范围为 N&gt;=0；</p></li><li><p><strong>车辆1与本车距离</strong>：直线相对距离，单位m；</p></li><li><p><strong>车辆1在本车的方位</strong>：相对方位，以车正对方向为0度，俯视，顺时针扫描，记录转动的角度，范围0~360度，精确到小数后两位；</p></li><li><p><strong>车辆n与本车距离</strong>：同车辆1；</p></li><li><p><strong>车辆n与本车的方位</strong>：同车辆1。</p></li></ul>              </div>            </details><h3 id="物理层和网络层的接口设计和数据文件的封装">物理层和网络层的接口设计和数据文件的封装</h3><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220720204113339.png" alt="物理层-网络层数据格式示意图"></p><details class="folding-tag" red><summary> 参数说明 </summary>              <div class='content'>              <ul><li><p>flg：标志位，101，表示上传数据，由物理层传送到网络层，来自采集的信息；102表示下载数据，由决策层传送到网络层，再到物理层的数据，系统将根据这些数据对车辆的下一步对对应参数做出调整；</p></li><li><p>Serial number：序列号，根据数据采集产生的顺序形成的序列号；</p></li><li><p>Time：数据采集时间；</p></li><li><p>total length：首部和数据的总长度；</p></li><li><p>source address：源地址；</p></li><li><p>destination address：目的地址；</p></li><li><p>data：采集的需传输的数据。</p></li></ul>              </div>            </details><h3 id="数据包解封">数据包解封</h3><p>flg=102的数据包来自网络，数据内容是决策层对本车下一步状态的控制，解封时，验证源地址是否为本车网络层，目的地址是否为物理层，再通过total length检查数据完整性，最后取出数据，将数据作于于对应位置。</p><h2 id="网络层">网络层</h2><h3 id="功能">功能</h3><p>网络层实现数据的存储、查询、分析，以及对等层的数据交换，数据交换过程中的加密功能。</p><h3 id="加密协议">加密协议</h3><p>加密协议是用于在数据的传输、交换过程中通过加密技术建立安全通信以保障驾驶安全以及用户信息安全的协议。</p><p>自动驾驶的应用会使得更多的数据将会被使用、传输，因此自动驾驶数据的安全性需要极其关注。需要避免汽车收集数据的恶意篡改导致操作失误，以及用户隐私的泄露（如家的地理位置等等）。所以我们将采用加密协议来对数据进行加密处理，实现隐私数据的安全传输。</p><p>该协议可以对传输的隐私数据进行对称密钥加密，在保证一定的传输速度的同时，提供一定的安全性。</p><h3 id="网络层-网络层之间的数据包格式">网络层-网络层之间的数据包格式</h3><p>为了实现统一性和整体性设计原则，我们把网络层数据包格式和封装的设计与物理层的设计类似，但其传输的数据内容和意义将有变化。如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/clip_image005.jpg" alt="网络层-网络层数据格式示意图"></p><details class="folding-tag" red><summary> 参数说明 </summary>              <div class='content'>              <ul><li><p>flg：这个传输包flg=203，表示这个包属于网络层之间的传输的数据包。</p></li><li><p>Serial number和Time位与原包相同，不发生变化。</p></li><li><p>total length：表示这个包首部和数据的总长度。</p></li><li><p>source address：本车网络层的地址；</p></li><li><p>destination address: 邻车网络层地址；</p></li><li><p>data：数据内容源于对flg=10的数据包解封，但只传输一部分数据，这部分数据包含如下：</p></li></ul><div class="note modern"><p>#车仪表盘显示速度#加速度#刹车状态#方向盘转角#车型号#周围车辆数#车辆1与本车距离#车辆1在本车的方位#…#车辆n与本车距离#车辆n与本车的方位#</p></div>              </div>            </details><h3 id="网络层与决策层之间的数据封装格式">网络层与决策层之间的数据封装格式</h3><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220720215145751.png" alt="网络层-决策层数据格式示意图"></p><details class="folding-tag" red><summary> 参数说明 </summary>              <div class='content'>              <ul><li><p>flg ：flg =201，表示该数据是由网络层传送至决策层；flg=202，表示该数据是由网络层传送至网络层的数据；</p></li><li><p>Serial number ：序列号，根据数据包生成顺序形成的序列号；</p></li><li><p>Time ：数据包生成时间；</p></li><li><p>total length ：首部和数据的总长度；</p></li><li><p>source address ；源地址，本车网络层地址或决策层地址；</p></li><li><p>destination address ：目的地址，本车网络层地址或决策层地址；</p></li><li><p>flg1/flg2：由于网络层向决策层传输数据包含了本车的数据和邻车的数据，而决策层向网络层的下行数据包只包含对本车下一步决策的数据，不再包含邻车的数据，所以接下来这几个数据会由于flg=201或flg=202不同而不同：</p><blockquote><ul><li><p>flg=201时，flg1=1，flg2=1，表示这是个上行数据包，data1、data2都有数据，其中data1是本车的数据，data2是邻车的数据；</p></li><li><p>flg=202时，flg=1，flg2=0，表示这是个下行数据包，仅data1有数据；</p></li></ul></blockquote></li><li><p>Data 1 acquisition time/Data 2 acquisition time：数据获取或生成时间，这里指最开始数据的采集时间，或者针对flg=202时，指的是决策生成时间；</p></li><li><p>Length of the data 1/Length of the data 2：表示data1/data2的数据长度。</p></li></ul>              </div>            </details><h3 id="数据包解封">数据包解封</h3><ol><li><strong>对flg=102的数据包进行解封</strong></li></ol><p>flg=102的数据是从物理层传送到本层网络层的，解封检查源地址与目标地址，源地址应该是本层，目标地址为本层（网络层）的地址，若不满足条件，则丢弃该数据，最后经过total length验证数据完整性，取出数据（data），以便分析时使用。</p><ol start="2"><li><strong>对flg=202的数据包进行解封</strong></li></ol><p>flg=202的数据包是由决策层传输至网络层的，数据包最终作用于物理层，用于将决策层对汽车的下一步状态的控制，解封检查源地址是否为本车决策层地址，目的地址是否为本车网络层地址，再用total length和Length of the data 1验证数据完整性，最后取出数据。</p><ol start="3"><li><strong>对flg=203的数据包进行解封</strong></li></ol><p>flg =203的数据是网络层之间传输的，所以对收到的flg=2的数据包，源地址是临车的网络层地址，目的地址是本车的网络层地址，然后通过total length检查数据完整性，最后取出数据。</p><h2 id="决策层">决策层</h2><h3 id="功能">功能</h3><p>决策层通过网络层提供的数据来对汽车下一步行为的决策，同时实现车与车之间决策信息的交换、计算与冲突解决，最终将关键的决策信息上传于交互层。</p><h3 id="差错控制协议">差错控制协议</h3><p>差错控制协议用于作为自动驾驶系统的网络层中，车辆之间数据交换的可靠传输协议。</p><p>在自动驾驶系统中，提高收集数据的准确性可以保证自动驾驶的安全性。因此数据的准确获取与传输至关重要。在网络层，不同的车辆间将会互相进行数据的交换，而车辆所获取的数据可能存在错误。因此，利用差错控制协议比对交换的数据，来控制可能出现的数据错误而导致的决策层误判。</p><p>在比对数据时，若发现交换的数据不同（误差不可接受），说明可能发生数据的错误，则要求物理层在合理时间范围内重新收集并传输数据，进行再次比对；若超过时间范围，则不向物理层请求重传而使用原始数据。</p><p>例：在网络层数据的初步分析中，会进行数据对比（两辆车的基础数据进行对比），如A车测得B车在东南方向50m，则B车应该检测到A车在自己西北50m，但B车实际传入的数据是A车在西北100m处，这时候网络层通过这个协议判断出原始数据存在较大的误差，这会影响决策层的决策，所以网络层丢弃这份数据，发送指令让物理层重新采集数据，我们称之为差错控制协议。</p><h3 id="决策选择协议">决策选择协议</h3><p>决策选择协议是从多个决策中选出最优决策以做出最优操作行为，并避免与其他自动驾驶车辆产生决策冲突的协议。</p><p>在车道上一般会有多辆车在行驶，如果车辆根据获取的数据采取了相互冲突的行驶行为，就很有可能会发生碰撞等意外情况，造成安全事故。所以通过设计决策选择协议，在多个决策当中选择车辆间互不冲突的决策达到规避事故的目的，并顺利完成行驶。</p><p>决策层根据网络层信息做出多个决策，并预先将每个决策通过算法计算出执行决策后的行车数据。进一步，交换比对车辆间的“决策后行车数据”，判断出执行某一决策后是否会产生车辆间的行驶冲突，会则舍弃该决策，不会则选择该决策。</p><h3 id="决策层数据包">决策层数据包</h3><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220720215704987.png" alt="决策层数据包示意图"></p><details class="folding-tag" red><summary> 参数说明 </summary>              <div class='content'>              <p>flg说明：</p><ul><li><p>flg=301，表示决策层向交互层发送的数据包，这里的数据包内容包含有：汽车当前状态、下一步决策，这个数据包的意义就是将这些参数外显给用户；</p></li><li><p>flg=302，表示交互层向决策层发送的数据包，这个数据包传输的是用户下达的指令，如更改目的地、减速等指令，决策层处理这些指令，并转换格式编码，传输给执行的物理层；</p></li><li><p>flg=303，表示决策层之间传输的数据包，为了确保两辆或多辆车之间的决策不会冲突，说以，车辆之间的决策需要共享，若存在冲突，则根据协议需要更改；</p></li></ul><p>Serial number、Time、total length同上说明；</p>              </div>            </details><h3 id="数据包解封">数据包解封</h3><p>对flg=201，数据进行解封：数据来源于网络层，包含了本车和邻近车量的状态数据，解封时，验证源地址、目的地址、数据长度。</p><h2 id="交互层">交互层</h2><h3 id="功能">功能</h3><p>交互层将决策层的决策信息呈现给用户，并实现不同车辆人员之间的信息交互（包括通话、娱乐等）。</p><p>第四层主要是人机之间的交互，还有就是两辆车上的用户通过交互层进行互动，这些完全可以引用和参考其他协议的实现，如HTTP、XMPP等，因此这里不再赘述。</p><h1>参考资料</h1><ul><li><p>汤珺雅,李莉,刘凌,汪伟,王文明,谢勇波 .  基于全时空数据的驾驶行为模型设计 . [2017]</p></li><li><p>韩双双,王迎春,要婷婷,曹东璞,王飞跃 . 平行智能车:基于CPSS的网联自动驾驶汽车 . [2017]</p></li><li><p>陈海明,崔莉,谢开斌 . 物联网体系结构与实现方法的比较研究 . [2013]</p></li><li><p>魏歌 . 不同物联网架构的分层标准的研究 . [2015]</p></li><li><p>彭赟,刘志雄,刘晓莉,孙云莲,査晓明,饶凌平 . TCP/IP网络体系结构分层研究 . [2014]</p></li><li><p>K. M. Alam, M. Saini and A. E. Saddik  . Toward Social Internet of Vehicles: Concept, Architecture, and Applications .[2015]</p></li><li><p>彭锴 . 网络安全分层评价体系模型设计 . [2016]</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 我电作业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机通信网 </tag>
            
            <tag> 自动驾驶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OFDM技术（2）—— 多载波技术</title>
      <link href="/32a389a4/"/>
      <url>/32a389a4/</url>
      
        <content type="html"><![CDATA[<h1>频分复用</h1><p><strong>频分复用</strong>（FDM,Frequency Division Multiplexing）这个概念我们并不陌生。当用汽车接收广播的时候，每个电台节目使用不同的频率，就可以看成不同的载波。此时如果我们想听 f1 频道，那么经过与 f1 相一致的带通滤波器，这个电台节目就会被接收下来了。这是传统的FDM。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/yFM5L8XZUO3TtD6.png" alt="滤波示意图"></p><p>但是频段资源是有限的，如果要支持成千上百的电台节目是很困难的，因此我们必须提高频段的利用率。</p><h1>OFDM技术</h1><h2 id="单载波与多载波技术">单载波与多载波技术</h2><p>单载波是指在一个固定的频段内只采用一个载波的调制技术，上面举的例子就是单载波的传输方案。单载波存在很多问题，除了频谱利用率低，还有之前所说的<a href="http://asa-world.github.io/2022/02/25/OFDM%E6%8A%80%E6%9C%AF%EF%BC%881%EF%BC%89%E2%80%94%E2%80%94%E7%A0%81%E5%85%83%E4%B8%8E%E6%AF%94%E7%89%B9%E8%A7%A3%E6%9E%90/">码间串扰</a> 、回响、脉冲干扰、振幅不平衡、群延时响应等。</p><p>就码间串扰而言，单载波方法的码元速率相对较高，通常1MS/s～30MS/s，因此码元持续时间（符号速率的倒数）为1µs或更短。然而地面传输路径的反射波延迟很容易位于100µs～250µs范围内（大约70km），将导致相邻码元甚至更远距离码元的码间串扰。</p><p>显然为减少干扰：</p><blockquote><ul><li>尽量延长符号持续时间；</li><li>可以在符号间插入空白，叫做防护间隔（guard intervals）；</li><li>同时在接收端，通过采用误码保护的方法恢复和重建信息。</li></ul></blockquote><hr><p>如果信息不通过单一载波进行传输，而是分散到多个载波，最多成千个副载波，那么如果某个载波或载波带受到衰落影响，其余<strong>子载波不会受影响</strong>。同时，接收端可从相对不分散的载波中恢复出足够的无误码信息，并利用采取的误码保护措施来<strong>重建无误码的输出数据流</strong>。另外，如果采用成千的子载波使得符号速率将被降低，<strong>符号持续时间也将相应延长</strong>几千倍，最大到1ms。</p><p>这就是多载波传输的优势所在，那么我们的<strong>正交频分复用技术</strong>（OFDM,Orthogonal Frequency Division Multiplexing）是目前实现复杂度最低、应用最广的一种多载波传输方案。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/4cffeced1eafa507abf3b05c679cab95.png" alt="多载波传输"></p><h2 id="三角函数的正交原理">三角函数的正交原理</h2><p>三角函数的正交原理是OFDM技术的最基本的原理，它是指不同频率的正弦波是正交的。下面我们来证明这一点。</p><p>假设有两个正弦波：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>1</mn></msub><mi>t</mi></mrow><annotation encoding="application/x-tex">\sin 2\pi k_{1}  t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span></span></span></span> 、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>2</mn></msub><mi>t</mi></mrow><annotation encoding="application/x-tex">\sin 2\pi k_{2} t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span></span></span></span>，让我们来算一下二者在[0,1]区间内的积分 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><msub><mi>a</mi><mi>k</mi></msub><mi>sin</mi><mo>⁡</mo><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>1</mn></msub><mi>t</mi><mo>⋅</mo><mi>sin</mi><mo>⁡</mo><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>2</mn></msub><mi>t</mi><mi mathvariant="normal">d</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\int_{0}^{1} a_{k}\sin 2\pi k_{1}  t \cdot  \sin 2\pi k_{2} t \mathrm{d}t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3648em;vertical-align:-0.3558em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.009em;"><span style="top:-2.3442em;margin-left:-0.1945em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2579em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3558em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mord mathrm">d</span><span class="mord mathnormal">t</span></span></span></span>。</p><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub><mo>=</mo><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">k_{1} = k_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>时，</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><msub><mi>a</mi><mi>k</mi></msub><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>1</mn></msub><mi>t</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>2</mn></msub><mi>t</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>a</mi><mi>k</mi></msub><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><msup><mrow><mi>sin</mi><mo>⁡</mo></mrow><mn>2</mn></msup><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>1</mn></msub><mi>t</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>a</mi><mi>k</mi></msub><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mfrac><mrow><mn>1</mn><mo>−</mo><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>4</mn><mi>π</mi><msub><mi>k</mi><mn>1</mn></msub><mi>t</mi><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac><mi>d</mi><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><msub><mi>a</mi><mi>k</mi></msub><mn>2</mn></mfrac></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{equation}\begin{split}   \int_{0}^{1}a_{k} \sin( 2\pi k_{1}t ) \cdot \sin( 2\pi k_{2}t){d}t   &amp;= a_{k}\int_{0}^{1} \sin^{2} ( 2\pi k_{1}  t ){d}t\\      &amp;=a_{k}\int_{0}^{1} \frac{1-\cos(4\pi k_{1}t)}{2}{d}t\\      &amp;=\frac{a_{k}}{2}\end{split}\end{equation}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.6455em;vertical-align:-3.5727em;"></span><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.0727em;"><span style="top:-6.0727em;"><span class="pstrut" style="height:6.0727em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.0727em;"><span style="top:-6.0727em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.564em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">d</span></span><span class="mord mathnormal">t</span></span></span><span style="top:-3.2968em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"></span></span><span style="top:-0.9773em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5727em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.0727em;"><span style="top:-6.0727em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.564em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">sin</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8719em;"><span style="top:-3.1208em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">d</span></span><span class="mord mathnormal">t</span></span></span><span style="top:-3.2968em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.564em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">d</span></span><span class="mord mathnormal">t</span></span></span><span style="top:-0.9773em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5727em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5727em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.0727em;"><span style="top:-6.0727em;"><span class="pstrut" style="height:6.0727em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5727em;"><span></span></span></span></span></span></span></span></span></p><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub><mo mathvariant="normal">≠</mo><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">k_{1} \ne  k_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>时，</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd class ="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><msub><mi>a</mi><mi>k</mi></msub><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>1</mn></msub><mi>t</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>2</mn></msub><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>t</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><mfrac><msub><mi>a</mi><mi>k</mi></msub><mn>2</mn></mfrac><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mo stretchy="false">[</mo><mi>cos</mi><mo>⁡</mo><mtext>（</mtext><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>1</mn></msub><mi>t</mi><mo>+</mo><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>2</mn></msub><mi>t</mi><mtext>）</mtext><mo>−</mo><mi>cos</mi><mo>⁡</mo><mtext>（</mtext><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>1</mn></msub><mi>t</mi><mo>−</mo><mn>2</mn><mi>π</mi><msub><mi>k</mi><mn>2</mn></msub><mi>t</mi><mtext>）</mtext><mo stretchy="false">]</mo><mi mathvariant="normal">d</mi><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><mtext>设</mtext><msub><mi>k</mi><mn>1</mn></msub><mo>+</mo><msub><mi>k</mi><mn>2</mn></msub><mo>=</mo><mi>a</mi><mo separator="true">,</mo><msub><mi>k</mi><mn>1</mn></msub><mo>−</mo><msub><mi>k</mi><mn>2</mn></msub><mo>=</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><mfrac><msub><mi>a</mi><mi>k</mi></msub><mn>2</mn></mfrac><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mo stretchy="false">[</mo><mi>cos</mi><mo>⁡</mo><mtext>（</mtext><mn>2</mn><mi>π</mi><mi>a</mi><mi>t</mi><mtext>）</mtext><mo>−</mo><mi>cos</mi><mo>⁡</mo><mtext>（</mtext><mn>2</mn><mi>π</mi><mi>b</mi><mi>t</mi><mtext>）</mtext><mo stretchy="false">]</mo><mi mathvariant="normal">d</mi><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd class ="mtr-glue"></mtd><mtd class ="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{equation}\begin{split} \int_{0}^{1}a_{k} \sin( 2\pi k_{1}  t )\cdot  \sin( 2\pi k_{2} t) \mathrm{d}t &amp;= - \frac{a_{k}}{2}\int_{0}^{1} [\cos（2\pi k_{1}t+2\pi k_{2}t）- \cos（2\pi k_{1}t-2\pi k_{2}t）] \mathrm{d}t\\&amp;(设k_{1}+k_{2}=a,k_{1}-k_{2}=b)\\&amp;=- \frac{a_{k}}{2}\int_{0}^{1} [\cos（2\pi at）- \cos（2\pi   bt）] \mathrm{d}t\\&amp;= 0 \end{split}\end{equation}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.5519em;vertical-align:-4.026em;"></span><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.526em;"><span style="top:-6.526em;"><span class="pstrut" style="height:6.526em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.526em;"><span style="top:-6.526em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.564em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">t</span></span></span><span style="top:-4.474em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"></span></span><span style="top:-0.1981em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.026em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.526em;"><span style="top:-6.526em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.564em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">（</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">（</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">）</span><span class="mclose">]</span><span class="mord mathrm">d</span><span class="mord mathnormal">t</span></span></span><span style="top:-4.474em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mord cjk_fallback">设</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.564em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">（</span><span class="mord">2</span><span class="mord mathnormal">πa</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">（</span><span class="mord">2</span><span class="mord mathnormal">πb</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">）</span><span class="mclose">]</span><span class="mord mathrm">d</span><span class="mord mathnormal">t</span></span></span><span style="top:-0.1981em;"><span class="pstrut" style="height:3.564em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.026em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.026em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.526em;"><span style="top:-6.526em;"><span class="pstrut" style="height:6.526em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.026em;"><span></span></span></span></span></span></span></span></span></p><p>这表明这一系列不同频率的正弦函数是正交的。同理，余弦函数同样有此性质。这种数学上的性质，对于通信而言异常重要。</p><p>因为这些正弦函数就是通信中所说的子载波，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">a_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>就是我们要发送的信息，也就是一个码元，经过基带调制后，实际发送的信号为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>k</mi></msub><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><mi>k</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_{k}\sin(2πkt)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03148em;">πk</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span>。</p><h2 id="ofdm的调制与解调基本原理">OFDM的调制与解调基本原理</h2><p>用原始要发送的信号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">a_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">b_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>去调制相互正交的子载波序列 { <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo><mn>2</mn><mi>π</mi><mi>k</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\sin2πkt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03148em;">πk</span><span class="mord mathnormal">t</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo><mn>2</mn><mi>π</mi><mi>k</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\sin2πkt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03148em;">πk</span><span class="mord mathnormal">t</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo><mn>3</mn><mi>π</mi><mi>k</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\sin3πkt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.03148em;">πk</span><span class="mord mathnormal">t</span></span></span></span> } 和 { <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>cos</mi><mo>⁡</mo><mn>2</mn><mi>π</mi><mi>k</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\cos2πkt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03148em;">πk</span><span class="mord mathnormal">t</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>cos</mi><mo>⁡</mo><mn>2</mn><mi>π</mi><mi>k</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\cos2πkt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03148em;">πk</span><span class="mord mathnormal">t</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>cos</mi><mo>⁡</mo><mn>3</mn><mi>π</mi><mi>k</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\cos3πkt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.03148em;">πk</span><span class="mord mathnormal">t</span></span></span></span> } ，然后进行累加，得到 s(t) ，这个 s(t) 是OFDM基带信号，是一个实信号，又由于基带信号的频率太低，不满足远距离传输的要求，那么经过射频调制后，就满足了。然后再用天线发射出去就可以了。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/f5e3b71bad4cc7651dd1928a8ca83f15.png" alt="OFDM的调制与解调"></p><p>解调所用的子载波与调制用的子载波同频同相，这是根据我们上面的推导（1）得出的，不管各子载波怎么杂糅，我们只要用哪一个子载波调制就用哪一个子载波解调，这样就可以得到我们想要的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">a_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的信息。根据推导（2），子载波不相同的在同一码元周期内就会被积为0，因此毫无影响，这就是正交的好处。</p><div class="note green icon modern"><p>那么为什么在调制端既有 sin 又有 cos 呢？请戳下一篇博客——《信号调制方法》。</p></div><h1>参考资料</h1><ul><li><p>李锐博恩. <a href="https://blog.csdn.net/reborn_lee/article/details/81024133">理解原理图</a>. [2018-07-13]</p></li><li><p>ZhangP.H. <a href="https://blog.csdn.net/weixin_40106401/article/details/106885575?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-1.pc_relevant_paycolumn_v3&amp;spm=1001.2101.3001.4242.2&amp;utm_relevant_index=4">理解OFDM技术原理</a>. [2020-06-21]</p></li><li><p>张文军. OFDM技术. [2006-2007]</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 5G </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 5G </tag>
            
            <tag> 大唐杯 </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RS232接口分析</title>
      <link href="/9ede2b4c/"/>
      <url>/9ede2b4c/</url>
      
        <content type="html"><![CDATA[<h1>RS-232接口概述</h1><p>RS-232标准接口（又称EIA RS-232）是常用的串行通信接口标准之一，它是由美国电子工业协会(EIA)联合贝尔系统公司、调制解调器厂家及计算机终端生产厂家于1970年共同制定。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/vy98H4nJrTYUBFL.jpg" alt="RS-232串口线图"></p><blockquote><p>主要特点:</p><ul><li><strong>低速</strong>：1200bps,2400bps….最大传输速率为115.2kbps；</li><li><strong>短距离</strong>：最大传输距离为12m，一般不超过3m；</li><li><strong>结构简单</strong>：最简方式只要使用3根普通电线即可。</li></ul></blockquote><p>它是最基本的I/O接口，常用在计算机、嵌入式系统、单片机等产品中。</p><h1>各针脚功能</h1><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/8eiytUAnHwmJ6Wd.png" alt="RS-232针脚功能图"></p><ul><li>针脚1负责<strong>载波检测</strong>（DCD, Data Carrier Detect），即当本地的<a href="#DCE%E4%B8%8EDTE">DCE</a>收到由通信链路另一端的DCE送来的载波信号时，使DCD变为有效(高电平)，表示已检测出远端的载波信号，要求<a href="#DCE%E4%B8%8EDTE">DTE</a>准备接收。</li><li>针脚2负责<strong>接受数据</strong>（RxD, Receive Data）；</li><li>针脚3负责<strong>发送数据</strong>（TxD, Transmit Data ）；</li><li>针脚4负责<strong>数据终端就绪</strong>（DTR, Data Terminal Ready）；</li><li>针脚5负责<strong>接地</strong>（GND, Ground）；</li><li>针脚6负责<strong>数据准备就绪</strong>（DSR, Data Set Ready），当DCE启动时，在经过自身检测后，用DSR来声明已经准备就绪。因此它既是DCE的输出，同时也是DTE的输入，该信号低电平有效。</li><li>针脚7负责<strong>发送请求</strong>（RTS, Require To Send），为输出信号，用于指示本设备准备好可接收数据，低电平有效，低电平说明本设备可以接收数据。</li><li>针脚8负责<strong>发送允许</strong>（CTS, Clear To Send），为输入信号，用于判断是否可以向对方发送数据，低电平有效，低电平说明本设备可以向对方发送数据。</li><li>针脚9负责<strong>振铃指示</strong>（RI, Ring Indicator）</li></ul><h1>规程特性</h1><ol><li><p>双方通信前，需确认对方是否准备好</p><ul><li>DTR、DSR：=1分别标明DTE和DCE准备好</li></ul></li><li><p>DCE随时可向DTE发送数据</p></li><li><p>DTE要发送数据时，需要经过以下步骤</p><ul><li>RTS = 1：DTE向DCE请求发送数据</li></ul><ul><li>CTS = 1：DCE告诉DTE可以发送数据</li><li>DTE发送数据</li></ul></li></ol><p>双方通信前，需确认对方是否准备好，此时不一定有数据传送进来，只是提前沟通各自的状态。如下图。</p><p><img src="https://s2.loli.net/2022/03/13/RtQYBJS9AMEvbqg.png" alt="准备阶段"></p><p>下图为二者发送数据时通过请求要求对方做好准备。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/l8IMgQf2FBcnWSk.png" alt="请求阶段"></p><p>下图为发送阶段示意图。</p><p><img src="https://s2.loli.net/2022/03/13/FYiRIuyMlTV5CHZ.png" alt="发送阶段"></p><h1>注意</h1><p>需要注意的是绝大多数接口是有方向的，因此要实现DTE间和DCE间的连接需要改动电缆中的线路才能实现。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/MvNscHjugUkpJW9.png" alt="接口连接"></p><p>另外是DCD、RI是 <span class="bubble-content">拨号</span><span class="bubble-notation"><span class="bubble-item" style="background-color: #DA70D6;"> 20世纪90年代，刚有互联网的时候，实现上网最为普遍的一种方式是拨号上网。只要用户拥有一台个人电脑、一个外置或内置的调制解调器（Modem）和一根电话线，再向本地ISP供应商申请自己的账号，或购买上网卡，拥有自己的用户名和密码后，然后通过拨打ISP的接入号连接到Internet上。</span></span> 调制解调器专用信号。</p><h1>细嗦</h1><h2 id="dce与dte">DCE与DTE</h2><p>数据通信设备（Data Circuit-termination Equipment,DCE）：它提供了到网络的一条物理连接来转发业务量，并且提供了一个用于同步DCE设备和DTE设备之间数据传输的时钟信号。调制解调器（MODEM）和某些交换机串口都是DCE设备的例子。</p><p>数据终端设备（Data Terminal Equipment,DTE）：它能够作为信源、信宿或同时为二者。数据终端设备通过数据通信设备（例如，调制解调器）连接到一个数据网络上，并且通常使用数据通信设备产生的时钟信号。数据终端设备包括计算机、串口打印机等设备。</p><p>因此，从一方面看，DCE负责在传输介质或网络上收发比特；在另一方面看，DCE必须与DTE相互交互。</p>]]></content>
      
      
      <categories>
          
          <category> 刨根问底 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机通信网 </tag>
            
            <tag> 微嵌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OFDM技术（1）—— 码元与比特的概念</title>
      <link href="/2016264a/"/>
      <url>/2016264a/</url>
      
        <content type="html"><![CDATA[<p><em>最近无论是学5G技术还是计通网课程都有提到码元这一概念，于是就做了点研究。</em></p><h1>码元基本概念</h1><p><strong>码元</strong>的官方解释为：在数字通信中常常用时间间隔相同的符号来表示一个二进制数字，这样的时间间隔内的信号称为（二进制）码元。</p><p>通俗来讲，一个脉冲信号所携带的信息就是一个码元，一个脉冲信号（码元）可以携带1bit、2bit或4bit等的数据，当由0或1组成的比特流转换成模拟信号，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>A</mi><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><mi>f</mi><mi>t</mi><mo>+</mo><mi>φ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s(t) = A\cos (2\pi f t + \varphi  )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mclose">)</span></span></span></span> 时，我们可以利用正弦波的幅度、频率或相位将比特流信息搬移到信道频带上。</p><p><img src="https://s2.loli.net/2022/02/25/GgiBv4kItS68Hdw.png" alt="可调信号类型"></p><p>上图的三种信号中，一个码元只携带1bit数据，非0即1，此时为二进制调制，离散取值数量为2，且<strong>波特率</strong>等于<strong>比特率</strong>。<br>其中，波特率又称码元率，是指每秒传输码元的数目，单位波特(Band)；比特率为每秒传输的比特数。</p><p>由此可得波特率和比特率的关系：<br>若码元的离散取值数目是L，波特率是B，比特率为C，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mi>B</mi><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>L</mi></mrow><annotation encoding="application/x-tex">C = B\log_{2}{L}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9386em;vertical-align:-0.2441em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">L</span></span></span></span></span> 。</p><p>当一个码元携带多bit数据时，可以用多进制调制或联合调制（即调节多个参数）。</p><h1>码间串扰</h1><h2 id="什么是码间串扰">什么是码间串扰</h2><p>码间串扰指信号的前一个码元产生拖尾，使得其后端部分与后一码元杂糅，从而影响抽样判决的准确性。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/okxYgLrfb9aX8WZ.jpg" alt="码间串扰示意图"></p><p>那么为什么会产生拖尾呢？有两个常见的原因：带限信道和多径效应。</p><h2 id="带限信道引起的码间串扰">带限信道引起的码间串扰</h2><p>我们以矩形脉冲信号为例。</p><p>在信号脉冲成型时双极性矩形波很常见，生成理想的矩形波，需要使用矩形脉冲信号。 但是，矩形脉冲信号在频域上是sinc函数覆盖整个频域轴，即带宽B 无限大。但是实际可供信号通过的信道带宽是有限的，因此会使信号频域带减小，相应的时域上信号就会变宽,从而产生拖尾。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/P8yzutkZ37GdYQX.gif" alt="码间串扰示意图"></p><h2 id="多径效应引起的码间串扰">多径效应引起的码间串扰</h2><p>多径效应（multipath effect）：指电波传播除了直射波和地面反射波之外，在传播过程中还会有各种障碍物所引起的散射波，这些波经不同路径传播后，各分量场到达接收端时间不同，第一个多径分量到达的时刻和最后一个多径分量到达的时刻，这之间存在一个时间差。</p><p>当这个时间差超过了一个码元的宽度之后，就意味着，上一个码元的一部分多径分量，在这个码元本应该传输完毕的时候，还没有到达接收点，而是混在了下一个码元的多径分量中到达的接收点，从而对下一个码元产生了干扰——叠加的时候不仅有自己的分量，还有别人的分量。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220719213053825.png" alt="image-20220719213053825"></p><h2 id="码间串扰的解决">码间串扰的解决</h2><p>码间干扰是数字通信系统中除噪声干扰之外最主要的干扰，它与加性的噪声干扰不同，是一种乘性的干扰。</p><div class="note blue icon modern"><p>那么如何消除码间干扰呢，这就要请到这一系列的主角了——<strong>OFDM技术</strong>，下一篇博客见。</p></div><h1>参考资料</h1><ul><li>遥遥. <a href="https://www.zhihu.com/question/280404107">怎样形象理解码元？</a>. [2020-01-06]</li><li>青铜葵花IC. <a href="https://blog.csdn.net/ILoveTheWorldSo/article/details/99673715?spm=1001.2101.3001.6650.11&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-11.pc_relevant_antiscanv2&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-11.pc_relevant_antiscanv2&amp;utm_relevant_index=14">什么是码间串扰</a>. [ 2019-08-16]</li><li>凝望，划过星空.scut. <a href="https://blog.csdn.net/weixin_44586473/article/details/104372110?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0.pc_relevant_default&amp;spm=1001.2101.3001.4242.1&amp;utm_relevant_index=3">深入理解奈奎斯特第一准则与码间串扰</a>. [2020-02-18]</li></ul>]]></content>
      
      
      <categories>
          
          <category> 5G </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 5G </tag>
            
            <tag> 大唐杯 </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>物理层概述</title>
      <link href="/f55d2ac4/"/>
      <url>/f55d2ac4/</url>
      
        <content type="html"><![CDATA[<p>5G帧结构5G帧结构是时间维度上对资源进行划分和使用，博主理解就是对时域的一个量度以便于量化。具体相关概念可以戳 这篇博客 中的“子载波相关概念”。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/DYj3RuCtdgvAK4W.png" alt="5G帧结构"></p><p>在5G系统中，子载波配置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span></span></span></span>一共有5中取值，对应的子载波间隔为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>μ</mi></msup><mo>×</mo><mn>15</mn></mrow><annotation encoding="application/x-tex">2^{\mu } \times 15</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">μ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">15</span></span></span></span>（kHz），对于常规循环前缀，每个时隙由14个OFDM（正交频分复用）符号构成；对于扩展循环前缀，每个时隙由12个符号构成，且仅有60kHz子载波（即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span></span></span></span> = 2）时可以配置扩展循环前缀。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/aKIcYHbTiDZMg4V.jpg" alt="三者关系"></p>]]></content>
      
      
      <categories>
          
          <category> 5G </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 5G </tag>
            
            <tag> 大唐杯 </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Twikoo部署心得</title>
      <link href="/8289185f/"/>
      <url>/8289185f/</url>
      
        <content type="html"><![CDATA[<p>评论系统比较目前评论系统有很多，各有各的特点，最常见的如valine、gitalk、Livere(来必力)、twikoo等。</p><ul><li>valine简洁、高速，但提醒功能不完善；</li><li>gitalk只支持github登录，国内API不稳定；</li><li>Livere来自韩国，管理功能强大，支持很多社交账号登录，但是网速较慢；</li><li>twikoo比较简洁，可免费使用，支持邮箱甚至微信提醒，但需实名认证。</li></ul><p>我之前用过一段时间的valine,之所以我选择使用twikoo，因为我比较喜欢twikoo的自动补全邮箱和头像的功能，给评论者带来很多方便。</p><h1>twikoo部署</h1><p>twikoo是基于腾讯云开发的一个简洁、安全、免费的静态博客评论系统。详细部署细节可参考<a href="https://twikoo.js.org/quick-start.html#%E4%BA%91%E5%87%BD%E6%95%B0%E9%83%A8%E7%BD%B2">官方文档</a> 中的“手动部署”。</p><h1>部署心得</h1><p>本篇文章主要讲述我在部署twikoo的一些技巧。</p><h2 id="免费资源入口-已失效">免费资源入口（已失效）</h2><p>twikoo宣称自己是一个永久免费的系统，话虽如此，其官方文档所指引的腾讯云开发CloudBase无论是包年包月套餐还是按量计费资源包均无免费体验内容，难道twikoo的“免费”要打引号，难道白嫖党只能停步于此了吗？</p><p>经过博主一个小时的苦苦寻找，终于找到了云开发CloudBase的免费体验版，快点<a href="https://cloud.tencent.com/act/free">这里</a> ，找到云开发CloudBase，点击0元试用即可！</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/KBUAJLEpoYI54vd.jpg" alt="找到云开发CloudBase，点击“0元试用”"></p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/UVSrhavIelLj4x2.jpg" alt="点击“新建环境”"></p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/efvbRH9IguMZ74P.jpg" alt="选择空模板，点击“下一步”"></p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/o5UOmfXTYxjptAJ.jpg" alt="依次选择“上海”、“包年包月”、“免费版”，“环境名称”不限，点击“下一步”"></p><p><img src="https://s2.loli.net/2022/02/21/uUgbVeqkYxhjIOZ.jpg" alt="点击“立即购买即可”"></p><p>其他步骤请参考<a href="https://twikoo.js.org/quick-start.html#%E4%BA%91%E5%87%BD%E6%95%B0%E9%83%A8%E7%BD%B2">官方文档</a> 中的“手动部署”。</p><h2 id="正确添加域名">正确添加域名</h2><p>博主添加域名时输入 “<a href="https://asa-world.github.io/">https://asa-world.github.io/</a> ” 后发现报错。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/QgA3WspS5G8oVuB.png" alt="报错详情"></p><p>一开始以为需要再申请一个万维网的域名，转念一想这也太麻烦了吧，进入官方群询问大佬后发现原来真的只是“格式错误”！</p><p>正确做法为输入“<a href="http://asa-world.github.io">asa-world.github.io</a>”即可。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/O6hlsJx3gLrPYob.png" alt="正确输入域名"></p><p><del>被自己蠢到</del></p><h2 id="twikoo美化">twikoo美化</h2><p>原始的twikoo评论界面太过简约，而且评论框有亿点小，于是博主开始美化twikoo。</p><p>前端知识入门后，美化不是很难，博主使用的是外部样式表引入的方式。只需要在.\themes\butterfly\source\css目录下新建css文件，输入下面的代码可实现博主自用的美化方案：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><span class="line">2</span><span class="line">3</span><span class="line">4</span><span class="line">5</span><span class="line">6</span><span class="line">7</span><span class="line">8</span><span class="line">9</span><span class="line">10</span><span class="line">11</span><span class="line">12</span><span class="line">13</span><span class="line">14</span><span class="line">15</span><span class="line">16</span><span class="line">17</span><span class="line">18</span><span class="line">19</span><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Twikoo评论框高度设置 */</span></span><span class="line"><span class="selector-class">.el-textarea__inner</span> &#123;</span><span class="line">    <span class="attribute">min-height</span>: <span class="number">210px</span> <span class="meta">!important</span>;</span><span class="line">  &#125;</span><span class="line">  </span><span class="line"><span class="comment">/* Twikoo评论框添加背景图*/</span></span><span class="line"><span class="selector-class">.el-textarea</span> &#123;</span><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">https://s2.loli.net/2022/02/06/gy6AcWI4MTjrNVx.gif</span>);</span><span class="line"><span class="attribute">background-size</span>: contain;</span><span class="line"><span class="attribute">background-repeat</span>: no-repeat;</span><span class="line"><span class="attribute">background-position</span>: right;</span><span class="line"><span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>);</span><span class="line"><span class="attribute">resize</span>: vertical</span><span class="line">&#125;</span><span class="line"></span><span class="line"><span class="comment">/* Twikoo评论框背景图实现点击下移*/</span></span><span class="line"><span class="selector-class">.el-textarea</span><span class="selector-pseudo">:focus</span>-within &#123;</span><span class="line"><span class="attribute">background-position</span>-y: <span class="number">800px</span>;</span><span class="line"><span class="attribute">transition</span>: all <span class="number">0.2s</span> ease-in-out <span class="number">0s</span>;</span><span class="line">&#125;</span></pre></td></tr></table></figure><p>保存后，在主题文件中引入即可。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/dC7fVBLP8JsUYHK.png" alt="引入外部样式表"></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5G基站的开通与调测</title>
      <link href="/51e5371d/"/>
      <url>/51e5371d/</url>
      
        <content type="html"><![CDATA[<h1>简述</h1><p>让我们先来理清楚小区的有关概念。 扇区是一个基站下单个天线覆盖的地理区域。可以认为一个天线对应一个扇区，使用单个全向天线的基站只有一个扇区，在一般的宏基站系统中，定向天线的使用最为普遍，使用定向天线的基站一般有三个扇区。每个扇区使用一个或多个无线载波完成无线覆盖。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/GEXHilB8x7k5omT.jpg" alt="扇区示意图"></p><p>可以基于载频、扰码的不同在一个扇区下定义多个小区。<strong>小区</strong>是提供终端接入的最小单位，<strong>本地小区</strong>指小区具体实现的物理资源集合（如传输资源、基带资源、射频资源和时钟资源等），<strong>逻辑小区</strong>是小区在无线资源管理的角度的另一个名称，它的建立前提是本地小区正常建立。三者一一对应。</p><p>5G系统开通调测的目标是完成逻辑小区的建立。</p><h1>5G基站系统配置</h1><p>SA模式下，5G基站系统通常由EMB6216（BBU）+AU构成。</p><p>对于电信和联通的5G系统配置主要分为以下几种</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/nQjXoIGt4CqYN7g.jpg" alt="S111配置图"></p><ol><li><p>3.5G<a href="#%E5%8D%95%E6%A8%A1%E5%85%89%E7%BA%A4%E4%B8%8E%E5%A4%9A%E6%A8%A1%E5%85%89%E7%BA%A4">单模</a>100M配置(S111)</p><ul><li>每个AAU建立1个100M NR小区（即一个扇区对应一个小区）；</li></ul><ul><li>插1块HBPOF基带板，支持3个100M 64通道NR小区；（关于“通道”的概念可点击<a href="https://xueqiu.com/7282046183/160061589">这里</a> 文章很清晰明白，推荐。）</li><li>支持的64 TR AAU包括：TDAU5164N78-a、TDAU5364N78。</li></ul></li><li><p>3.5G单模100M配置（S111111）<img src="https://s2.loli.net/2022/02/12/qbrYxXfkgtPw48S.jpg" alt="S111111配置图"></p><ul><li>每个AAU建立1个100M NR小区；</li></ul><ul><li>插2块HBPOF <span class="bubble-content">基带板</span><span class="bubble-notation"><span class="bubble-item" style="background-color: #BDB76B;">基带板主要实现调制信号及解调制信号的处理，如加密解密、电路控制等功能。</span></span>，每块支持3个100M 64通道NR小区。</li></ul></li><li><p>3.5G单模200M配置(S222)</p><ul><li>每个AAU建立2个100M NR小区（即一个扇区对应两个小区）；</li></ul><ul><li>插2块 HBPOF基带板，支持6个100M 64通道NR小区；</li><li>具体连接方式如图，槽位1&amp;5、槽位6&amp;7可以再接2组AAU,最大共支持9个AAU接入；</li><li>针对每个AAU,要支持2*100M的载波聚合，其中AAU1和AAU2是板内载波聚合，AAU3是板间载波聚合。</li></ul></li></ol><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/ZJ492Lb3TkGum7X.jpg" alt="S222配置图"></p><p>对于中国移动，其5G系统配置通常为2.6G的S111配置。</p><h1>基站开通调测流程</h1><p>开通准备 -&gt; 开通调测 -&gt; 联调测试</p><blockquote><p>开通准备<br>软硬件准备、上电前检查、连接基站准备</p><p>开通调测<br>配置文件制作、基站版本升级、配置文件下载、开通状态查询</p><p>联调测试<br>NG联调、故障排查、业务验证</p></blockquote><h1>细嗦</h1><h2 id="单模光纤与多模光纤">单模光纤与多模光纤</h2><p>按光在光纤中的传输模式分为：单模光纤和多模光纤。单模光纤：只能传输一种模式的光；多模光纤：可以传输多种模式的光。<br>二者的主要区别有：</p><ul><li>单模光纤采用固体激光器做光源；多模光纤则采用发光二极管做光源；</li><li>单模光纤传输频带宽、传输距离长，但因其需要激光源，成本较高；而多模光纤传输速度低、距离短，但其成本比较低；</li><li>单模光纤芯径和色散小，仅允许一种模式传输；多模光纤芯径和色散大，允许上百种模式传输。</li></ul><h1>参考资料</h1><ul><li>者行金. <a href="https://blog.csdn.net/u010378992/article/details/107752084?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_paycolumn_v3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_paycolumn_v3&amp;utm_relevant_index=2">5G学习之路——认识基站、扇区、小区</a>. [2020-08-02]</li><li>飞畅科技. <a href="http://m.elecfans.com/article/1462054.html">单模光纤和多模光纤是什么，有什么区别</a>. [2021-01-13]</li></ul>]]></content>
      
      
      <categories>
          
          <category> 5G </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 5G </tag>
            
            <tag> 大唐杯 </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>理工男也会写诗，想不到吧</title>
      <link href="/de5b8c0f/"/>
      <url>/de5b8c0f/</url>
      
        <content type="html"><![CDATA[<p><em>今天整理文件的时候突然翻到大一刚入学写的诗歌，当时好像是参加什么诗歌比赛，以银杏为主题（因为电子科大的银杏很有名），本人还是对诗歌比较感兴趣的，诗歌用极短的文字就能描绘一幅幅动人场景，每一篇诗歌就仿佛一部电影，或感人至深，或发人深省。 这首散文诗自我感觉良好hhhhhh，在文末我会给出我的写作思路，当然如果你能认真读一下，其中的故事和逻辑也很容易理解。</em></p><center><blockquote><p><strong>梦</strong></p><p>裹挟秋光，<br>那个女孩抬头仰望，<br>文杏鎏金，树影婆娑，<br>虽初入成电，<br>一切竟如此熟悉。</p><p>还记得小时候，<br>无数个甜甜的睡梦中，<br>漫天黄蝶触风飘摇，<br>岑寂一切繁华与喧嚣，<br>柔软所有烦恼与苦笑。<br>女孩和男孩追逐打闹，<br>乱了头发，<br>也乱了心梢。</p><p>梦<br>也在男孩心里逐渐扎根。</p><p>回望，<br>树依旧缄默，<br>享受着书墨芬芳，<br>守望着长乐未央，<br>看尽人间岁月长。<br>历尽千帆，<br>成电是他的心之所向，<br>也是素履以往。</p><p>那个女孩熟悉而陌生，<br>从双辫到马尾，<br>从活泼到文静，<br>蓦然相视，笑靥浅浅，<br>她伸手拈来一枚银杏叶，<br>道了声：<br>岁月静好，别来无恙。</p></blockquote></center><span class='nota' data-nota='勤奋的男孩和女孩都考入了心仪的大学——电子科大，他们在银杏树下邂逅，虽初次见面，但有种莫名的熟悉。这是因为在童年的梦中他们已是最好的玩伴。“梦”一语双关，既是小时候的梦，也是两人的人生梦想。（不过反复读来，感觉诗中缺乏两人素未谋面的描写，有种两人小时候既在梦中相识，在现实中也是好友的感觉，欢迎斧正）'>写作思路</span><style>#article-container > center > blockquote {font-size:1.2em;}</style>]]></content>
      
      
      <categories>
          
          <category> 我电作业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于苹果电脑发展的案例分析</title>
      <link href="/dc8e6bf2/"/>
      <url>/dc8e6bf2/</url>
      
        <content type="html"><![CDATA[<h1>摘要</h1><p><strong>本文简要分析苹果电脑的发展，并从中探寻其成功的原因。</strong> 从乔布斯决心要搞个人电脑开始，到一手创办苹果公司，看似势如破竹，但也不乏心酸和坎坷，比如第一款提供图形化用户接口（GUI）的商用电脑Lisa电脑因其兼容性差，价格昂贵而夭折。 但是苹果电脑在技术和外形设计方面的创新能力以及可靠的产品品质，是很多人无法实现的。在30多年的发展和进化中，苹果重新定义了技术创新的内涵，并在结合内、外部研发力量的同时，将技术创新与设计创新、营销创新、模式创新等创新方式有效结合起来，确保技术研发的高效性。</p><p>与此同时，苹果电脑继承了苹果公司“酷”的风格，并重新定义“酷”，引领“酷”的潮流。苹果公司利用设计增加独一无二的人类感觉，让技术产品更通人性，让人们面对的不再是惹人生气的冰冷机器，而是生动有趣的“小精灵”。这种<strong>以人为本</strong>的设计理念是苹果电脑一直处于不败之地的重要原因。</p><h1>苹果电脑的发展分析</h1><h2 id="专注一点-厚积薄发-苹果公司的创立">专注一点，厚积薄发——苹果公司的创立</h2><p>1975年初，美国著名的科技杂志——《大众电子学》刊登一条醒目的新闻：世界上第一台被称为“<strong>牛郎星</strong>”的个人计算机诞生了。这就对于科技迷来说是件轰动的大事，20岁的史蒂夫·乔布斯（Steve Jobs）心中的热情也被点燃。</p><p>乔布斯天生喜欢挑战，个性叛逆以及固执促使他很快着手研究个人计算机事业。</p><p>但是，研制计算机需要很多工具以及组件，此时乔布斯打起了惠普的主意。经过耐心说服，惠普公司实验室主管竟同意将一块被改造过得芯片借给乔布斯使用。于是乔布斯与助手们开始全身心的投入到研发工作中去。他们在计算机上连接了电视机，并且还使用了一个黑色键盘作为数据输入使用。当时，乔布斯根本没有意识到这样的举动会对此后个人计算机的定型产生了多么深远的影响。</p><p>1976年，乔布斯成功说服史蒂芬·沃兹涅克（Stephen Wozniak）装配机器之余跟他去推销，他们另一位朋友，罗·韦恩（Ron Wayne）也加入，三人在1976年4月1日组成了<strong>苹果电脑公司</strong>（Apple Computer Inc.）。</p><p>同年5月，乔布斯与一间本地电脑商店The Byte Shop洽商，店主保罗·泰瑞尔（Paul Terrell）同意订购50部后来被称为Apple I的设备，并在交货时支付每部500美元。乔布斯取得了这份订单后，出售自己贵重物品进行筹款，并且说服大型电子零件分销商Cramer Electronics店铺信用部经理，先给零件后付款，最终乔布斯成功地完成了这笔交易。亨利-福特组织总裁帕特里夏·莫拉迪安(Patricia Mooradian)发表声明称：“Apple-I不仅具有创新意义，而且还是为数字革命奠基的重要人工制品。”</p><p><img src="https://s2.loli.net/2022/02/07/mprtKMqPWCfxVLo.jpg" alt="apple I图 需连接电视机做为显示器"></p><h2 id="历史只会铭记成功者-lisa的问世与退场">历史只会铭记成功者——Lisa的问世与退场</h2><p>Lisa电脑的研发早在1978年秋天就已经开始，乔布斯集中精力想开发出一款新的电脑，取代老化的apple II。Lisa电脑的研发并不顺利，但突破众多。只花了<strong>三年</strong>时间（苹果电脑公司的说法是投入200人的多年努力）和5000万美元的投资，苹果公司就推出了Lisa PC机。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/FBICKo2lJLrc6h9.jpg" alt="apple Lisa图"></p><p>在硬件部分，Lisa使用一个按键的鼠标和12英寸的黑白显示屏。虽然，以今天的标准来看，Lisa非常丑，就像是一台电视机和一台烤箱的不快乐婚姻的产物，但它却远比当时市场上长相最佳的电脑性能优越。</p><p>不过，真正的创新在于软件方面，Lisa是第一款提供<strong>图形化用户接口</strong>（GUI）的商用电脑，它的特色包括下拉菜单、可视窗口、滚动条功能、垃圾箱、剪贴簿、整合的应用程序（包括电子表格应用程序、文字处理、绘图应用程序等）。</p><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>Lisa几乎什么都具备了，那它少了什么？</p></div><p>首先，Lisa与其他机器<strong>没有兼容性</strong>，这造成了一个明显的问题：有多少趋避风险的商业人士会舍弃IBM而选择苹果呢？更糟的是，Lisa的心脏——摩托罗拉68000处理器——根本无法胜任处理的GUI导向信息的所有工作；最后，也是最重要的，Lisa的<strong>价格并不低</strong>，它的市场价高达9995美元，这使得苹果电脑公司必须雇佣专门的销售团队进行推销。但是，市场上不断谣传苹果公司很快就会推出和Lisa相似但售价只有一半的新款电脑，这使得电脑销售团的工作非常艰难。</p><p>商场如战场，苹果公司最终在1985年4月把Lisa撤出市场，将近一年半内只销售了约8万台。事实上，如若不是失败的定价策略、累赘卡慢的系统和惨淡的销量，现在被众人所铭记的很有可能就是 Lisa 了。</p><h2 id="开放包容-与对手握手-imac的辉煌">开放包容，与对手握手——iMac的辉煌</h2><p>20世纪90年代世界范围内兴起互联网浪潮，在乔布斯看来，这是一场史无前例的变革，这既是苹果公司的一次机遇，同时也是一次挑战。而乔布斯也意识到苹果不能像以前那样故步自封了。</p><p>为了能够将 iMac 打造成具有竞争力的产品，乔布斯采用了大胆的举措——他破天荒地在 iMac 上使用了竞争对手微软的软件。他知道苹果公司没有赢得用户的原因是因为可供使用的软件不多，从而让用户得不到满足而选择放弃了苹果。无疑，当 iMac 装上这些令用户得心应手的软件后，用户就不用担心 iMac 在使用使用上带来的不便了。</p><p>另外，乔布斯还亲自带领设计团队到美国的一些生产糖果的工厂里去找灵感，虚心地向糖果工人请教如何让糖果看上去更让顾客喜爱。凭借在糖果工厂里面得到的经验，iMac 的外观被设计成通体圆润、色泽明亮透明，而且将传统意义上的显示器与主机结合在一起，不仅体积变轻了，而且让用户感觉更舒服了。</p><p>可以说，iMac 的出现完全融合了乔布斯的设计理念。在这种情况下，iMac一经推向市场便大受欢迎——短短一个月的时间内就卖掉了20多万台，一年时间内卖出的数量更是高达200万台。在强手如林、竞争日益激烈的情况下，苹果的表现着实让人钦佩不已。</p><h1>苹果电脑的成功原因分析</h1><h2 id="技术革新焕发魅力">技术革新焕发魅力</h2><p><strong>技术创新</strong>是苹果产品生产中的一个关键环节，从诞生之日起，它就存在于苹果公司的血液之中。在30多年的发展和进化中，苹果重新定义了技术创新的内涵，并在结合内、外部研发力量的同时，将技术创新与设计创新、营销创新、模式创新等创新方式有效结合起来，确保技术研发的高效性。</p><p>当多数企业选择委外研发的方式来降低研发成本、增进组织效率时，苹果却往反方向前进——努力控制产品被创造的过程，将自行研发作为打造其产品竞争力的关键。这对当下环境仍有借鉴意义，显然，只有自研，掌握核心科技，才不会被别人“卡脖子”，才能在当下竞争市场下留有不败之地。</p><h2 id="保持-酷-定义-酷">保持“酷” , 定义“酷”</h2><p>思考一下，苹果电脑卖的究竟是什么呢？除了它的无穷创新外，苹果卖的更是一个“<strong>酷</strong>”字。</p><p>然而回看苹果公司的历史，在沃兹尼克和apple I和apple II时代，苹果卖的更是一种“亲切”。产品本身——使用简便、个人化、色彩鲜艳、没有生硬的棱角，跟IBM冷酷的公司味道恰好相反。苹果商标就凸显了这一点：这时，苹果的“酷”是嬉皮的“酷”——拒绝主流价值观，它最早的广告好玩、轻松、反传统。在演变过程中的某个时段，苹果改变了，它抛掉了嬉皮和其他反主流文化的根基。它舍弃了彩虹色的商标，改用更雅致、更酷的苹果。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/175OXnMUEFiuHxh.jpg" alt="图左为改版前的图标，图右为改版后的图标"></p><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>是什么促使苹果改变呢？</p></div><p>最简单的答案是：苹果长大了。苹果终究还是看出，为了成长或是为了生存，它必须做出改变。停留在最初的花盆里就没有茁长成长的空间。</p><p>另一个答案是：苹果变得不像沃兹尼克了，它更像乔布斯了。沃兹尼克是个亲切、惹人喜爱的人，而乔布斯是出了名的冷酷，会令人同他无话可说。</p><blockquote><p>说到乔布斯的冷酷，插播个乔布斯小故事。<br>乔布斯的母亲23岁遗弃了他，而乔布斯在23岁时让女友怀孕并选择放弃了自己的女儿，甚至在女友拿着99%的医院血缘证明的情况下，乔布斯依旧不承认是Lisa是自己的女儿，以至于在Lisa童年近10年的时间里乔布斯都对这个小女孩儿的成长不闻不问，可奇怪的是在新一代苹果电脑命名时，他却坚持使用自己不承认的女儿的名字Lisa给新开发的电脑产品命名，非常的匪夷所思。（黑人问号.jpg）</p></blockquote><p>哪么被视为“酷”的好处之一是，你有时可以定义什么是“酷”，让人们会觉得：要是苹果这么做的话，那就代表这是酷的东西。不过坏处是，人们会对你的标准变高，会注视你的一举一动，并思考：这是否符合我们对苹果期望的最高酷标准。任何事情都有两面性，不过苹果真的很少让我们失望。</p><h2 id="以人为本的设计理念">以人为本的设计理念</h2><p>苹果公司会在设计过程中会假设出客户角色，并以此仔细斟酌产品的方方面面，从用户界面的设计，到客户最直接接触产品时的店内零售体验无所不及。更令人惊叹的是，这一理念贯穿苹果公司发展始终：从Lisa的图形化界面，到“火线”（FireWire）配件让不同设备的传输更加便捷，再到iMac的无感体验等等再小的细节，也是以人为本的设计工作中必不可少的一环，因为这些细节决定了产品看起来值一千万美元，还是一文不值。</p><p>苹果公司利用设计增加独一无二的人类感觉，让技术产品更通人性，就像房间里多了一位朋友，而不是一个惹人生气的冰冷机器。技术虽然只是在幕后通过苹果产品发挥着作用，但却给我们留下了通人性的印象。当用鼠标滑动程序界面到最后一页时，如果继续滑动，界面就会稍微移动一下紧接着反弹回来，苹果将这种交互方式称为“橡皮筋动作”。橡皮筋动作在程序设计的角度看起来完全不必要，但这样做却给人愉悦的体验感受。</p><p>苹果公司深刻理解到，人们本能地会把复杂的系统当做生物看待。因为我们在给出评价时，评价的是所有关于产品的综合体验感受，我们期待一个“<strong>友好</strong>”的产品。</p><h1>参考资料</h1><ul><li>郝美丽. 《四巨头：亚马逊、苹果、脸书和谷歌的隐藏基因》翻译报告[D]. 华南理工大学. 2019</li><li>苹果电脑诞生记[J]. 小学科学. 2019(01):34-35</li><li>“改变世界”的激将法[J]. 当代兵团. 2017(02):56</li><li>李鹏.苹果模式的思考[J]. 出版参考. 2013(33):16</li></ul>]]></content>
      
      
      <categories>
          
          <category> 我电作业 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 顶点计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5G系统的勘察与规划设计</title>
      <link href="/c7fc23e2/"/>
      <url>/c7fc23e2/</url>
      
        <content type="html"><![CDATA[<h1>5G建设规划</h1><p>5G网络建设主要依托现网站址资源，合理利用4G现网的 <span class="bubble-content">MR</span><span class="bubble-notation"><span class="bubble-item" style="background-color: Measurement Report)是4G LTE系统的一项重要功能，报告包括参考信号接收功率、参考信号接收质量、eNB接收干扰功率、eNB天线到达角、UE发射功率余量、上行丢包率、下行丢包率、上行信噪比、PRB粒度eNB接收干扰功率等。基于MR可以进行全网覆盖情况、干扰情况、上行高发射功率、UE位置定位分析，例如可利用MR中eNB接收干扰功率RIP统计分析全网干扰情况，定位高干扰小区。;">测量报告(MR</span></span>、业务统计、测试等多维数据，以提升网规方案的完备度和准确性。5G网络规划的主要流程分为两个阶段，六个环节网络规划工作的输入项包括现网基站信息、网管统计、MR数据、测试数据、投诉和电子地图等；输出网规方案，包括5G站点规模、位置、RF参数、无线参数、性能预测（仿真）结果等。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/Vkl7yt3Mzocdu2e.jpg" alt="5G规划基本流程图"></p><h2 id="站点规模估算">站点规模估算</h2><p>容量规划主要根据现场移动用户数、<span class="bubble-content">RRC连接</span><span class="bubble-notation"><span class="bubble-item" style="background-color: #DB7093;">RRC连接是会话建立以及入网的必须步骤，主要是为了建立UE和UTRAN之间的信令连接。</span></span> 用户数、在线激活用户数、上下行用户基础使用体验速率、上下行单载扇多用户吞吐能力等数据。</p><p>站点覆盖能力估算主要是根据边缘速率进行规划，是覆盖比率最差时的用户体验速率。</p><h2 id="仿真设计">仿真设计</h2><p>5G仿真设计内容包括：精细化覆盖预测、RF参数规划、MM广播权值优化调整。</p><p>RF参数规划的目的是5G网络信道质量可以满足不同场景下业务的需求。</p><p>MM广播权值优化：由于5G采用 <span class="bubble-content">波束管理</span><span class="bubble-notation"><span class="bubble-item" style="background-color: #BA55D3;">当使用高频通信时，无线信号的衰减很大，因此需要使用波束赋形技术形成有指向性的波束，以增强该方向上发射信号的功率。波束管理的主要目是为了获取和维护可用于上下行传输/接收的一组最优传输/接收点和UE波束。在5G NR的波束管理过程中，主要执行四种操作：波束扫描、波束测量、波束选择和波束上报。</span></span> ，天线权值设置对网络容量和覆盖效果产生较大影响。所以，在不同场景下对天线权值进行有针对性的选择非常重要。天线权值的概念与广播波束和业务信道的波束息息相关。在网络规划时，重点考虑SSB波束的设置问题。当前SSB的波束选择有多种组合，常见的组合包括：单波束、8波束、1+7波束、2+4波束。上述四种波束的实现都需要不同的天线权值。天线权值使用LMT软件配置到AAU中生效。</p><h1>勘察设计</h1><h2 id="基站结构与建设要求">基站结构与建设要求</h2><p>基站主要分为室内的BBU和室内的AAU，二者用光纤连接。与4G不同的是，各元件功率变大，散热需求变大，因此安装环境变高</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/UKkzrLywbvfPsRd.jpg" alt="基站结构图"></p><blockquote><p>BBU19英寸机柜安装要求:</p><ul><li>大于450mm深度的安装空间，立柱距前]100mm的走线空间；机柜后方至少留有0.6m散热空间；机柜顶部建议有风扇；安装位置不能遮挡BBU进风口和出风口；</li><li>推荐BBU优先安装位置靠机柜下侧；</li><li>单机柜推荐安装1台5GBBU,安装多台推荐使用导风理线架，两个设备间隔1U。不安装导风理线架时，两个设备间距小于 <span class="bubble-content">1U</span><span class="bubble-notation"><span class="bubble-item" style="background-color: #6A5ACD;">U为工控机箱的标准规格高度单位，1u=44MM。</span></span>（防止热风循环进入设备入风口），2个设备不能紧贴；</li><li>如有风路相反设备，BBU应安装在风路相反设备下方，并且两个设备间要留出25U散热空间；</li><li>BBU的高度是3U；BBU在19寸机柜安装时必须使用托盘或托架。</li></ul></blockquote><p>馈线窗进出线缆：GPS馈线、GPS避雷器接地、AAU电源线、BBU-AAU光纤。</p><p>室外天面环境需无明显遮挡，AAU前一百米无明显遮挡。安装AAU时，道杆直径需大于其壁厚。</p><p><img src="https://s2.loli.net/2022/02/07/NP4jApq52tGfmQy.jpg" alt="AAU安装示例图"></p><blockquote><p>冷知识——基站辐射对人体有害吗？<br>从国际上看，我国电磁辐射的辐射标准较许多发达国家还要严格。公众投诉的焦点集中在小区宏基站，担心辐射对人体健康造成影响。事实上通信基站电磁辐射只要低于国家标准限值，对人体健康是没有影响的。环境保护部对单个项目移动通信基站的环评要求更严，仅为国家标准的1/5。基站的辐射微乎其微，不会对人体造成危害。</p></blockquote><p>为了让减少群众焦虑，一般会在AAU外加装美化罩。美化罩也应符合一定标准，如AAU前面罩、左右两侧距美化罩最小50mm。</p><p><img src="https://s2.loli.net/2022/02/07/x4zRC6HidaXWDwP.jpg" alt="美化罩安装示例图"></p><h2 id="bbu结构">BBU结构</h2><p>BBU（EMB6216）前面板视图如下图。安装中，0槽位放置5G主控板，1槽位放置4G主控板，5G基带板优先插入2、3槽位，4槽位放置电源模块，8槽位放置风扇单元。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/K6S79xO1Bmav5kF.png" alt="EMB6216前面板视图"></p><p>其主要接口如下图。其中25GE接口连入核心网接口，LMT接口为5G/4G维护接口，IR接口连入AAU，10GE接口为4G回传接口。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/yOBe7RWnIaDHkud.png" alt="EMB6216接口视图"></p><h2 id="aau接口">AAU接口</h2><p><img src="https://s2.loli.net/2022/02/22/uGbmZOSeREcWKQd.png" alt="AAU接口视图"></p><h2 id="gps系统">GPS系统</h2><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/dB2yuf9O78rVnR6.png" alt="GPS系统"></p><p>时钟级联：用时钟级联网线SSI -&gt; SSO。</p><h2 id="勘察流程">勘察流程</h2><p>勘察分为初勘（网络规划现场勘察）和复勘（工程设计现场勘察）。勘察准备：人员准备（网络优化、设计院、运营商、工建等）、信息准备（工程情况、特殊要求、工程任务和范围）、拟定计划、资料收集、车辆准备、工具准备等</p><p>初勘和复勘流程如下。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/nfFX8D6kxhTJ3HC.jpg" alt="初勘流程图"></p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/yNK85rAbYo7zZpg.jpg" alt="复勘流程图"></p><p>复勘分为三部分：总体情况勘察、机房室内勘察、天面室外勘察。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/bxH8D67OjPVGE4S.jpg" alt="室内勘察流程图"></p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/6xO7D32fuzSgIGU.jpg" alt="室外勘察流程图"></p><h1>参考资料</h1><ul><li>李东霏. <a href="http://www.ictbaike.com/2021/03/26/%E4%BB%80%E4%B9%88%E6%98%AF5g-nr%E7%9A%84%E6%B3%A2%E6%9D%9F%E7%AE%A1%E7%90%86%EF%BC%9F/">什么是5G NR的波束管理？</a>. [2021-03-26]</li><li>胡郝文. <a href="https://rf.eefocus.com/article/id-335047">5G NR 波束管理和波束优化简介</a>. [2020-12-09]</li><li>中国环境报. <a href="https://nnsa.mee.gov.cn/ztzl/kpcl/201712/t20171201_427295.html">通信基站的辐射会危害健康吗？</a>. [2017-12-01]</li></ul>]]></content>
      
      
      <categories>
          
          <category> 5G </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 5G </tag>
            
            <tag> 大唐杯 </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5G频谱划分及应用</title>
      <link href="/1eae6b2/"/>
      <url>/1eae6b2/</url>
      
        <content type="html"><![CDATA[<h1>5G工作频段</h1><p>5G频谱分为两个区域——低频FR1和高频FR2，FR指Frequency Range,即频率范围。根据3GPP的R16版本规范，FR1的频率范围为720MHz到7125MHz；FR2的频率范围为24250MHz到52600MHz,FR2称为毫米波通信。</p><p>具体FR1和FR2的工作频带如下图。其中第一列为频带的编号，第二列为<a href="#%E4%B8%8A%E8%A1%8C%E5%92%8C%E4%B8%8B%E8%A1%8C">上行</a>工作频带，第三列为<a href="#%E4%B8%8A%E8%A1%8C%E5%92%8C%E4%B8%8B%E8%A1%8C">下行</a>工作频带，第四列为<a href="#%E5%8F%8C%E5%B7%A5">双工模式</a>。</p><p><img src="https://s2.loli.net/2022/02/05/Sce1WUtrqy3o97l.jpg" alt="FR1工作频段"></p><p><img src="https://s2.loli.net/2022/02/05/Ny2SvfYp9KzndbV.jpg" alt="FR2工作频段"></p><h1>基本概念</h1><h2 id="信道基本概念">信道基本概念</h2><p>说到信道，其中有很多概念，我们主要辨析以下的名词。</p><p><strong>信道</strong>就是信息传输的通道，它在通信系统中的位置如图。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/JCQEb5FLAVfonkD.jpg" alt="通信系统基本模型"></p><p><strong>信道带宽</strong>但是不是所有频率的信号都可以通过信道传输，所以我们把可以通过信道传输的信号频率范围大小就是信道带宽</p><p>还有一个比较容易混淆的概念是<strong>信道容量</strong>。信道容量就是指信号在信道上进行无差错传输所能达到的最大传输速率。对于只有单源单宿的单用户信道，它是一个数，单位是比特每秒或比特每信道符号。它代表每秒或每个信道符号能传送的最大信息量，或者说小于这个数的信息率必能在此信道中无错误地传送。由香农公式：</p><center><div class="tip key"><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mi>B</mi><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mrow><mo fence="true">(</mo><mrow><mn>1</mn><mo>+</mo><mfrac><mi>S</mi><mi>N</mi></mfrac></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">C=B\log_{2}\left ( {1+\frac{S}{N} } \right )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2223em;vertical-align:-0.35em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span><br>其中，C：信道容量，单位bit/s；B：信道带宽，单位Hz；S：信号平均功率，单位W；N：噪声平均功率，单位W}</p></div></center><p>可以看出信道带宽和信道容量的关系。<br>显然我们从公式可以看出：信道容量与信道带宽成正比，同时还取决于系统信噪比以及编码技术种类。</p><p>将信道带宽细分，可以分为<strong>传输带宽</strong>和<strong>保护带宽</strong>。传输带宽是实际有效的传输信息的频率范围。三者的关系如下图。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/gf6ejDEQcPJs5mh.png" alt="信道带宽结构"></p><h2 id="子载波基本概念">子载波基本概念</h2><p>子载波可以认为是可独立调制的一小段频域资源,我们把子载波的带宽叫做<strong>子载波间隔</strong>（SCS），与4G LTE网络子载波间隔固定为15kHZ不同，5G新空口（NR）子载波间隔是不固定的。原因是单一的载波配置无法满足5G各种场景的具体需求，应针对不同场景选择不同子载波间隔。</p><blockquote><ul><li>时延场景。子载波间隔越大，对应时隙越短，可以支持实验敏感型业务。</li><li>移动场景。不同的移动速度，产生的 <span class="bubble-content">多普勒频偏</span><span class="bubble-notation"><span class="bubble-item" style="background-color: #87CEFA;">多普勒效应是指发送端和接收端存在相对位置的偏移会产生频率失真即多普勒频移。与LTE系统相类似，如果频率偏移的大小不到子载波间隔的5%，就不会对NR系统产生无法容忍的影响。例如一个使用3.5GHz载频的NR终端的移动速度是350公里/小时，产生的多普勒频移大约是1134Hz。1134Hz是15kHz的7.56%，是30kHz的3.78%，所以对于高铁这样的高速场景，载波间隔也要至少是30kHz。</span></span> 不同。速度越快多普勒频偏越大。因此增大子载波间隔，可以提升系统对频偏的鲁棒性。</li><li>覆盖场景。子载波间隔越小，对应 <span class="bubble-content">循环前缀</span><span class="bubble-notation"><span class="bubble-item" style="background-color: CP)是将OFDM符号尾部的信号复制到头部构成的。这样可以保证有时延的OFDM信号在FFT积分周期内总是具有整倍数周期。CP的长度主要有两种，分别为常规循环前缀（Normal Cyclic Prefix）和扩展循环前缀（Extended Cyclic Prefix）。常规循环前缀长度4.7μs，扩展循环前缀长度16.67μs。循环前缀可以与其他多径分量信息相关联，得到完整的信息。;"> 循环前缀(Cyclic Prefix</span></span>（CP）长度越大，支持的小区覆盖半径也就越大。</li><li>高频应用场景。主要应用于热点区域，子载波间隔越大，越能对抗系统产生的相位噪声。</li><li>大连接场景。子载波间隔越小，子载波数目越多，覆盖范围越广，支持的接入数越多。</li></ul></blockquote><p>另外还涉及到<strong>OFDM符号</strong>的概念，一个OFDM符号的时域表示就是在时域上一次采样的结果；频域上看，一个OFDM符号占据系统带宽下的所有子载波。在5G网络中一个<strong>资源块</strong>（RB）占据一个时隙，为14个OFDM符号，在频域上占12子载波。</p><blockquote><p>e.g.<br>假设系统带宽20MHz，包含100个RB，每一个RB包含12个子载波，一共1200个子载波，子载波叠加起来作为一个时域信号，在一个时隙内做7次采样，得到7个OFDM符号，每一个符号为包含了所有1200个子载波信息。假设15KHz的子载波间隔，传输带宽就是1200*15KHz = 18M，实际上小于20M带宽。那么剩余的2M带宽则分布在两边，起保护作用，即为保护带宽。</p></blockquote><p>FR1和FR2的最大传输带宽如下图。以FR1最大传输带宽配置中“160”为例，它表示当信道带宽为30MHz、子载波间隔为15kHz时，最多能配置160个资源块。<br><img src="https://s2.loli.net/2022/02/05/f9L6BaVN54WjnCK.jpg" alt="FR1最大传输带宽配置"></p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/S9KCszEPbuiWgO2.jpg" alt="FR2最大传输带宽配置"></p><p>根据下面的公式即可计算出对应的最小保护带宽。</p><center><div class="tip key"><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>最小保护带宽</mtext><mo>=</mo><mrow><mo fence="true">(</mo><mi>C</mi><mi>H</mi><mi>B</mi><mi>W</mi><mtext>（带宽</mtext><mi>M</mi><mi>H</mi><mi>z</mi><mtext>）</mtext><mo>×</mo><mn>1000</mn><mo>−</mo><msub><mi>N</mi><mrow><mi>R</mi><mi>B</mi></mrow></msub><mo>×</mo><mi>S</mi><mi>C</mi><mi>S</mi><mo>×</mo><mn>12</mn><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><mn>2</mn><mo>−</mo><mi>S</mi><mi>C</mi><mi>S</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">最小保护带宽 = \left ( CHBW（带宽MHz）\times 1000 - N_{RB}\times SCS\times 12 \right ) /2- SCS/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">最小保护带宽</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord cjk_fallback">（带宽</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.04398em;">Hz</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1000</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">RB</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">SCS</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">12</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">/2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">SCS</span><span class="mord">/2</span></span></span></span></p></div></center><h1>国内三大运营商的频谱划分</h1><p>中国联通和中国电信获得3.5GHz的国际主流频段；中国移动获得2.6+4.9GHz的组合频段。</p><blockquote><ul><li>中国电信：3400MHz——3500MHz的100MHz</li><li>中国联通：3500MHz——3600MHz的100MHz</li><li>中国移动：2515MHz——2675MHz的160MHz和4800MHz——4900MHz的100MHz</li><li>另外，中国广播电视网络有限公司（中国广电）获得698MHz——790MHz的700MHz的5G牌照</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/G7Ho6Jrfe9VCOmk.jpg" alt="国内四大运营商工作频带总体分布情况"></p><h1>细嗦</h1><h2 id="上行和下行">上行和下行</h2><p>简单来讲，上行就是终端给基站发送信息，下行指基站给终端发送信息。</p><p>生活中，我们访问互联网的过程中存在这两种行为：一是上传数据，二是下载数据。上行宽带(速度)指的是上传的速度，而下行宽带(速度)指的是下载数据是的速度。上行宽带(速度)和下行宽带(速度)是不对称的，一般是下行速度大于上行的速度。我们平时所使用的宽带说多少M，都是指的下行宽带，因为我们上网主要是从互联网上下载数据，而上传的数据量要少很多。</p><p>另外，生活中办理的10M的宽带，结果下载速度只有1M/s左右的速度，这是为什么呢?</p><p>这是因为宽带运行商对下行速度的描述和Windows电脑显示的下行速度的单位不一样，Windows电脑的单位是KBbs,而宽带运营商的单位是 Kbbs，1B=8b。那么办理了10M的宽带，10Mbps=10240Kbps/8=1280KBps,所以在电脑上下载数据 时最大的下载速度也就是只有1M/s左右</p><h2 id="双工">双工</h2><p>双工(Duplex)是一种在单一通信信道上实现双向通信的过程，包括两种类型，分别为半双工和全双工。</p><p>在半双工系统中，通信双方使用单一的共享信道轮流发送数据。在一方发送数据时，另一方只能收听。全双工则是指同时的双向通信。通信双方可以在同一时刻收发数据。固定电话和手机的通信采用了这种方式。全双工技术又分为两种：时分双工(TDD)和频分双工(FDD)。</p><p>TDD使用单一频率来进行收发。通过分配不同的时隙，TDD系统可以利用单一频段来进行收发操作。由于数据传输速率很快，因此通信双方很难分辨数据传输是间歇性的。因此，与其使用“同时”一词来描述这种传输，“并发”一词可能更合适。TDD的真正优势在于，系统只需使用频谱的一个信道。此外，没有必要浪费频谱资源设置“安全频段”，或采取信道隔离措施。不过TDD的主要问题在于，系统在发送机和接收机两端需要非常精确的时间同步，以确保时隙不会重叠，产生相互影响。</p><p>FDD要求移动通信系统则需要两个不同的频段或信道。两个信道之间需要有足够的间距来确保收发不会相互干扰。这样的系统必须对信号进行滤波或屏蔽，才能确保信号发送机不会影响邻近的接收机。FDD通常需要更多的频谱资源，一般情况下是TDD的两倍。FDD的另一个缺点在于，很难应用多输入多输出(MIMO)天线技术和波束成形技术，因此大幅提高传输速率困难。</p><h1>参考资料</h1><ul><li>operation_w. <a href="https://blog.csdn.net/weixin_41975471/article/details/106224566">信道带宽、信道容量、香农公式</a>. [ 2020-05-19]</li><li>kkkeep learning. <a href="https://blog.csdn.net/qq_37041791/article/details/118144131">子载波间隔</a>. [2021-06-23]</li><li>水煮肉片煮面. <a href="https://www.douban.com/note/637991056/">一个OFDM符号含义的理解</a>. [2017-09-19]</li><li>软件小刘. <a href="https://zhuanlan.zhihu.com/p/90872436">上行带宽和下行带宽是什么意思，各有什么作用？</a>. [2019-11-08]</li><li>u010698858. <a href="https://blog.csdn.net/u010698858/article/details/43564809">什么是频分双工(FDD)/时分双工(TDD)</a>. [2015-02-06]</li></ul>]]></content>
      
      
      <categories>
          
          <category> 5G </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 5G </tag>
            
            <tag> 大唐杯 </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5G网络架构与组网部署</title>
      <link href="/b38434f5/"/>
      <url>/b38434f5/</url>
      
        <content type="html"><![CDATA[<h1>蜂窝移动通信系统简介</h1><p>美国的贝尔实验室最早在1947年就提出了蜂窝无线移动通信（Cellular Radio Mobile Communication）的概念，1978年完成了芝加哥先进移动电话系统 AMPS（Advanced Mobile Phone System）的试验，并且在1983年正式投入运营。由于微电子学与VLSI技术的发展，促进了蜂窝移动通信的迅速发展。</p><p>早期的移动通信系统采用大区制的强覆盖区，即建立一个无线电台基站，架设很高的天线塔(一般高于 30 m),使用很大的发射功率(一般在 50W-200W)，覆盖范围可以达到 30 km-50 km。大区制的优点是结构简单，不需要交换，但频道数量较少，覆盖范围有限。为了提高覆盖区域的系统容量与充分利用频率资源，人们提出了<strong>小区制</strong>的概念。<br><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/lLGfBbCscDE3tar.jpg" alt="蜂窝网络图"><br>如果将一个大区制覆盖的区域划分成多个小区，每个小区(cell)中设立一个基站(BS),通过基站在用户的移动台（MS）之间建立通信。小区覆盖的半径较小，一般为 1km-20 km，因此可以用较小的发射功率实现双向通信。如果每个基站提供一到几个频道，可容纳的移动用户数就可以有几十到几百个。这样，由多个小区构成的通信系统的总容量将大大提高。由若干小区构成的覆盖区叫做区群。由于小区通常呈现<strong>六边形</strong>，区群的结构酷似蜂窝，因此人们将小区制移动通信系统叫做<strong>蜂窝移动通信系统</strong>。在每个小区设立一个（或多个）基站，它与若干个移动站建立无线通信链路。区群中各小区的基站之间可以通过电缆、光缆或微波链路与移动交换中心（MSC)连接。移动交换中心通过PCM电路与市话交换局连接，从而构成了一个完整的蜂窝移动通信的网络结构。</p><h1>5G网络架构</h1><h2 id="5g总体架构">5G总体架构</h2><p>蜂窝通信系统的网络可以划分成<strong>核心网</strong>（CN）和<strong>接入网</strong>（RAN）两部分，核心网主要由基站管理器、<span class="bubble-content">网关</span><span class="bubble-notation"><span class="bubble-item" style="background-color: #8B008B;">网关(Gateway)又称网间连接器、协议转换器。默认网关在网络层以上实现网络互连，是最复杂的网络互连设备，仅用于两个高层协议不同的网络互连。网关的结构也和路由器类似，不同的是互连层。网关既可以用于广域网互连，也可以用于局域网互连。</span></span>、计费系统组成，主要为用户提供<strong>网络接入服务和管理功能</strong>;接入网主要由基站（一种<span class="bubble-content">网元</span><span class="bubble-notation"><span class="bubble-item" style="background-color:SGN;">网元是网络中的基本元素，是网络管理和监视的最小单位，基站就是一种网元，其与网元关系就是苹果与水果的关系，除此之外，网元还有MME</span></span>）组成，为用户提供<strong>无线接入功能</strong>。<br><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/image-20220717110033358.png" alt="5G网络架构图"><br>那么5G系统的总体架构是由5G核心网（5GC）和5G接入网（NG-RAN）构成的。对于非独立组网（NSA）来说，5G接入网的网元有4G增强型基站（ng-eNB）,其可以实现部分5G功能，还有5G基站（gNB）;对于独立组网（SA)来说，接入网网元全部为5G基站，接入网各网元之间由Xn接口完成控制面和用户面的实现，即可传递信令和用户数据。核心网的网元很多，主要有AMF,UPF,SMF等，核心网网元通过NG接口实现与接入网各网元的通信。</p><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/UE1YIKMVe6WzqCB.jpg" alt="4G与5G移动通信系统整体架构对比"></p><p>与4G的网络架构对比，4G中接入网的基带处理单元（<a href="#BBU%E4%B8%8ERRU">BBU</a>）分离成为5G接入网的集中单元（CU）和分布单元（DU）,这两个模块既可以合设也可将多个DU挂载到CU上，这样便于基站间的协同管理和集中处理；4G中的射频拉远模块（<a href="#BBU%E4%B8%8ERRU">RRU</a>）和天线重构成为5G中的有源天线单元（AAU），利于5G中大规模天线场景的实现。也可看到，5G核心网的功能可下放到多接入边缘计算单元（MEC），使其靠近接入网基站，便于时延的减小控制。</p><h2 id="5g核心网架构">5G核心网架构</h2><p><img src="https://s2.loli.net/2022/02/03/bjW5HsxCTQ6JkzM.jpg" alt="5G核心网架构"><br>5G核心网通过以下技术的应用，完全实现了控制与用户面的分离（CUPS）。</p><blockquote><p>NFV技术 -&gt; 灵活重构网络功能<br>SDN技术 -&gt; 灵活构建数据转发通道<br>切片技术 -&gt; 业务保障与资源利用率最大化</p></blockquote><h2 id="5g主要网元功能">5G主要网元功能</h2><ul><li><p><strong>用户面功能（UPF）</strong></p><blockquote><ul><li>用于 <span class="bubble-content">RAT</span><span class="bubble-notation"><span class="bubble-item" style="background-color: #778899;">RAT适用于无线通信网络的基础物理连接方法。现代手机可以在一个设备中支持多种无线接入技术（RAT），例如蓝牙、Wi-Fi、 NFC（近场通信）以及 3G、4G 或 LTE 和 5G。</span></span> 内/ RAT间移动性的锚点（适用时）。支持将用户业务铆钉在某一核心网锚点（anchor）（即用户从不同接入系统接入时，用户的业务数据流都从某个CN网元出去。当用户在不同接入系统之间移动时，可以保证该网元分配的用户地址保持不变），以支持计费和其他业务需求。</li><li>连接到移动通信网络的外部PDU会话点。关于什么是PDU会话，可参考这篇<a href="https://blog.csdn.net/CodeSavior/article/details/115978251">博客</a>，讲解的很详细，推荐。</li><li>数据包路由及转发。</li></ul></blockquote></li><li><p><strong>会话管理功能（SMF）</strong></p><blockquote><ul><li><p>会话建立修改和删除。（注意：在5G网络中建立PDU会话只能由终端发起，但这并不意味着终端不发起会话外部数据就无法发送给终端，在这种情况下网络会对终端进行寻呼，终端接收到寻呼进行响应，再申请PDU会话的建立即可。）</p></li><li><p>终端IP地址的分配和管理。因为PDU会话的建立是基于IP化的。</p></li><li><p>选择控制UPF。</p></li></ul></blockquote></li><li><p><strong>访问和移动性管理功能（AMF）</strong></p><blockquote><ul><li>非接入层（NAS）信令和信令的加密与完整性保护，以及 <span class="bubble-content">用户鉴权</span><span class="bubble-notation"><span class="bubble-item" style="background-color: #ADD8E6;">一种用于在通信网络中对试图访问来自服务提供商的服务的用户进行鉴权的方法。用于用户登陆到DSMP或使用数据业务时，业务网关或Portal发送此消息到DSMP，对该用户使用数据业务的合法性和有效性（状态是否为激活）进行检查。</span></span> 和秘钥管理。</li><li>初始接入使得注册与连接管理。</li><li>NAS的移动性管理。</li><li>作为终端与SMF连接的桥梁，进行消息的透传。</li></ul></blockquote></li><li><p><strong>控制面的集中单元（CU-C）</strong></p><blockquote><ul><li>接口管理。</li><li>连接管理：单连接、双连接、多连接和D2D。</li><li>负载均衡和切片资源动态管理。</li></ul></blockquote></li><li><p><strong>用户面的集中单元（CU-U）</strong></p><blockquote><p>数据包处理和转换。</p></blockquote></li><li><p><strong>分布单元（DU）</strong></p><blockquote><p>mac层的资源调度、模式转换和信道映射。</p></blockquote></li><li><p><strong>有源天线单元（AAU）</strong></p><blockquote><p>信号收发等。</p></blockquote></li></ul><h2 id="网元间的接口">网元间的接口</h2><p><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/7HiIpfrdg4FjS6y.jpg" alt="5G主要网元接口"></p><p>下面主要讲解Uu空口，它是终端和基站间的接口，其协议栈及功能如下图。至于网络协议为什么要分层，以及分层的好处，请点击 <a href="#BBU%E4%B8%8ERRU">这里</a> 快速阅读。我们通常用“<strong>三层两面</strong>”来描述协议栈的特点，其中PHY层为第一层，MAC层和RLC层为第二层，PDCP层、RRC层和NAS层为第三层，两面即指控制面和用户面。<br><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/BkxuSOq6H7U42sp.jpg" alt="空口控制面协议栈"><br>上图为空口控制面的协议栈，其用户面协议栈如下图，5G用户面新增一个协议层——SDAP层，以完成 <span class="bubble-content">QoS</span><span class="bubble-notation"><span class="bubble-item" style="background-color: #20B2AA;">QoS流是PDU会话中最精细的QoS区分粒度，这就是说两个PDU会话的区别就在于它们的QoS流不一样（具体一般就是QoS流的TFT参数不同）；在5G系统中一个QoS流ID（QFI）用于标识一条QoS流；PDU会话中具有相同QFI的用户平面数据会获得相同的转发处理（如相同的调度、相同的准入门限等）；QFI在一个PDU会话内要唯一，也就是说一个PDU会话可以有多条（最多64条）QoS流，但每条QoS流的QFI都是不同的（取值范围0~63），UE的两条PDU会话的QFI是可能会重复的；QFI可以动态配置或等于5QI。</span></span> 映射功能。<br><img src="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/2OEsyF3Tu6KGCZj.jpg" alt="空口用户面协议栈"></p><h1>网络协议分层</h1><p>在计算机网络中，人们往往进行分层处理，OSI、TCP/IP都是将这个网络体系工作的流程进行了层次化的划分，按照分层的思想把网络协议栈进行分层主要有以下好处：</p><ul><li><p>各层之间是独立的。某一层并不需要知道它的下一层是如何实现的，而仅仅需要知道该层通过层间的接口所提供的服务。这样，整个问题的复杂程度就下降了。也就是说上一层的工作如何进行并不影响下一层的工作，这样我们在进行每一层的工作设计时只要保证接口不变可以随意调整层内的工作方式。</p></li><li><p>灵活性好。当任何一层发生变化时，只要层间接口关系保持不变，则在这层以上或以下各层均不受影响。当某一层出现技术革新或者某一层在工作中出现问题时不会连累到其他层的工作，排除问题时也只需要考虑这一层单独的问题即可。</p></li><li><p>结构上可分割开。各层都可以采用最合适的技术来实现。技术的发展往往是不对称的，层次化的划分有效避免了木桶效应，不会因为某一方面技术的不完善而影响整体的工作效率。</p></li><li><p>易于实现和维护。这种结构使得实现和调试一个庞大又复杂的系统变得易于处理，因为整个的系统已被分解为若干个相对独立的子系统。进行调试和维护时，可以对每一层进行单独的调试，避免了出现找不到问题、解决错问题的情况。</p></li><li><p>能促进标准化工作。因为每一层的功能及其所提供的服务都已有了精确的说明。标准化的好处就是可以随意替换其中的某几层，对于使用和科研来说十分方便。</p></li></ul><h1>细嗦</h1><h2 id="bbu与rru">BBU与RRU</h2><p>BBU(Building Baseband Unite室内基带处理单元)集中放置在机房，RRU(Rerate Radio Unite远端射频模块)可安装至楼层，BBU与RRU之间采用光纤传输，RRU再通过同轴电缆（<del>大物电磁学噩梦</del>）及功分器(耦合器)等连接至天线，即主干采用光纤，支路采用同轴电缆。</p><ul><li><p>对于下行方向：光纤从BBU直接连到RRU，BBU和RRU之间传输的是基带数字信号，这样基站可以控制某个用户的信号从指定的RRU通道发射出去，这样可以大大降低对本小区其他通道上用户的干扰。</p></li><li><p>对于上行方向：用户手机信号被距离最近的通道收到，然后从这个通道经过光纤传到基站，这样也可以大大降低不同通道上用户之间的干扰。BBU+RRU方案对于容量配置非常灵活，可按容量需求，在不改变RRU和室内分布系统的前提下，通过配置BBU来支持每通道从1／6载波到3载波的扩容。</p></li></ul><p>理论与实践证实该方案具有下列特点：独特的多通道算法实现空间隔离，可以降低干扰；覆盖和容量可独立规划；降低对干线放大器的依赖；基带容量可实现共享，扩容能力大；光纤无损耗，主干布放简便，RRU部署灵活。但是缺点是需增加光电转换单元，且光纤较容易损坏，需要采用铠装。</p><h1>参考资料</h1><ul><li><a href="https://zhidao.baidu.com/question/1637392502351103540.html">什么是蜂窝无线通信</a>. [2018-04-16]</li><li>中移物联. <a href="https://iot.ofweek.com/2019-07/ART-132209-11000-30400453.html">深度技术剖析长文：5G核心网与接入网的演进</a>. [2019-07-26]</li><li>zhangqing822. <a href="https://www.mscbsc.com/askpro/question2642">什么是RRU和BBU?</a>. [2009-03-11]*   <a href="https://www.arrowsolution.com.cn/mobile.php/Home/Detail/articles/id/140.html">5G无线接入网中的硬件架构— 浅析BBU、RRU、AAU</a>. [2021-01-27]</li><li>LaoYuanPython. <a href="https://blog.csdn.net/LaoYuanPython/article/details/105394978">老猿学5G随笔：RAN、RAT以及anchor移动性锚点的概念</a>. [ 2020-04-08]</li><li>cloudfly_cn. <a href="https://blog.csdn.net/u010178611/article/details/81746532">5G系统——5G QoS</a>. [2018-08-16]</li></ul>]]></content>
      
      
      <categories>
          
          <category> 5G </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 5G </tag>
            
            <tag> 大唐杯 </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程语言，脚本语言or标记语言，傻傻分不清楚</title>
      <link href="/38fd64a1/"/>
      <url>/38fd64a1/</url>
      
        <content type="html"><![CDATA[<p><s>不是所有语言都叫编程语言</s></p><h1>名词解释</h1><p><em>要解释名词，当然是先百科一波。</em></p><ul><li>编程语言（英语：programming language），是用来定义计算机程序的形式语言。</li><li>脚本语言（英语：Scripting language），是为了缩短传统的“编写、编译、链接、运行”（edit-compile-link-run）过程而创建的计算机编程语言。</li><li>标记语言（英语：markup language），是一种将文本（Text）以及文本相关的其他信息结合起来，展现出关于文档结构和数据处理细节的计算机文字编码。</li></ul><p><em>看不懂正常，下面用人话翻译一下</em></p><h1>人话辨析</h1><p>编程语言通常用于向机器发出一系列复杂的指令。在程序执行之前，需要一个专门的编译过程，即使用一个编译器把代码编译成为机器语言的二进制文件，以<strong>可执行文件</strong>的形式存在，比如exe文件，以后要运行的话就不用重新翻译了，直接使用编译的结果就行了（exe文件），因为翻译只做了一次，<strong>运行时不需要翻译</strong>，所以编译型语言的程序执行效率较高。如C语言、C艹等</p><p>而脚本语言是一种解释性的语言，不需要编译，需要<strong>解释</strong>执行，由解释器来负责解释。只有在执行程序时,解释器一条一条的解释成机器语言给计算机来执行（<strong>并不生成二进制文件</strong>）, 所以运行速度是不如编译后的程序运行的快。需要注意的是，翻译器并不产生目标机器代码，而是产生易于执行的中间代码，这种中间代码与机器代码是不同的，中间代码的解释是由软件支持的，不能直接使用硬件，这也是它执行效率较低的另一个原因。如比如JavaScript、PHP、Python等</p><p>简单的来讲，标记语言就是带信息的文本，其本身没有行为能力，不能向计算机发送指令。如markdown、html等</p><h1>编译和解释</h1><p>下面具体说一些编译和解释。</p><p>编译是将源程序翻译成可执行的目标代码，翻译与执行是分开的；而解释是对源程序的翻译与执行一次性完成，不生成可存储的目标代码。这只是表象，二者背后的最大区别是：对编译执行而言，运行时的控制权在<strong>用户程序</strong>; 对解释执行而言，程序运行时的控制权在<strong>解释器</strong>而不在用户程序。</p><p>解释具有良好的动态特性和可移植性，比如在解释执行时可以动态改变变量的类型、对程序进行修改以及在程序中插入良好的调试诊断信息等，而在不同系统中，只要将解释器移植过来，则程序不用改动就可以在该系统上运行。同时解释器也有很大的缺点，比如执行效率低，占用空间大，因为不仅要给用户程序分配空间，解释器本身也占用了宝贵的系统资源。</p><p>值得注意的是，一个语言是不是”脚本”我们不应该只是从语言角度去看待,应该要从<strong>运行所在的环境</strong>去区别。比如你完全可以写一个C语言的解释器,并且将它作为脚本语言来运行。同样也可以将JavaScript编译成机器代码并且存放在可执行文件中。Ruby就是一个很好的例子,它以一个解释器(脚本语言)出现,但现在已经有多个编译器可以编译它了。</p><h1>冷知识</h1><p>最早的编程语言是在电脑发明之前产生的，当时是用来控制提花织布机及自动演奏钢琴的动作。<del>想不到吧hhh</del></p><h1>参考资料</h1><ul><li>wikipedia. <a href="https://zh.wikipedia.org/wiki/%E7%BD%AE%E6%A0%87%E8%AF%AD%E8%A8%80">markup language</a></li><li>wikipedia. <a href="https://zh.wikipedia.org/wiki/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80">programming language</a></li><li>wikipedia. <a href="https://zh.wikipedia.org/wiki/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80">Scripting language</a></li><li>petercao. <a href="https://www.cnblogs.com/bluestorm/archive/2012/12/09/2810167.html">编译和解释的区别是什么？</a>. [2012-12-09]</li><li>晨曦之园. <a href="https://blog.csdn.net/ChinaGir/article/details/97886786?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;utm_relevant_index=1">标记语言、脚本语言和编程语言的含义和比较</a>. [2019-07-31]</li><li>ophui123. <a href="https://blog.csdn.net/OPHUI123/article/details/46765615">标记语言、编程语言、脚本语言的区别？</a>. [2015.07.05]</li></ul>]]></content>
      
      
      <categories>
          
          <category> 刨根问底 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 名词辨析 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown的诞生</title>
      <link href="/53450568/"/>
      <url>/53450568/</url>
      
        <content type="html"><![CDATA[<p><em>搭建完博客框架，之后的博客将以markdown的形式书写。虽然之前也有耳闻，但这算是第一次正式使用markdown写作。<br>我的第一个专栏是刨根问底系列，主要探索各项产品、技术或服务等的前世今生，分析其产生的原因，作者的背景以及小故事，从而对其有更全面和深入的了解。那么第一篇博客就从markdown入手吧。<br>——编者按</em></p><img src ="https://cdn.jsdelivr.net/gh/asa-pic/pic_1/img/mSswRTCOg92M56l.jpg" align ="right" height="200"><h1>天才少年——Aaron Swartz</h1><p>让我们先聊聊markdown的创始人之一 、<span class="bubble-content">“互联网之子”</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#708090;">《互联网之子：亚伦斯沃茨的故事》（The Internet’s Own Boy:The Story of Aaron Swartz）讲述了Swartz，国安局，和《禁止网络盗版法案》法案的故事。《Mashable》称这部纪录片是给“Aaron Swartz的有力量的献礼”，在圣丹普西的首映中得到了观众的起立鼓掌。</span></span> Aaron Swartz吧。</p><h2 id="互联网之子">“互联网之子”</h2><p>1986年出生在芝加哥的一个犹太家庭。由于父亲创立一家软件公司，Swartz很小的时候就接触和研究编程和互联网文化。<br>2000年，14岁的他成为编写 <span class="bubble-content">RSS</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#DA70D6;">英文全称：RDF Site Summary 或 Really Simple Syndication，中文译作简易信息聚合，也称聚合内容，是一种消息来源格式规范，用以聚合多个网站更新的内容并自动通知网站订阅者。</span></span> 1.0网络联合规范的工作组成员。<br>2005年，他就读于<strong>斯坦福大学</strong>，但在第一年之后就离开了学校。</p><blockquote><p>“这里有一些很棒的教授，我当然学到了很多，但我觉得那里的氛围不是很学术，因为大多数其他孩子似乎对他们的学习完全不关心。”他在后来的博客文章中写道。</p></blockquote><p>之后他开始创业。2005年创建 <span class="bubble-content">Infogami</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#191970;"> Swartz曾申请Y Combinator的第一批夏日创始人计划，提出创办一家叫做Infogami的公司，通过建设内容管理系统，来帮助创建生动有趣的网站或者是结构化数据的维基。</span></span>，之后与Reddit合并成为其合伙人。<br>同时他也关心政治。2009 年，Swartz帮助发起了进步变革运动委员会（Progressive Change Campaign Committee）。2010 年，Swartz 与他人共同创立了政治倡导组织——求进会（Demand Progress），该组织在网上组织人们*“通过联系国会和其他领导人、资助施压策略和传播有关公民自由、政府改革的信息采取行动”* 等问题。</p><blockquote><p>他在他的博客中写道：“我每天都在试验新的方法来制定进步政策并选出进步的政治家。”</p><p>“Aaron拥有无以伦比的政治洞见力、技术能力和处理人、事的智能。我认为他本可以彻底改变美国（及世界）政治。” 科幻小说作家Cory Doctorow如是说。</p></blockquote><p>如此优秀的“天才少年”本可以大展身手，推动科技和政治的发展，不料，<strong>灾难</strong>逐渐来临。</p><h2 id="天妒英才">天妒英才</h2><p>根据州和联邦当局的说法，在 2010 年底和 2011 年初的几周内 Swartz 通过麻省理工学院（MIT）的计算机网络使用JSTOR（一个数字存储库）下载了大量学术期刊文章并上传到网络提供给网民。</p><blockquote><p>2010 年 9 月 29 日，一名 JSTOR 员工给麻省理工学院发了电子邮件：<br>请注意，这是一个极端情况。我们通常一次只暂停一个单独的 IP，并且相对不频繁地这样做（在忙碌的一天可能会暂停 6 个，来自 7000 多个机构订阅者）。在这种情况下，我在这里的 5 年里只看过大约 3 或 4 次。使用的模式是为每个 PDF 下载或每隔几个创建一个新会话，我们在高峰期的一小时内看到了超过 200K 的会话。</p></blockquote><p>2012 年 9 月 12 日，联邦检察官提交了替代起诉书，增加 9 项重罪，将 Swartz 的最高刑事风险提高到 50 年监禁和 100 万美元的罚款。2013 年 1 月 11 日晚上，斯沃茨的女友发现他在布鲁克林的公寓自缢而死。</p><p>年仅27的Swartz以这样一个方式离开真的蛮可惜的，他的生命正是为了“自由”而燃烧。他的成绩是显著的，维基百科对他的介绍是：软件工程师、作家、政治组织者、互联网活动家、维基百科人，2013年，Swartz被追授入<strong>互联网名人堂</strong>（Internet Hall of Fame）。向前看，正如媒体称，他留下的遗产仍然对当下产生着影响 。</p><h2 id="swartz和markdawn">Swartz和markdawn</h2><p><s>逐渐忘记标题</s><br>话归正题，Swartz为什么要创造markdown呢，markdown的优势在于什么呢？我们从Swartz的博客中就可窥见一斑。</p><blockquote><p>几个月来，我一直在和John Gruber合作一个新项目。这个想法是通过允许你使用几乎相同的语法并将其自动转换为HTML，使编写简单的网页，尤其是博客条目，与编写电子邮件一样简单。我们一起从上到下仔细研究了语法细节，试图开发出完美的格式，我认为我们得到了一些非常棒的东西。</p></blockquote><p>同时John Gruber 在其博客也中写到在还没有Markdown 的当年，用 BBEdit 编辑和预览 HTML 并拷贝到 Movable Type 发布的不愉快经历。这种不爽的体验促使他做出改变，才有了 Markdown 的诞生。</p><p>显然，设计 Markdown 最主要目的，是为了<strong>更好地编辑和更高的可读性</strong>。针对那些要发布在网络上的文档来说，如果需要做到结构清晰段落分明，最终都是需要转化为 HTML 格式，而书写大段的 HTML 内容绝对是糟糕的体验。Markdown 用尽可能简洁的语法格式，让创作者更专注于文章内容而非形式，这种<strong>极简主义</strong>我很欣赏，话说回来，Swartz的博客充分体现了他的极简倾向，一开始打开博客的时候我还以为没有加载完，结果等了半天发现真的只有这么多hhhhhh</p><h1>markdown优缺点</h1><h2 id="优点">优点</h2><ul><li><strong>输入简单， 容易聚焦</strong><br>像之前的 <span class="bubble-content">富文本编辑器</span><span class="bubble-notation"><span class="bubble-item" style="background-color: #556B2F;"> 英文全称：Multi-function Text Editor， 简称MTE， 是一种可内嵌于浏览器，所见即所得的文本编辑器。它可以使用户方便的更改帖子的字体、颜色等信息而不是使用html语言。</span></span> 的使用其实较为耗费创作者心智，需要选中文字，然后在选择某个样式排版功能。<br>Markdown 让一切都发生在文字输入层面。这种简化的操作使得创作不会被打断，让人容易聚焦。</li><li><strong>标准公开统一，让人安心</strong><br>使用 Markdown 进行写作是让人安心的，无论使用哪个编辑器里，基本的语法都是一致的，例如：# 就是1级标题开头，这点不会变。无论是大厂还是小厂，都要遵循这个公开标准，因此不会将创作者绑架在一个特定产品上。</li></ul><h2 id="缺点">缺点</h2><ul><li><strong>需要一定的学习成本</strong><br>相比于word之类的可视化编辑，markdown需要一定的学习成本，需要创作者了解相关的编辑格式，因此对于小白不太友好。</li></ul><h1>markdown速记知识点</h1><p><s>敲黑板</s></p><ul><li>标题：n个#就是n级标题。</li><li>换行：文末加两个以上Enter可空出一行</li><li>字体：<ul><li>*斜体* —&gt; <em>斜体</em></li><li>**粗体** —&gt; <strong>粗体</strong></li><li>***粗斜体*** —&gt; <em><strong>粗斜体</strong></em></li></ul></li><li>分割线：三个以上的-<br>删除线：~~删除线~~ —&gt; <s>删除线</s><br>下划线：~~下划线~~ —&gt; <s>下划线</s></li><li>无序列表：- + <kbd>Space</kbd><br>有序列表：<kbd>num</kbd>+<kbd>.</kbd>+<kbd>Space</kbd><br>区块：<kbd>></kbd><br>代码句：<kbd>`</kbd> + 代码 + <kbd>`</kbd><br>代码块：首尾 <kbd>```</kbd> 包裹代码（可在第一个<kbd>```</kbd> 后添加代码语言）</li><li>链接：[链接名](网址) 或 &lt;网址&gt; 或 [链接名][变量]，文末加注释<br>链接到标题：[名称](#标题名)</li><li>具体教程请戳<a href="https://www.runoob.com/markdown/md-tutorial.html">菜鸟教程</a></li></ul><h1>参考资料</h1><ul><li>Matthews, Laura. <a href="https://www.ibtimes.com/who-aaron-swartz-jstor-mit-hacker-full-text-300177">Who is Aaron Swartz, the JSTOR MIT Hacker?</a>. <em>International Business Times</em>. [2011-07-19].</li><li>Aaron Swartz. <a href="http://www.aaronsw.com/weblog/pcccjob">How to Get a Job Like Mine</a>. [2010-04-07]</li><li>Aaron Swartz.<a href="http://www.aaronsw.com/weblog/001189">markdown</a>. [2004-03-19]</li><li>Wikipedia. <a href="https://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8">Aaron Swartz</a></li><li>github_39294367. <a href="https://blog.csdn.net/github_39294367/article/details/103784632?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1.pc_relevant_aa&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~Rate-1.pc_relevant_aa&amp;utm_relevant_index=1">markdown</a>. [2019-05-09]</li><li>Another developer’s blog. <a href="https://lin.am/blog/2018-11-15-markdown-history/">Markdown 发展史</a></li><li>望儿山下小苗圃. <a href="https://blog.csdn.net/leozhangit/article/details/109224226">Markdown的前世今生 + CSDN的Markdown语法和使用大全</a>. [2020-10-22]</li></ul>]]></content>
      
      
      <categories>
          
          <category> 刨根问底 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 历史 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
